{"version":3,"mappings":"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","names":["Route","constructor","hostRef","registerInstance","ionRouteDataChanged","createEvent","url","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","RouteRedirect","ionRouteRedirectChanged","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","beforeEnter","beforeLeave","a","b","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","_this","runGuards","getSegments","canProceed","setSegments","writeNavStateRoot","onRoutesChanged","componentDidLoad","debounce","onRedirectChanged","bind","onPopState","_this2","historyDirection","onBackButton","ev","detail","register","processNextHandler","back","canTransition","_this3","startsWith","currentPath","_this4","URL","search","parsedPath","waitPromise","printDebug","_this5","navChanged","_this6","warn","safeWriteNavState","win","title","location","href","_this7","redirectFrom","toSegments","_this8","lock","unlock","p","_this9","_this10","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","_this11","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","getElement","routerLinkCss","RouterLink","routerDirection","onClick","openURL","routerAnimation","render","mode","getIonMode","attrs","rel","target","h","Host","class","createColorClasses","color","style","hostContext","selector","closest","cssClassMap","getClassList","classes","array","isArray","c","getClassMap","SCHEME","test","router","preventDefault"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js","webpack:///node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-8e692445.js';\nimport { c as componentOnReady, q as debounce } from './helpers-3b390e48.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { o as openURL, c as createColorClasses } from './theme-7670341c.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n/** Join the non empty segments with \"/\". */\nconst generatePath = (segments) => {\n  const path = segments.filter((s) => s.length > 0).join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nconst chainToSegments = (chain) => {\n  const segments = [];\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        segments.push(param);\n      }\n      else if (segment !== '') {\n        segments.push(segment);\n      }\n    }\n  }\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n  return segments.slice(prefix.length);\n};\nconst readSegments = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n    segments = path\n      .split('/')\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const segments = [];\n    chain.forEach((r) => segments.push(...r.segments));\n    const ids = chain.map((r) => r.id);\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // eslint-disable-next-line no-cond-assign\n  while ((outlet = searchNavNode(node))) {\n    const id = await outlet.getRouteId();\n    if (id) {\n      node = id.element;\n      id.element = undefined;\n      ids.push(id);\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n  });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n  const outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nconst matchesRedirect = (segments, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > segments.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nconst findRouteRedirect = (segments, redirects) => {\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      // Only compare routes with the chain that have the same number of parameters.\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nconst matchesSegments = (segments, chain) => {\n  const inputSegments = new RouterSegments(segments);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const chainSegments = chain[i].segments;\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of chainSegments) {\n        const data = inputSegments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      segments: route.segments,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave,\n    }));\n  }\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nconst findChainForIDs = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => {\n      var _a;\n      return ({\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n      });\n    });\n  }\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nconst findChainForSegments = (segments, chains) => {\n  let match = null;\n  let bestScore = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesSegments(segments, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > bestScore) {\n        bestScore = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (segment !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(segments) {\n    this.segments = segments.slice();\n  }\n  next() {\n    if (this.segments.length > 0) {\n      return this.segments.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map((el) => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n    .map((el) => {\n    const component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el),\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n  chain = [\n    ...chain,\n    {\n      id: node.id,\n      segments: node.segments,\n      params: node.params,\n      beforeLeave: node.beforeLeave,\n      beforeEnter: node.beforeEnter,\n    },\n  ];\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getSegments());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getSegments();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, (processNextHandler) => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified path.\n   *\n   * @param path The path to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(path, direction = 'forward', animation) {\n    var _a;\n    if (path.startsWith('.')) {\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n      const url = new URL(path, `https://host/${currentPath}`);\n      path = url.pathname + url.search;\n    }\n    let parsedPath = parsePath(path);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /** Go back to previous page in the window.history. */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = findChainForIDs(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n      return false;\n    }\n    const segments = chainToSegments(chain);\n    if (!segments) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setSegments(segments, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n    return true;\n  }\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n  onRedirectChanged() {\n    const segments = this.getSegments();\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n    }\n  }\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(segments, direction, animation) {\n    if (!segments) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(segments, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments: toSegments, queryString } = redirect.to;\n      this.setSegments(toSegments, direction, queryString);\n      redirectFrom = redirect.from;\n      segments = toSegments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = findChainForSegments(segments, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  /**\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n   *\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n   * Otherwise the beforeEnterHook hook of the target route is executed.\n   */\n  async runGuards(to = this.getSegments(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = findChainForSegments(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = findChainForSegments(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setSegments(segments, direction, queryString) {\n    this.state++;\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n  }\n  getSegments() {\n    return readSegments(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(toSegments, redirectFromSegments) {\n    const from = this.previousPath;\n    const to = generatePath(toSegments);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target,\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true,\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]}