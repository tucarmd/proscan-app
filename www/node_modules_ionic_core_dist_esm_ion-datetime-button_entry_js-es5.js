(function () {
  "use strict";

  function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }

  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }

  function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }

  function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }

  function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }

  function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

  function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

  (self["webpackChunkcom_carmd_proscan2"] = self["webpackChunkcom_carmd_proscan2"] || []).push([["node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js"], {
    /***/
    16519:
    /*!************************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/ion-datetime-button.entry.js ***!
      \************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ion_datetime_button": function ion_datetime_button() {
          return (
            /* binding */
            DatetimeButton
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */
      19369);
      /* harmony import */


      var _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./index-8e692445.js */
      91477);
      /* harmony import */


      var _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./ionic-global-c74e4951.js */
      45460);
      /* harmony import */


      var _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./helpers-3b390e48.js */
      83870);
      /* harmony import */


      var _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./index-c4b11676.js */
      10570);
      /* harmony import */


      var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./theme-7670341c.js */
      31756);
      /* harmony import */


      var _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./data-caf38df0.js */
      50776);
      /*!
       * (C) Ionic http://ionicframework.com - MIT License
       */


      var iosDatetimeButtonCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}";
      var mdDatetimeButtonCss = ":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}";

      var DatetimeButton = /*#__PURE__*/function () {
        function DatetimeButton(hostRef) {
          var _this3 = this;

          _classCallCheck(this, DatetimeButton);

          var _this = this;

          (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
          this.datetimeEl = null;
          this.overlayEl = null;
          this.datetimePresentation = 'date-time';
          this.datetimeActive = false;
          /**
           * The color to use from your application's color palette.
           * Default options are: `"primary"`, `"secondary"`, `"tertiary"`, `"success"`, `"warning"`, `"danger"`, `"light"`, `"medium"`, and `"dark"`.
           * For more information on colors, see [theming](/docs/theming/basics).
           */

          this.color = 'primary';
          /**
           * If `true`, the user cannot interact with the button.
           */

          this.disabled = false;
          /**
           * Accepts one or more string values and converts
           * them to DatetimeParts. This is done so datetime-button
           * can work with an array internally and not need
           * to keep checking if the datetime value is `string` or `string[]`.
           */

          this.getParsedDateValues = function (value) {
            // TODO FW-2646 Remove value === ''
            if (value === '' || value === undefined || value === null) {
              return [];
            }

            if (Array.isArray(value)) {
              return value;
            }

            return [value];
          };
          /**
           * Check the value property on the linked
           * ion-datetime and then format it according
           * to the locale specified on ion-datetime.
           */


          this.setDateTimeText = function () {
            var datetimeEl = _this3.datetimeEl,
                datetimePresentation = _this3.datetimePresentation;

            if (!datetimeEl) {
              return;
            }

            var value = datetimeEl.value,
                locale = datetimeEl.locale,
                hourCycle = datetimeEl.hourCycle,
                preferWheel = datetimeEl.preferWheel,
                multiple = datetimeEl.multiple,
                titleSelectedDatesFormatter = datetimeEl.titleSelectedDatesFormatter;

            var parsedValues = _this3.getParsedDateValues(value);
            /**
             * Both ion-datetime and ion-datetime-button default
             * to today's date and time if no value is set.
             */


            var parsedDatetimes = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.q)(parsedValues.length > 0 ? parsedValues : [(0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.t)()]);
            /**
             * If developers incorrectly use multiple="true"
             * with non "date" datetimes, then just select
             * the first value so the interface does
             * not appear broken. Datetime will provide a
             * warning in the console.
             */

            var firstParsedDatetime = parsedDatetimes[0];
            var use24Hour = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.J)(locale, hourCycle); // TODO(FW-1865) - Remove once FW-1831 is fixed.

            parsedDatetimes.forEach(function (parsedDatetime) {
              parsedDatetime.tzOffset = undefined;
            });
            _this3.dateText = _this3.timeText = undefined;

            switch (datetimePresentation) {
              case 'date-time':
              case 'time-date':
                var dateText = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.T)(locale, firstParsedDatetime);
                var timeText = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.K)(locale, firstParsedDatetime, use24Hour);

                if (preferWheel) {
                  _this3.dateText = "".concat(dateText, " ").concat(timeText);
                } else {
                  _this3.dateText = dateText;
                  _this3.timeText = timeText;
                }

                break;

              case 'date':
                if (multiple && parsedValues.length !== 1) {
                  var headerText = "".concat(parsedValues.length, " days"); // default/fallback for multiple selection

                  if (titleSelectedDatesFormatter !== undefined) {
                    try {
                      headerText = titleSelectedDatesFormatter(parsedValues);
                    } catch (e) {
                      (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_4__.b)('Exception in provided `titleSelectedDatesFormatter`: ', e);
                    }
                  }

                  _this3.dateText = headerText;
                } else {
                  _this3.dateText = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.T)(locale, firstParsedDatetime);
                }

                break;

              case 'time':
                _this3.timeText = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.K)(locale, firstParsedDatetime, use24Hour);
                break;

              case 'month-year':
                _this3.dateText = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.G)(locale, firstParsedDatetime);
                break;

              case 'month':
                _this3.dateText = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.S)(locale, firstParsedDatetime, {
                  month: 'long'
                });
                break;

              case 'year':
                _this3.dateText = (0, _data_caf38df0_js__WEBPACK_IMPORTED_MODULE_6__.S)(locale, firstParsedDatetime, {
                  year: 'numeric'
                });
                break;
            }
          };
          /**
           * Waits for the ion-datetime to re-render.
           * This is needed in order to correctly position
           * a popover relative to the trigger element.
           */


          this.waitForDatetimeChanges = /*#__PURE__*/(0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            var datetimeEl;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  datetimeEl = _this.datetimeEl;

                  if (datetimeEl) {
                    _context.next = 3;
                    break;
                  }

                  return _context.abrupt("return", Promise.resolve());

                case 3:
                  return _context.abrupt("return", new Promise(function (resolve) {
                    (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_3__.a)(datetimeEl, 'ionRender', resolve, {
                      once: true
                    });
                  }));

                case 4:
                case "end":
                  return _context.stop();
              }
            }, _callee);
          }));

          this.handleDateClick = /*#__PURE__*/function () {
            var _ref2 = (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev) {
              var datetimeEl, datetimePresentation, needsPresentationChange, needsChange;
              return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                while (1) switch (_context2.prev = _context2.next) {
                  case 0:
                    datetimeEl = _this.datetimeEl, datetimePresentation = _this.datetimePresentation;

                    if (datetimeEl) {
                      _context2.next = 3;
                      break;
                    }

                    return _context2.abrupt("return");

                  case 3:
                    needsPresentationChange = false;
                    /**
                     * When clicking the date button,
                     * we need to make sure that only a date
                     * picker is displayed. For presentation styles
                     * that display content other than a date picker,
                     * we need to update the presentation style.
                     */

                    _context2.t0 = datetimePresentation;
                    _context2.next = _context2.t0 === 'date-time' ? 7 : _context2.t0 === 'time-date' ? 7 : 10;
                    break;

                  case 7:
                    needsChange = datetimeEl.presentation !== 'date';
                    /**
                     * The date+time wheel picker
                     * shows date and time together,
                     * so do not adjust the presentation
                     * in that case.
                     */

                    if (!datetimeEl.preferWheel && needsChange) {
                      datetimeEl.presentation = 'date';
                      needsPresentationChange = true;
                    }

                    return _context2.abrupt("break", 10);

                  case 10:
                    /**
                     * Track which button was clicked
                     * so that it can have the correct
                     * activated styles applied when
                     * the modal/popover containing
                     * the datetime is opened.
                     */
                    _this.selectedButton = 'date';

                    _this.presentOverlay(ev, needsPresentationChange, _this.dateTargetEl);

                  case 12:
                  case "end":
                    return _context2.stop();
                }
              }, _callee2);
            }));

            return function (_x) {
              return _ref2.apply(this, arguments);
            };
          }();

          this.handleTimeClick = function (ev) {
            var datetimeEl = _this3.datetimeEl,
                datetimePresentation = _this3.datetimePresentation;

            if (!datetimeEl) {
              return;
            }

            var needsPresentationChange = false;
            /**
             * When clicking the time button,
             * we need to make sure that only a time
             * picker is displayed. For presentation styles
             * that display content other than a time picker,
             * we need to update the presentation style.
             */

            switch (datetimePresentation) {
              case 'date-time':
              case 'time-date':
                var needsChange = datetimeEl.presentation !== 'time';

                if (needsChange) {
                  datetimeEl.presentation = 'time';
                  needsPresentationChange = true;
                }

                break;
            }
            /**
             * Track which button was clicked
             * so that it can have the correct
             * activated styles applied when
             * the modal/popover containing
             * the datetime is opened.
             */


            _this3.selectedButton = 'time';

            _this3.presentOverlay(ev, needsPresentationChange, _this3.timeTargetEl);
          };
          /**
           * If the datetime is presented in an
           * overlay, the datetime and overlay
           * should be appropriately sized.
           * These classes provide default sizing values
           * that developers can customize.
           * The goal is to provide an overlay that is
           * reasonably sized with a datetime that
           * fills the entire container.
           */


          this.presentOverlay = /*#__PURE__*/function () {
            var _ref3 = (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ev, needsPresentationChange, triggerEl) {
              var overlayEl;
              return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                while (1) switch (_context3.prev = _context3.next) {
                  case 0:
                    overlayEl = _this.overlayEl;

                    if (overlayEl) {
                      _context3.next = 3;
                      break;
                    }

                    return _context3.abrupt("return");

                  case 3:
                    if (!(overlayEl.tagName === 'ION-POPOVER')) {
                      _context3.next = 10;
                      break;
                    }

                    if (!needsPresentationChange) {
                      _context3.next = 7;
                      break;
                    }

                    _context3.next = 7;
                    return _this.waitForDatetimeChanges();

                  case 7:
                    /**
                     * We pass the trigger button element
                     * so that the popover aligns with the individual
                     * button that was clicked, not the component container.
                     */
                    overlayEl.present(Object.assign(Object.assign({}, ev), {
                      detail: {
                        ionShadowTarget: triggerEl
                      }
                    }));
                    _context3.next = 11;
                    break;

                  case 10:
                    overlayEl.present();

                  case 11:
                  case "end":
                    return _context3.stop();
                }
              }, _callee3);
            }));

            return function (_x2, _x3, _x4) {
              return _ref3.apply(this, arguments);
            };
          }();
        }

        return _createClass(DatetimeButton, [{
          key: "componentWillLoad",
          value: function componentWillLoad() {
            var _this2 = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
              var datetime, datetimeEl, io, overlayEl;
              return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                while (1) switch (_context4.prev = _context4.next) {
                  case 0:
                    datetime = _this2.datetime;

                    if (datetime) {
                      _context4.next = 4;
                      break;
                    }

                    (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_4__.b)('An ID associated with an ion-datetime instance is required for ion-datetime-button to function properly.', _this2.el);
                    return _context4.abrupt("return");

                  case 4:
                    datetimeEl = _this2.datetimeEl = document.getElementById(datetime);

                    if (datetimeEl) {
                      _context4.next = 8;
                      break;
                    }

                    (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_4__.b)("No ion-datetime instance found for ID '".concat(datetime, "'."), _this2.el);
                    return _context4.abrupt("return");

                  case 8:
                    /**
                     * Since the datetime can be used in any context (overlays, accordion, etc)
                     * we track when it is visible to determine when it is active.
                     * This informs which button is highlighted as well as the
                     * aria-expanded state.
                     */
                    io = new IntersectionObserver(function (entries) {
                      var ev = entries[0];
                      _this2.datetimeActive = ev.isIntersecting;
                    }, {
                      threshold: 0.01
                    });
                    io.observe(datetimeEl);
                    /**
                     * Get a reference to any modal/popover
                     * the datetime is being used in so we can
                     * correctly size it when it is presented.
                     */

                    overlayEl = _this2.overlayEl = datetimeEl.closest('ion-modal, ion-popover');
                    /**
                     * The .ion-datetime-button-overlay class contains
                     * styles that allow any modal/popover to be
                     * sized according to the dimensions of the datetime.
                     * If developers want a smaller/larger overlay all they need
                     * to do is change the width/height of the datetime.
                     * Additionally, this lets us avoid having to set
                     * explicit widths on each variant of datetime.
                     */

                    if (overlayEl) {
                      overlayEl.classList.add('ion-datetime-button-overlay');
                    }

                    (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_3__.c)(datetimeEl, function () {
                      var datetimePresentation = _this2.datetimePresentation = datetimeEl.presentation || 'date-time';
                      /**
                       * Set the initial display
                       * in the rendered buttons.
                       *
                       * From there, we need to listen
                       * for ionChange to be emitted
                       * from datetime so we know when
                       * to re-render the displayed
                       * text in the buttons.
                       */

                      _this2.setDateTimeText();

                      (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_3__.a)(datetimeEl, 'ionChange', _this2.setDateTimeText);
                      /**
                       * Configure the initial selected button
                       * in the event that the datetime is displayed
                       * without clicking one of the datetime buttons.
                       * For example, a datetime could be expanded
                       * in an accordion. In this case users only
                       * need to click the accordion header to show
                       * the datetime.
                       */

                      switch (datetimePresentation) {
                        case 'date-time':
                        case 'date':
                        case 'month-year':
                        case 'month':
                        case 'year':
                          _this2.selectedButton = 'date';
                          break;

                        case 'time-date':
                        case 'time':
                          _this2.selectedButton = 'time';
                          break;
                      }
                    });

                  case 13:
                  case "end":
                    return _context4.stop();
                }
              }, _callee4);
            }))();
          }
        }, {
          key: "render",
          value: function render() {
            var _this4 = this;

            var color = this.color,
                dateText = this.dateText,
                timeText = this.timeText,
                selectedButton = this.selectedButton,
                datetimeActive = this.datetimeActive,
                disabled = this.disabled;
            var mode = (0, _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
            return (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.H, {
              "class": (0, _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_5__.c)(color, _defineProperty(_defineProperty(_defineProperty({}, mode, true), "".concat(selectedButton, "-active"), datetimeActive), 'datetime-button-disabled', disabled))
            }, dateText && (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
              "class": "ion-activatable",
              id: "date-button",
              "aria-expanded": datetimeActive ? 'true' : 'false',
              onClick: this.handleDateClick,
              disabled: disabled,
              part: "native",
              ref: function ref(el) {
                return _this4.dateTargetEl = el;
              }
            }, (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
              name: "date-target"
            }, dateText), mode === 'md' && (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-ripple-effect", null)), timeText && (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
              "class": "ion-activatable",
              id: "time-button",
              "aria-expanded": datetimeActive ? 'true' : 'false',
              onClick: this.handleTimeClick,
              disabled: disabled,
              part: "native",
              ref: function ref(el) {
                return _this4.timeTargetEl = el;
              }
            }, (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", {
              name: "time-target"
            }, timeText), mode === 'md' && (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-ripple-effect", null)));
          }
        }, {
          key: "el",
          get: function get() {
            return (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
          }
        }]);
      }();

      DatetimeButton.style = {
        ios: iosDatetimeButtonCss,
        md: mdDatetimeButtonCss
      };
      /***/
    }
  }]);
})();
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js-es5.js.map