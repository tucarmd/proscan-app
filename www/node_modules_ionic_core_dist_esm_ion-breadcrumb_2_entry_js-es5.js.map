{"version":3,"mappings":"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","names":["hostRef","ionShadowTarget","color","active","collapsed","disabled","download","el","inheritedAttributes","last","routerAnimation","routerDirection","separator","showCollapsedIndicator","target","href","_index_8e692445_js__WEBPACK_IMPORTED_MODULE_0__","onClick","ev","mode","clickable","TagType","Object","attrs","part","onFocus","onBlur","name","ref","icon","_index_2bcb741c_js__WEBPACK_IMPORTED_MODULE_1__","lazy","showSeparator","Breadcrumb","ios","md","activeBreadcrumb","itemsAfterCollapse","itemsBeforeCollapse","maxItems","breadcrumbs","breadcrumb","collapsedBreadcrumbs","onSlotchange","Breadcrumbs","hostContext","selector","closest","createColorClasses","cssClassMap","length","assign","getClassList","classes","undefined","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","direction","animation","test","router","document","querySelector","preventDefault","push"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-breadcrumb_2.entry.js","webpack:///node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-8e692445.js';\nimport { m as chevronForwardOutline, n as ellipsisHorizontal } from './index-2bcb741c.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { i as inheritAriaAttributes } from './helpers-3b390e48.js';\nimport { o as openURL, c as createColorClasses, h as hostContext } from './theme-7670341c.js';\n\nconst breadcrumbIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-850, #2d4665);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--color-active);--background-focused:var(--ion-color-step-50, rgba(233, 237, 243, 0.7))}:host(.breadcrumb-active){font-weight:600}.breadcrumb-native{border-radius:4px;padding-left:12px;padding-right:12px;padding-top:5px;padding-bottom:5px;border:1px solid transparent}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-focused) .breadcrumb-native{border-radius:8px}:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,:host(.ion-color.ion-focused) .breadcrumb-native{background:rgba(var(--ion-color-base-rgb), 0.1);color:var(--ion-color-base)}:host(.ion-focused) ::slotted(ion-icon),:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),:host(.ion-color.ion-focused) ::slotted(ion-icon){color:var(--ion-color-step-750, #445b78)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-400, #92a0b3);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #242d39)}.breadcrumbs-collapsed-indicator{border-radius:4px;background:var(--ion-color-step-100, #e9edf3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.45}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #d9e0ea)}\";\n\nconst breadcrumbMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-600, #677483);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--ion-color-step-800, #35404e);--background-focused:$breadcrumb-md-background-focused}:host(.breadcrumb-active){font-weight:500}.breadcrumb-native{padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}.breadcrumb-separator{margin-left:10px;margin-right:10px;margin-top:-1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-separator{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}:host(.ion-focused) .breadcrumb-native{border-radius:4px;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-550, #7d8894);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #222d3a)}.breadcrumbs-collapsed-indicator{border-radius:2px;background:var(--ion-color-step-100, #eef1f3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.7}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #dfe5e8)}\";\n\nconst Breadcrumb = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.collapsedClick = createEvent(this, \"collapsedClick\", 7);\n    this.inheritedAttributes = {};\n    /** @internal */\n    this.collapsed = false;\n    /**\n     * If `true`, the breadcrumb will take on a different look to show that\n     * it is the currently active breadcrumb. Defaults to `true` for the\n     * last breadcrumb if it is not set on any.\n     */\n    this.active = false;\n    /**\n     * If `true`, the user cannot interact with the breadcrumb.\n     */\n    this.disabled = false;\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.collapsedIndicatorClick = () => {\n      this.collapsedClick.emit({ ionShadowTarget: this.collapsedRef });\n    };\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  isClickable() {\n    return this.href !== undefined;\n  }\n  render() {\n    const { color, active, collapsed, disabled, download, el, inheritedAttributes, last, routerAnimation, routerDirection, separator, showCollapsedIndicator, target, } = this;\n    const clickable = this.isClickable();\n    const TagType = this.href === undefined ? 'span' : 'a';\n    // Links can still be tabbed to when set to disabled if they have an href\n    // in order to truly disable them we can keep it as an anchor but remove the href\n    const href = disabled ? undefined : this.href;\n    const mode = getIonMode(this);\n    const attrs = TagType === 'span'\n      ? {}\n      : {\n        download,\n        href,\n        target,\n      };\n    // If the breadcrumb is collapsed, check if it contains the collapsed indicator\n    // to show the separator as long as it isn't also the last breadcrumb\n    // otherwise if not collapsed use the value in separator\n    const showSeparator = last ? false : collapsed ? (showCollapsedIndicator && !last ? true : false) : separator;\n    return (h(Host, { onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation), \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        'breadcrumb-active': active,\n        'breadcrumb-collapsed': collapsed,\n        'breadcrumb-disabled': disabled,\n        'in-breadcrumbs-color': hostContext('ion-breadcrumbs[color]', el),\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'ion-activatable': clickable,\n        'ion-focusable': clickable,\n      }) }, h(TagType, Object.assign({}, attrs, { class: \"breadcrumb-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"slot\", { name: \"start\" }), h(\"slot\", null), h(\"slot\", { name: \"end\" })), showCollapsedIndicator && (h(\"button\", { part: \"collapsed-indicator\", onClick: () => this.collapsedIndicatorClick(), ref: (collapsedEl) => (this.collapsedRef = collapsedEl), class: {\n        'breadcrumbs-collapsed-indicator': true,\n      } }, h(\"ion-icon\", { icon: ellipsisHorizontal, lazy: false }))), showSeparator && (\n    /**\n     * Separators should not be announced by narrators.\n     * We add aria-hidden on the span so that this applies\n     * to any custom separators too.\n     */\n    h(\"span\", { class: \"breadcrumb-separator\", part: \"separator\", \"aria-hidden\": \"true\" }, h(\"slot\", { name: \"separator\" }, mode === 'ios' ? (h(\"ion-icon\", { icon: chevronForwardOutline, lazy: false, \"flip-rtl\": true })) : (h(\"span\", null, \"/\")))))));\n  }\n  get el() { return getElement(this); }\n};\nBreadcrumb.style = {\n  ios: breadcrumbIosCss,\n  md: breadcrumbMdCss\n};\n\nconst breadcrumbsIosCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:20px;padding-right:20px;padding-top:0;padding-bottom:0;-ms-flex-pack:center;justify-content:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}\";\n\nconst breadcrumbsMdCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Breadcrumbs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionCollapsedClick = createEvent(this, \"ionCollapsedClick\", 7);\n    /**\n     * The number of breadcrumbs to show before the collapsed indicator.\n     * If `itemsBeforeCollapse` + `itemsAfterCollapse` is greater than `maxItems`,\n     * the breadcrumbs will not be collapsed.\n     */\n    this.itemsBeforeCollapse = 1;\n    /**\n     * The number of breadcrumbs to show after the collapsed indicator.\n     * If `itemsBeforeCollapse` + `itemsAfterCollapse` is greater than `maxItems`,\n     * the breadcrumbs will not be collapsed.\n     */\n    this.itemsAfterCollapse = 1;\n    this.breadcrumbsInit = () => {\n      this.setBreadcrumbSeparator();\n      this.setMaxItems();\n    };\n    this.resetActiveBreadcrumb = () => {\n      const breadcrumbs = this.getBreadcrumbs();\n      // Only reset the active breadcrumb if we were the ones to change it\n      // otherwise use the one set on the component\n      const activeBreadcrumb = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n      if (activeBreadcrumb && this.activeChanged) {\n        activeBreadcrumb.active = false;\n      }\n    };\n    this.setMaxItems = () => {\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n      const breadcrumbs = this.getBreadcrumbs();\n      for (const breadcrumb of breadcrumbs) {\n        breadcrumb.showCollapsedIndicator = false;\n        breadcrumb.collapsed = false;\n      }\n      // If the number of breadcrumbs exceeds the maximum number of items\n      // that should show and the items before / after collapse do not\n      // exceed the maximum items then we need to collapse the breadcrumbs\n      const shouldCollapse = maxItems !== undefined && breadcrumbs.length > maxItems && itemsBeforeCollapse + itemsAfterCollapse <= maxItems;\n      if (shouldCollapse) {\n        // Show the collapsed indicator in the first breadcrumb that collapses\n        breadcrumbs.forEach((breadcrumb, index) => {\n          if (index === itemsBeforeCollapse) {\n            breadcrumb.showCollapsedIndicator = true;\n          }\n          // Collapse all breadcrumbs that have an index greater than or equal to\n          // the number before collapse and an index less than the total number\n          // of breadcrumbs minus the items that should show after the collapse\n          if (index >= itemsBeforeCollapse && index < breadcrumbs.length - itemsAfterCollapse) {\n            breadcrumb.collapsed = true;\n          }\n        });\n      }\n    };\n    this.setBreadcrumbSeparator = () => {\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n      const breadcrumbs = this.getBreadcrumbs();\n      // Check if an active breadcrumb exists already\n      const active = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n      // Set the separator on all but the last breadcrumb\n      for (const breadcrumb of breadcrumbs) {\n        // The only time the last breadcrumb changes is when\n        // itemsAfterCollapse is set to 0, in this case the\n        // last breadcrumb will be the collapsed indicator\n        const last = maxItems !== undefined && itemsAfterCollapse === 0\n          ? breadcrumb === breadcrumbs[itemsBeforeCollapse]\n          : breadcrumb === breadcrumbs[breadcrumbs.length - 1];\n        breadcrumb.last = last;\n        // If the breadcrumb has defined whether or not to show the\n        // separator then use that value, otherwise check if it's the\n        // last breadcrumb\n        const separator = breadcrumb.separator !== undefined ? breadcrumb.separator : last ? undefined : true;\n        breadcrumb.separator = separator;\n        // If there is not an active breadcrumb already\n        // set the last one to active\n        if (!active && last) {\n          breadcrumb.active = true;\n          this.activeChanged = true;\n        }\n      }\n    };\n    this.getBreadcrumbs = () => {\n      return Array.from(this.el.querySelectorAll('ion-breadcrumb'));\n    };\n    this.slotChanged = () => {\n      this.resetActiveBreadcrumb();\n      this.breadcrumbsInit();\n    };\n  }\n  onCollapsedClick(ev) {\n    const breadcrumbs = this.getBreadcrumbs();\n    const collapsedBreadcrumbs = breadcrumbs.filter((breadcrumb) => breadcrumb.collapsed);\n    this.ionCollapsedClick.emit(Object.assign(Object.assign({}, ev.detail), { collapsedBreadcrumbs }));\n  }\n  maxItemsChanged() {\n    this.resetActiveBreadcrumb();\n    this.breadcrumbsInit();\n  }\n  componentWillLoad() {\n    this.breadcrumbsInit();\n  }\n  render() {\n    const { color, collapsed } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'breadcrumbs-collapsed': collapsed,\n      }) }, h(\"slot\", { onSlotchange: this.slotChanged })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"maxItems\": [\"maxItemsChanged\"],\n    \"itemsBeforeCollapse\": [\"maxItemsChanged\"],\n    \"itemsAfterCollapse\": [\"maxItemsChanged\"]\n  }; }\n};\nBreadcrumbs.style = {\n  ios: breadcrumbsIosCss,\n  md: breadcrumbsMdCss\n};\n\nexport { Breadcrumb as ion_breadcrumb, Breadcrumbs as ion_breadcrumbs };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]}