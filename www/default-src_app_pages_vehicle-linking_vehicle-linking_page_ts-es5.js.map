{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_24__","VehicleLinkingPage","modalController","innovaVciService","helper","navigationService","connService","platform","insomnia","zone","diagnostic","openNativeSettings","reportService","eventService","barcodeScanner","changeDetector","vehicleService","ble","_VehicleLinkingPage_vehicleData","result","status","console","log","run","resultText","logger","debug","statusText","device","publish","src_app_services_innova_tool_models__WEBPACK_IMPORTED_MODULE_3__","isScanning","hasMultipleDevices","refreshLayout","isCancelling","creatingReport","isLeaveScanningPage","createReportErrorMessage","vciRepsonse","reportStatus","src_app_models_report_session__WEBPACK_IMPORTED_MODULE_7__","reportSession","getReportSession","connectedVehicle","src_app_models_app_data__WEBPACK_IMPORTED_MODULE_4__","src_app_models_app_enum__WEBPACK_IMPORTED_MODULE_2__","isRescan","coerceBooleanProperty","getQueryParam","title","subscribe","deviceId","id","toolName","name","setStatus","scanningTimeout","clearTimeout","multipleDevicesInterval","clearInterval","startScan","ctx","devices","findIndex","d","push","setInterval","length","unsubscribe","src_app_services_state_app_state__WEBPACK_IMPORTED_MODULE_10__","stopScan","selectDevice","src_app_configs_app_config__WEBPACK_IMPORTED_MODULE_0__","isScanningModules","toolInfo","localStorage","setItem","src_app_models_app_constant__WEBPACK_IMPORTED_MODULE_9__","main","setTimeout","isConnected","goTo","src_app_app_routing_module__WEBPACK_IMPORTED_MODULE_1__","then","disconnect","res","lodash__WEBPACK_IMPORTED_MODULE_5___default","checkBluetoothPermissions","isBtEnabled","confirm","setBluetoothState","startScanNow","goBack","switchToBluetoothSettings","open","ex","_a","info","scanOEMModules","vciResponseData","vin","_VehicleLinkingPage_instances","_VehicleLinkingPage_startScanTools","call","saveReportSession","sleep","createReport","retryingCreateReport","cancel","mileage","workOrderNumber","success","reportId","data","reportNumber","saveReport","queryParams","message","undefined","createReportFailed","needSetVIN","setVin","needUpdateMoreVehicleInfo","ymme_get","err","field","ymme","setVehicleInfoFromUser","year","make","_b","model","_c","engine","_d","options1","options","isVehicleInfoOk","alert","isRetried","percent","keepAwake","bind","startMs","Date","getTime","enableReportSleepTime","connectAndRequestData","Error","scanVin","decodeVIN","onScanDone","showFailureDialog","modalOptions","create","modal","hideLoading","present","onDidDismiss","getDataFromModal","component","_modals_vehicle_selection_vehicle_selection_page__WEBPACK_IMPORTED_MODULE_11__","componentProps","showBackdrop","backdropDismiss","scanModules","sleepMs","totalSleepTime","endMs","Math","round","allowSleepAgain","msg","popToRoot","scan","orientation","prompt","barcodeData","cancelled","text","getVinFromUser","format","substring","decodeVin","gotVIN","code","handler","_enter_vin_enter_vin_page__WEBPACK_IMPORTED_MODULE_6__","isModal","vciResponse","recentVin","getItem","recentMileage","isNaN","saveAndCreateReport","document","removeEventListener","ready","addEventListener","customHandleBackButton","reportFailed","doCancelScanning","src_app_bases_base_controller__WEBPACK_IMPORTED_MODULE_8__","initializeBT","selectors","features","decls","vars","consts","template"],"sources":["webpack:///src/app/pages/vehicle-linking/vehicle-linking.page.html","webpack:///src/app/pages/vehicle-linking/vehicle-linking.page.ts"],"sourcesContent":["<ion-content class=\"ion-padding\">\n  <div class=\"app-content-center-midle\">\n    <div class=\"text-center\" [hidden]=\"isScanning\" *ngIf=\"!hasMultipleDevices\">\n      <h2>{{title}} ...</h2>\n      <div class=\"app-spinner-wrap\">\n        <ion-spinner name=\"circles\"></ion-spinner>\n        <ion-icon src=\"assets/svg/car.svg\" class=\"font-size-80\"></ion-icon>\n      </div>\n      <p class=\"text-primary\">{{resultText}}</p>\n      <p class=\"text-danger\">{{statusText}}</p>\n      <p class=\"font-size-20\">This may take several minutes to complete.</p>\n      <ion-grid [hidden]=\"creatingReport\">\n        <ion-row>\n          <ion-col class=\"text-center\" (click)=\"cancel()\">\n            <a class=\"text-secondary font-size-18\">Cancel</a>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </div>\n\n    <div class=\"text-center\" [hidden]=\"!isScanning\" *ngIf=\"!hasMultipleDevices\">\n      <h2>Scanning devices...</h2>\n      <div class=\"app-spinner-wrap\">\n        <ion-spinner name=\"circles\" class=\"size-8\"></ion-spinner>\n      </div>\n      <p class=\"font-size-20 mb-5\">Starting scan</p>\n      <ion-grid>\n        <ion-row>\n          <ion-col class=\"text-center\" (click)=\"cancel()\">\n            <a class=\"text-secondary font-size-18\">Cancel</a>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </div>\n    <div class=\"text-center w-100 app-select-device-box px-3 py-4\" *ngIf=\"hasMultipleDevices\">\n      <h2 class=\"mb-5\">Please select device</h2>\n      <ion-button class=\"app-button mb-5\" expand=\"block\" *ngFor=\"let device of devices\" (click)=\"selectDevice(device)\">{{device.displayName}}</ion-button>\n      <ion-grid>\n        <ion-row>\n          <ion-col class=\"text-center\" (click)=\"cancel()\">\n            <a class=\"text-white font-size-18\">Cancel</a>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </div>\n  </div>\n</ion-content>\n","import { ChangeDetectorRef, Component, NgZone } from '@angular/core';\nimport { ModalController, ModalOptions, Platform } from '@ionic/angular';\nimport {\n  AppConfig,\n  AppStrings,\n  MAX_MILEAGE_VALUE,\n} from 'src/app/configs/app.config';\nimport {\n  BleData,\n  InfoToolConnected,\n  VehicleModel,\n} from 'src/app/models/app.model';\nimport { InnovaVCIService } from 'src/app/services/innova-vci.service';\nimport { NavigationService } from 'src/app/services/navigation.service';\nimport { RoutePath } from 'src/app/app-routing.module';\nimport {\n  EnumAppEvent,\n  EnumAppDataKey,\n  EnumLocalStorage,\n} from 'src/app/models/app.enum';\nimport {\n  InnovaVCIEvent,\n  VCIResponseData,\n} from 'src/app/services/innova-tool-models';\nimport { ApiDecodeVinResponse } from 'src/app/services/api.models';\nimport { AppData } from 'src/app/models/app.data';\nimport _ from 'lodash';\nimport { Insomnia } from '@ionic-native/insomnia/ngx';\nimport { EnterVinPage } from '../enter-vin/enter-vin.page';\nimport { ReportSession, ReportStatus } from 'src/app/models/report-session';\nimport { ReportServiceProvider } from 'src/app/services/report-service/report-service';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { VehicleServiceProvider } from 'src/app/services/vehicle-service/vehicle-service';\nimport { BLE } from '@ionic-native/ble/ngx';\nimport { Events } from 'src/app/services/events.service';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { BaseController } from 'src/app/bases/base-controller';\nimport { StorageKeys } from 'src/app/models/app.constant';\nimport { AppState } from 'src/app/services/state/app.state';\nimport { ConnectivityService } from 'src/app/services/innova-vci-service/src/connectivity/connectivity.service';\nimport { VehicleSelectionPage } from '../../modals/vehicle-selection/vehicle-selection.page';\nimport { Diagnostic } from '@ionic-native/diagnostic/ngx';\nimport { OpenNativeSettings } from '@ionic-native/open-native-settings/ngx';\n\n@Component({\n  selector: 'app-vehicle-linking',\n  templateUrl: './vehicle-linking.page.html',\n  styleUrls: ['./vehicle-linking.page.scss'],\n})\nexport class VehicleLinkingPage extends BaseController {\n  title = 'Scanning devices';\n  isRescan = false;\n  statusText: string;\n  resultText: string;\n  isScanning = true;\n  hasMultipleDevices = false;\n  retry = 0;\n  timer: any;\n  retryingCreateReport = false;\n  percent = 0;\n  isScanningVIN = false;\n  isScanningModules = false;\n  found = false;\n  result = 'Starting scan';\n  private isRetried = false;\n  isCancelling = false;\n  creatingReport = false;\n  deviceId = '';\n  toolName = '';\n  reportSession: ReportSession;\n  devices: BleData[];\n  createReportErrorMessage = '';\n  vciRepsonse: VCIResponseData;\n  reportStatus: ReportStatus;\n  private isLeaveScanningPage = false;\n  public toolInfo: InfoToolConnected;\n  private connectedVehicle: ApiDecodeVinResponse;\n  private scanningTimeout = null;\n  #vehicleData: VehicleModel;\n  multipleDevicesInterval = null;\n  constructor(\n    private modalController: ModalController,\n    private innovaVciService: InnovaVCIService,\n    private helper: HelperService,\n    private navigationService: NavigationService,\n    private connService: ConnectivityService,\n    private platform: Platform,\n    private insomnia: Insomnia,\n    private zone: NgZone,\n    private diagnostic: Diagnostic,\n    private openNativeSettings: OpenNativeSettings,\n    private reportService: ReportServiceProvider,\n    private eventService: Events,\n    private barcodeScanner: BarcodeScanner,\n    private changeDetector: ChangeDetectorRef,\n    private vehicleService: VehicleServiceProvider,\n    private ble: BLE\n  ) {\n    super('VehicleLinkingPage');\n  }\n\n  setStatus(result, status = '') {\n    console.log('🚀 ~ VehicleLinkingPage ~ setStatus ~ result:', result)\n    this.zone.run(() => {\n      if (result != null) {\n        this.resultText = result;\n        this.logger.debug(this.resultText + ' - ' + status);\n      }\n      this.statusText = status;\n    });\n  }\n\n  selectDevice(device: BleData) {\n    console.log('🚀 ~ VehicleLinkingPage ~ selectDevice ~ device:', device)\n    this.eventService.publish(InnovaVCIEvent.DEVICE_SELECTED, device);\n    this.isScanning = false;\n    this.hasMultipleDevices = false;\n    // this.title = 'Loading...';\n    this.helper.refreshLayout(this.changeDetector);\n  }\n\n  async ionViewWillEnter() {\n    this.hasMultipleDevices = false;\n    this.isScanning = false;\n    this.isCancelling = false;\n    this.creatingReport = false;\n    this.isLeaveScanningPage = false;\n    this.createReportErrorMessage = '';\n    this.vciRepsonse = null;\n    this.reportStatus = ReportStatus.Incomplete;\n    this.reportSession = this.reportService.getReportSession();\n    this.connectedVehicle = AppData.get(EnumAppDataKey.InfoVehicleConnected);\n    this.isRescan = this.helper.coerceBooleanProperty(\n      this.navigationService.getQueryParam('isRescan')\n    );\n    if (this.isRescan) {\n      this.title = 'Rescanning modules';\n      this.result = '';\n    } else {\n      this.isScanning = true;\n      this.title = 'Scanning devices';\n      this.result = 'Starting scan';\n      this.eventService.subscribe(\n        InnovaVCIEvent.CONNECTED,\n        (device: BleData) => {\n          this.logger.debug('Connected: ', device);\n          this.deviceId = device.id;\n          this.toolName = device.name;\n          this.title = 'Loading';\n          this.setStatus(\n            device.name + ' has been connected',\n            'Linking to vehicle...'\n          );\n          this.isScanning = false;\n          if (this.scanningTimeout) {\n            clearTimeout(this.scanningTimeout);\n            this.scanningTimeout = null;\n          }\n          if (this.multipleDevicesInterval) {\n            clearInterval(this.multipleDevicesInterval);\n            this.multipleDevicesInterval = null;\n          }\n          this.startScan();\n        }\n      );\n      let ctx = this;\n      ctx.devices = [];\n      this.eventService.subscribe(\n        InnovaVCIEvent.DEVICE_FOUND,\n        (device: BleData) => {\n          if (!ctx.devices) {\n            ctx.devices = [];\n          }\n          if (ctx.devices.findIndex((d) => d.id === device.id) < 0) {\n            ctx.devices.push(device);\n          }\n        }\n      );\n      ctx.multipleDevicesInterval = setInterval(() => {\n        if (ctx.isScanning) {\n          if (ctx.devices.length > 0) {\n            if (this.multipleDevicesInterval) {\n              clearInterval(this.multipleDevicesInterval);\n              this.multipleDevicesInterval = null;\n            }\n            ctx.eventService.unsubscribe(InnovaVCIEvent.DEVICE_FOUND);\n            ctx.isScanning = false;\n            clearTimeout(ctx.scanningTimeout);\n            ctx.scanningTimeout = null;\n            if (AppState.isOnAndroid) {\n              console.log('Call this.ble.stopScan');\n              ctx.connService.stopScan();\n            }\n            if (ctx.devices.length > 1) {\n              ctx.hasMultipleDevices = true;\n            } else {\n              ctx.selectDevice(ctx.devices[0]);\n            }\n            ctx.helper.refreshLayout(ctx.changeDetector);\n          }\n        } else {\n          clearInterval(ctx.multipleDevicesInterval);\n          ctx.multipleDevicesInterval = null;\n        }\n      }, AppConfig.scanningDevicesInterval);\n\n      this.isScanningModules = false;\n      this.eventService.subscribe(\n        EnumAppEvent.InfoToolConnected,\n        async (toolInfo) => {\n          this.eventService.unsubscribe(EnumAppEvent.InfoToolConnected);\n          this.logger.debug(toolInfo);\n          this.toolInfo = toolInfo;\n          if (this.toolInfo) {\n            localStorage.setItem(\n              StorageKeys.FIRMWARE_VERSION,\n              this.toolInfo.main\n            );\n          }\n        }\n      );\n\n      this.scanningTimeout = setTimeout(async () => {\n        if (!this.isConnected) {\n          this.navigationService\n            .goTo(RoutePath.ConnectionFailed)\n            .then(async () => {\n              if (AppState.isOnAndroid) {\n                console.log('Call this.ble.stopScan');\n                this.ble.stopScan();\n              }\n              await this.innovaVciService.disconnect(true, this.deviceId);\n            })\n        }\n      }, AppConfig.scanningDevicesTimeout);\n    }\n    console.log('🚀 ~ VehicleLinkingPage ~ ionViewWillEnter ~ DONE ionViewWillEnter:');\n  }\n\n  async ionViewDidEnter() {\n    this.eventService.subscribe(InnovaVCIEvent.SCAN_STATUS, (res) => {\n      let name = _.get(res, 'name');\n      let result = _.get(res, 'result');\n      this.setStatus(result, name);\n    });\n    // Check Bluetooth Permission\n    //bao check temp\n    let isBtEnabled = await this.helper.checkBluetoothPermissions();\n    if (!isBtEnabled) {\n      if (AppState.isOnAndroid && !AppState.isOnAtLeastVersion(13)) {\n        this.helper.confirm(\n          'In order to detect and pair to your scan tool, please turn Bluetooth ON.',\n          'Bluetooth is turned OFF',\n          async () => {\n            isBtEnabled = await this.diagnostic.setBluetoothState(true);\n            this.logger.debug('Is BT Enabled', isBtEnabled);\n            if (isBtEnabled) {\n              this.startScanNow();\n            } else {\n              this.helper.goBack();\n            }\n          },\n          () => {\n            this.helper.goBack();\n          },\n          'Turn Bluetooth ON',\n          'Cancel'\n        );\n      } else {\n        this.helper.confirm(\n          'In order to detect and pair to your scan tool, turn Bluetooth ON from your device’s settings.',\n          'Bluetooth is turned OFF',\n          async () => {\n            if (AppState.isOnAndroid) {\n              this.diagnostic.switchToBluetoothSettings();\n            } else {\n              this.openNativeSettings.open('settings').catch((ex) => {\n                this.logger?.info('openSettings>openNativeSettings>Error', ex);\n              });\n            }\n          },\n          () => {\n            this.helper.goBack();\n          },\n          'Go to settings',\n          'Cancel'\n        );\n      }\n    } else {\n      this.startScanNow();\n    }\n  }\n\n  async startScanNow() {\n    console.log('this.isRescan: ', this.isRescan);\n    if (this.isRescan) {\n      this.isScanningModules = true;\n      this.setStatus('', 'Read supported modules...');\n      return await this.scanOEMModules(\n        this.innovaVciService.vciResponseData.vin\n      );\n    } else {\n      return await this.#startScanTools();\n    }\n  }\n\n  async #startScanTools() {\n    this.eventService.publish(InnovaVCIEvent.INTERRUPT_PROCESS);\n    return await this.innovaVciService.initializeBT();\n  }\n\n  async saveAndCreateReport(\n    vciRepsonse: VCIResponseData,\n    reportStatus: ReportStatus\n  ) {\n    this.setStatus('', 'Creating report...');\n    let ctx = this;\n    if (ctx.isCancelling) {\n      return;\n    }\n    ctx.reportService.saveReportSession(ctx.reportSession);\n\n    ctx.creatingReport = true;\n    await ctx.helper.sleep(1000);\n    await ctx.createReport(vciRepsonse, reportStatus);\n  }\n\n  createReportFailed() {\n    this.retryingCreateReport = true;\n    this.creatingReport = false;\n    this.isCancelling = true;\n    this.helper.confirm(\n      this.createReportErrorMessage,\n      '',\n      async () => {\n        this.isCancelling = false;\n        await this.createReport(this.vciRepsonse, this.reportStatus);\n      },\n      () => {\n        this.cancel(true, true);\n      },\n      'Try Again',\n      'Cancel'\n    );\n  }\n\n  async createReport(vciRepsonse: VCIResponseData, reportStatus: ReportStatus) {\n    let ctx = this;\n    try {\n      ctx.creatingReport = true;\n      ctx.isScanningModules = false;\n      this.logger.debug('Creating report');\n      if (!vciRepsonse.mileage) {\n        vciRepsonse.mileage = ctx.reportSession.mileage;\n      }\n      let result = await ctx.reportService.createReport(\n        ctx.reportSession.workOrderNumber,\n        vciRepsonse,\n        reportStatus\n      );\n      if (result.success) {\n        this.logger.debug('Report Created Success');\n        ctx.reportSession.reportId = result.data.id;\n        ctx.reportSession.reportNumber = result.data.reportNumber + '';\n        ctx.reportService.saveReportSession(ctx.reportSession);\n        ctx.retryingCreateReport = false;\n        ctx.reportService.saveReport(result.data);\n        ctx.resultText = '';\n        ctx.statusText = '';\n        ctx.navigationService.goTo(RoutePath.ScanComplete, {\n          queryParams: {\n            deviceId: ctx.deviceId,\n            reportId: result.data.id\n          },\n        });\n      } else {\n        this.logger.debug('Unable to create report', result);\n        if (result.message && result.message.message != undefined) {\n          ctx.createReportErrorMessage =\n            'Create report failed: ' +\n            result.message.message +\n            ' Please try again.';\n        } else {\n          ctx.createReportErrorMessage =\n            'Unable to create report. Please check your internet connection and try again.';\n        }\n        ctx.reportStatus = reportStatus;\n        ctx.vciRepsonse = vciRepsonse;\n        ctx.createReportFailed();\n      }\n    } catch (error) {\n      this.logger.debug('Unable to create report', error);\n      ctx.createReportErrorMessage =\n        'Unable to create report. Please try again.';\n      ctx.reportStatus = reportStatus;\n      ctx.vciRepsonse = vciRepsonse;\n      ctx.createReportFailed();\n    }\n  }\n\n  async gotVIN(needSetVIN: boolean, vin: string) {\n    if (needSetVIN) {\n      this.innovaVciService.vciResponseData.vin = vin;\n      this.logger.debug('Writing VIN: ', vin);\n      await this.innovaVciService.setVin(vin, true);\n      await this.helper.sleep(2_000);\n    }\n\n    if (this.innovaVciService.needUpdateMoreVehicleInfo) {\n      let result = (await this.innovaVciService\n        .ymme_get(254)\n        .catch((err) => null)) as any;\n      if (result && result.field !== 'Done') {\n        this.logger.debug(\n          'vciResponseData ymme',\n          this.innovaVciService.vciResponseData.ymme\n        );\n        this.logger.debug(\n          'ymme_get 254 result',\n          result\n        );\n        const isVehicleInfoOk = await this.setVehicleInfoFromUser({\n          year: this.innovaVciService.vciResponseData.ymme?.year,\n          make: this.innovaVciService.vciResponseData.ymme?.make,\n          model: this.innovaVciService.vciResponseData.ymme?.model,\n          engine: this.innovaVciService.vciResponseData.ymme?.engine,\n          options1: result.options,\n        });\n        if (!isVehicleInfoOk) {\n          return await this.helper\n            .alert('T7R-85 Toyota, Lexus, Scion Pop-Up: Could not auto confirm')\n            .then(() => {\n              this.cancel(false);\n            });\n        }\n      }\n    }\n    return await this.scanOEMModules(vin);\n  }\n\n  private async startScan() {\n    this.logger.debug('start scan');\n    console.log('start scan');\n    let ctx = this;\n    ctx.isCancelling = false;\n    ctx.#vehicleData = null;\n    if (ctx.retryingCreateReport === true) {\n      ctx.retryingCreateReport = false;\n      await ctx.helper.sleep(1000);\n      ctx.createReport(this.innovaVciService.vciResponseData, 0);\n      return;\n    }\n    ctx.isRetried = false;\n    this.percent = 0;\n    try {\n      let res;\n      await this.insomnia.keepAwake().catch(this.logger.debug.bind(null));\n      const startMs = new Date().getTime();\n      this.innovaVciService.enableReportSleepTime(true);\n      res = await this.innovaVciService.connectAndRequestData();\n      if (!res) {\n        throw new Error('Could not query data.');\n      }\n      let vin = this.innovaVciService.vciResponseData.vin;\n      if (vin === undefined || vin === null || vin === '') {\n        this.setStatus(\n          'No VIN Detected',\n          'Starting scan VIN or Enter Manually'\n        );\n        await this.scanVin();\n      } else {\n        await this.decodeVIN(vin, false);\n      }\n    } catch (e) {\n      this.logger.debug(\n        'Scan failed',\n        e,\n        'isLeaveScanningPage',\n        this.isLeaveScanningPage\n      );\n      if (this.isLeaveScanningPage) {\n        return this.onScanDone();\n      }\n      this.isRetried = true; // Disable Retry when scan failed\n      if (this.isRetried) {\n        this.percent = 0;\n        return this.showFailureDialog();\n      } else {\n        this.isRetried = true;\n        await this.innovaVciService.disconnect(true, this.deviceId);\n        return this.startScan();\n      }\n    }\n  }\n\n  private async getDataFromModal(modalOptions: ModalOptions) {\n    const modal = await this.modalController.create(modalOptions);\n    await this.helper.hideLoading();\n    modal.present().then(() => {\n      // this.currentModal = modal;\n    });\n    // modal.onDidDismiss().then(() => {\n    //   this.currentModal = null;\n    // });\n    return modal.onDidDismiss();\n  }\n\n  private async setVehicleInfoFromUser(ymme: {\n    year: string;\n    make: string;\n    model: string;\n    engine: string;\n    options1: string[];\n  }) {\n    const { data } = await this.getDataFromModal({\n      component: VehicleSelectionPage,\n      componentProps: {\n        ymme: ymme,\n      },\n      showBackdrop: true,\n      backdropDismiss: false,\n    });\n    return data && data.confirm;\n  }\n\n  private async scanOEMModules(vin) {\n    if (this.isCancelling) {\n      return;\n    }\n    this.isScanningModules = true;\n    this.isLeaveScanningPage = false;\n    this.isCancelling = false;\n    const startMs = new Date().getTime();\n    this.innovaVciService.enableReportSleepTime(true);\n    let res = await this.innovaVciService.scanModules(vin);\n    this.isScanningModules = false;\n    const sleepMs = this.innovaVciService.totalSleepTime;\n    const endMs = new Date().getTime();\n    this.logger.debug(\n      `[*Done] Scan time: ${\n        Math.round(((endMs - startMs) / 1000) * 100) / 100\n      } seconds. Sleep time: ${\n        Math.round((sleepMs / 1000) * 100) / 100\n      } seconds`\n    );\n    this.insomnia.allowSleepAgain().catch(this.logger.debug.bind(null));\n\n    this.logger.debug('result', res);\n    await this.onScanDone();\n  }\n\n  private async showFailureDialog(msg = '', title = '') {\n    if (this.isLeaveScanningPage) return;\n    this.isLeaveScanningPage = true;\n    await this.helper.alert(\n      msg ||\n        `Please verify the tool is connected to the vehicle’s OBD-II port and try again`,\n      title || 'Scan Failed'\n    );\n\n    this.isLeaveScanningPage = false;\n  }\n\n  async doCancelScanning() {\n    this.isCancelling = true;\n    this.resultText = '';\n    this.statusText = 'One moment please...';\n    this.isLeaveScanningPage = true;\n    return this.helper.popToRoot(RoutePath.Home).then(async () => {\n      if (AppState.isOnAndroid) {\n        console.log('Call this.ble.stopScan');\n        this.ble.stopScan();\n      }\n      await this.innovaVciService.disconnect(true, this.deviceId);\n    });\n  }\n\n  get isConnected() {\n    if (AppState.isOnDevice) {\n      return this.innovaVciService.isConnected;\n    }\n    return true;\n  }\n\n  async scanVin() {\n    let ctx = this;\n    if (ctx.isCancelling) {\n      return;\n    }\n    if (AppState.isOnDevice) {\n      ctx.barcodeScanner.scan({ orientation: 'portrait', prompt: '' }).then(\n        async (barcodeData) => {\n          if (barcodeData.cancelled) {\n            if (barcodeData.text && barcodeData.text === 'enterVin') {\n              await this.getVinFromUser();\n            } else {\n              this.cancel(false);\n            }\n          } else if (barcodeData) {\n            let vin = barcodeData.text;\n            if (\n              barcodeData.format === 'CODE_39' ||\n              (vin != '' && vin.length >= 17)\n            ) {\n              if (vin.length > 17) {\n                vin = vin.substring(1);\n              }\n              await this.decodeVIN(vin, true);\n            } else {\n              await ctx.helper.sleep(1000);\n              await ctx.scanVin();\n            }\n          }\n        },\n        async (err) => {\n          this.logger.debug(err);\n          await ctx.helper.sleep(1000);\n          await ctx.scanVin();\n        }\n      );\n    } else {\n      await this.getVinFromUser();\n    }\n  }\n\n  async decodeVIN(vin: string, needSetVIN = true) {\n    this.setStatus('', 'Decoding VIN: ' + vin);\n    this.#vehicleData = null;\n    let result = await this.vehicleService.decodeVin(vin);\n    if (result.success && result.data) {\n      if (needSetVIN) {\n        this.setStatus('', 'Writing VIN: ' + vin);\n      }\n      this.#vehicleData = result.data;\n      return await this.gotVIN(needSetVIN, vin);\n    } else {\n      if (result.message && result.message.code != -1) {\n        this.helper.alert(\n          result.message.code === 5006\n            ? `VIN ${vin} is invalid.`\n            : result.message.message,\n          'Error',\n          [\n            {\n              text: 'OK',\n              handler: () => {\n                this.cancel(false);\n              },\n            },\n          ]\n        );\n      } else {\n        const message =\n          'Unable to decode VIN: ' +\n          vin +\n          '. Please check your internet connection and try again.';\n        this.helper.confirm(\n          message,\n          'Error',\n          () => {\n            this.decodeVIN(vin, needSetVIN);\n          },\n          () => {\n            this.cancel();\n          },\n          'Retry',\n          'Cancel'\n        );\n      }\n    }\n  }\n\n  private async getVinFromUser() {\n    // if (this.isLeaveScanningPage) return;\n    const modal = await this.modalController.create({\n      component: EnterVinPage,\n      componentProps: {\n        isModal: true,\n      },\n    });\n    await modal.present();\n    const { data } = await modal.onDidDismiss();\n    this.setStatus('', 'Writing VIN: ' + data.vin);\n    this.#vehicleData = data.data;\n    return await this.gotVIN(true, data.vin);\n  }\n\n  private async onScanDone() {\n    if (this.isCancelling) {\n      this.logger.debug('isCancelling', this.isCancelling);\n      return;\n    }\n    let vciResponse = this.innovaVciService.vciResponseData;\n    this.logger.debug('vciResponseData', vciResponse);\n    let recentVin = localStorage.getItem(EnumLocalStorage.RecentVINScanned);\n    let recentMileage = 0;\n    if (\n      isNaN(vciResponse.mileage) ||\n      vciResponse.mileage <= 0 ||\n      vciResponse.mileage > MAX_MILEAGE_VALUE\n    ) {\n      if (recentVin && recentVin === vciResponse.vin) {\n        recentMileage = this.reportSession.mileage;\n      }\n      if (recentMileage && recentMileage > 0) {\n        vciResponse.mileage = recentMileage;\n        this.logger.debug(\n          'auto set mileage from recent user input',\n          recentMileage\n        );\n      }\n    }\n    if (this.connectedVehicle) {\n      this.connectedVehicle.vin = vciResponse.vin;\n      if (vciResponse.ymme) {\n        this.connectedVehicle.make = vciResponse.ymme.make;\n        this.connectedVehicle.year = vciResponse.ymme.year;\n        this.connectedVehicle.model = vciResponse.ymme.model;\n      }\n      this.connectedVehicle.mileage = vciResponse.mileage;\n      AppData.set(EnumAppDataKey.InfoVehicleConnected, this.connectedVehicle);\n    }\n    this.percent = 100;\n    await this.saveAndCreateReport(vciResponse, ReportStatus.Complete);\n  }\n\n  ionViewDidLeave() {\n    this.eventService.unsubscribe(InnovaVCIEvent.CONNECTED);\n    this.eventService.unsubscribe(InnovaVCIEvent.DEVICE_FOUND);\n    this.eventService.unsubscribe(InnovaVCIEvent.DEVICE_SELECTED);\n    this.eventService.unsubscribe(InnovaVCIEvent.SCAN_STATUS);\n    this.eventService.unsubscribe(InnovaVCIEvent.INTERRUPT_PROCESS);\n    this.eventService.unsubscribe(InnovaVCIEvent.USER_GUI_INFO);\n    if (this.multipleDevicesInterval) {\n      clearInterval(this.multipleDevicesInterval);\n      this.multipleDevicesInterval = null;\n    }\n    if (this.scanningTimeout) {\n      clearTimeout(this.scanningTimeout);\n      this.scanningTimeout = null;\n    }\n\n    this.isLeaveScanningPage = true;\n    // Unregister the custom back button action for this page\n    document.removeEventListener('backbutton', () => {\n      this.logger.debug('unregister back button event');\n    });\n  }\n\n  public initializeBackButtonCustomHandler(): void {\n    this.platform.ready().then(() => {\n      document.addEventListener('backbutton', () => {\n        this.customHandleBackButton();\n      });\n    });\n  }\n\n  private customHandleBackButton(): void {\n    this.cancel();\n  }\n\n  async cancel(confirm = true, reportFailed = false) {\n    if (AppState.isOnDevice) {\n      this.isCancelling = true;\n      if (confirm) {\n        this.helper.confirm(\n          'Are you sure?',\n          AppStrings.CONFIRM,\n          async () => {\n            this.doCancelScanning();\n          },\n          () => {\n            if (reportFailed) {\n              this.createReportFailed();\n            } else {\n              this.isCancelling = false;\n            }\n          }\n        );\n      } else {\n        this.doCancelScanning();\n      }\n    }\n  }\n}\n"]}