{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAMA,UAAMA,eAAc,GAAG,SAAjBA,eAAiB,GAAM;AAC3B,YAAMC,GAAG,GAAGC,MAAZ;AACAD,WAAG,CAACE,gBAAJF,CAAqB,WAArBA,EAAkC,YAAM;AACtCG,iEAAS,YAAM;AACb,gBAAMC,KAAK,GAAGJ,GAAG,CAACK,UAAlB;AACA,gBAAMC,MAAM,GAAGN,GAAG,CAACO,WAAnB;AACA,gBAAMC,EAAE,GAAGC,QAAQ,CAACC,gBAATD,CAA0BL,KAAK,GAAG,CAAlCK,EAAqCH,MAAM,GAAG,CAA9CG,CAAX;;AACA,gBAAI,CAACD,EAAL,EAAS;AACP;AACD;;AACD,gBAAMG,SAAS,GAAGC,uDAAsBJ,EAAtBI,CAAlB;;AACA,gBAAID,SAAJ,EAAe;AACb,kBAAIE,OAAJ,CAAaC,iBAAD;AAAA,uBAAaC,yDAAiBJ,SAAjBI,EAA4BD,OAA5BC,CAAb;AAAA,eAAZ,EAA+DC,IAA/D,CAAoE,YAAM;AACxEC,wEAAS,oMAAC;AAAA;AAAA;AAAA;AACR;AACZ;AACA;AACA;AACA;AACA;AACA;AACYN,iCAAS,CAACO,KAAVP,CAAgBQ,WAAhBR,CAA4B,YAA5BA,EAA0C,QAA1CA;AARQ;AASR,+BAAMS,uDAAYT,SAAZS,EAAuB,GAAvBA,CAAN;;AATQ;AAURT,iCAAS,CAACO,KAAVP,CAAgBU,cAAhBV,CAA+B,YAA/BA;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAD,EAATM;AADF;AAcD;AAvBK,WAARd;AADF;AAFF;;;;","names":["startStatusTap","win","window","addEventListener","readTask","width","innerWidth","height","innerHeight","el","document","elementFromPoint","contentEl","findClosestIonContent","Promise","resolve","componentOnReady","then","writeTask","style","setProperty","scrollToTop","removeProperty"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/status-tap-4d4674a1.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { f as readTask, c as writeTask } from './index-8e692445.js';\nimport { f as findClosestIonContent, s as scrollToTop } from './index-e6d1a8be.js';\nimport { c as componentOnReady } from './helpers-3b390e48.js';\nimport './index-c4b11676.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise((resolve) => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };\n"]}