{"version":3,"mappings":"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","names":["BaseController","name","_modules_service_injector_module__WEBPACK_IMPORTED_MODULE_1__","appLoggerService","_services_logger__WEBPACK_IMPORTED_MODULE_0__","logger","getLogger","debug","isAndroid","_services_state_app_state__WEBPACK_IMPORTED_MODULE_2__","routes","path","component","_login_page__WEBPACK_IMPORTED_MODULE_0__","LoginPageRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","LoginPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","_login_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_login_page__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","LoginPage","navCtrl","authService","formBuilder","helper","navigationService","alert","platform","keyboard","zone","loginForm","group","email","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","password","rememberMe","localStorage","getItem","src_app_models_app_constant__WEBPACK_IMPORTED_MODULE_2__","onKeyboardWillShow","subscribe","event","run","isKeyboardActive","onKeyboardWillHide","controls","setValue","src_app_services_state_user_state__WEBPACK_IMPORTED_MODULE_4__","popToRoot","src_app_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","setItem","setTimeout","goTo","src_app_services_state_app_state__WEBPACK_IMPORTED_MODULE_3__","isVisible","hide","hideKeyboard","isLoading","errorMessage","u","value","p","login","resp","success","setUserInfo","data","hideLoading","removeItem","then","formSubmitted","reset","message","code","confirm","create","header","buttons","text","role","handler","window","open","present","src_app_bases_base_controller__WEBPACK_IMPORTED_MODULE_1__","selectors","features","decls","vars","consts","template","ctx"],"sources":["webpack:///src/app/bases/base-controller.ts","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login.page.ts"],"sourcesContent":["import { AppLogger, AppLoggerService } from '../services/logger';\nimport { ServiceInjector } from '../modules/service-injector.module';\nimport { AppState } from '../services/state/app.state';\nexport class BaseController {\n  protected readonly logger: AppLogger;\n  protected readonly serviceInjector = ServiceInjector;\n  protected readonly name: string;\n  public isAndroid: boolean;\n\n  constructor(name: string) {\n    this.name = name;// || this.constructor?.name;\n\n    const appLoggerService: AppLoggerService =\n    ServiceInjector.get(AppLoggerService);\n    this.logger = appLoggerService?.getLogger(this.name);\n    this.logger.debug('Enter');\n    this.isAndroid = AppState.isOnAndroid;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","<ion-content class=\"ion-padding\">\n\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid && doLogin($event)\" class=\"app-content-center-midle\">\n    <div class=\"w-100 px-3 \" [ngClass]=\"{'mt--100': isKeyboardActive && isAndroid}\">\n      <!-- app-open-keybroad-01 -->\n      <p class=\"app-form-logo\">\n        <img src=\"assets/img/its-logo.png\" alt=\"Innova Telematics Solutions\" />\n      </p>\n      <div class=\"mb-4\">\n        <ion-input class=\"app-input mb-2\" type=\"email\" placeholder=\"Email/Phone #\" formControlName=\"email\"></ion-input>\n        <div ion-text color=\"danger\" *ngIf=\"formSubmitted && loginForm.controls.email.invalid\">\n          <span class=\"text-danger\" *ngIf=\"loginForm.controls.email.errors.required\">Email/Phone # is required.</span>\n        </div>\n      </div>\n      <p class=\"mb-3\">\n        <ion-input class=\"app-input mb-2\" type=\"password\" placeholder=\"Password\" formControlName=\"password\"\n          (keyup.enter)=\"loginForm.valid && doLogin($event)\"></ion-input>\n      </p>\n      <span ion-text color=\"danger\" *ngIf=\"formSubmitted && loginForm.controls.password.invalid\">\n        <span class=\"text-danger\" *ngIf=\"loginForm.controls.password.errors.required\">Password is required.</span>\n      </span>\n      <br>\n      <span [hidden]=\"!errorMessage\" class=\"text-danger\">{{errorMessage}}</span>\n      <ion-item lines=\"none\" class=\"ion-no-padding no-bg\">\n        <ion-label class=\"ion-text-end font-size-18\">Remember me</ion-label>\n        <ion-toggle slot=\"end\" mode=\"ios\" formControlName=\"rememberMe\" (click)=\"hideKeyboard()\"></ion-toggle>\n      </ion-item>\n      <p class=\"text-center mb-4 mt-0\">\n        <a class=\"no-line font-size-16\" (click)=\"goToForgotPassword()\">Forgot Password?</a>\n      </p>\n\n      <ion-button class=\"app-button\" expand=\"block\" type=\"submit\" [disabled]=\"isLoading\" (click)=\"formSubmitted = true\">\n        <ion-spinner [hidden]=\"!isLoading\" class=\"app-sign-up-spinner\"></ion-spinner>\n        <span [hidden]=\"isLoading\" class=\"button-inner\">Login</span>\n      </ion-button>\n      <p class=\"app-footer-logo\">\n        <img src=\"assets/img/CarAi_logo.png\" alt=\"Innova Telematics Solutions\" />\n      </p>\n    </div>\n  </form>\n</ion-content>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, NavController, Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { RoutePath } from 'src/app/app-routing.module';\nimport { AuthServiceProvider } from 'src/app/services/auth-service/auth-service';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { NavigationService } from 'src/app/services/navigation.service';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { BaseController } from 'src/app/bases/base-controller';\nimport { AppConstants, StorageKeys } from 'src/app/models/app.constant';\nimport { AppState } from 'src/app/services/state/app.state';\nimport { UserState } from 'src/app/services/state/user.state';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage extends BaseController implements OnInit {\n  watchSub: Subscription;\n  isLoading = false;\n  public loginForm: FormGroup;\n  errorMessage = null;\n  formSubmitted = false;\n  // Property used to store the callback of the event handler to unsubscribe to it when leaving this page\n  public unregisterBackButtonAction: any;\n  isKeyboardActive = false;\n  constructor(\n    public navCtrl: NavController,\n    private authService: AuthServiceProvider,\n    private formBuilder: FormBuilder,\n    private helper: HelperService,\n    private navigationService: NavigationService,\n    private alert: AlertController,\n    public platform: Platform,\n    public keyboard: Keyboard,\n    private zone: NgZone\n  ) {\n    super('LoginPage');\n  }\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required])],\n      rememberMe: [localStorage.getItem(StorageKeys.USER_NAME) ? true : false],\n    });\n  }\n\n  ionViewWillEnter() {\n    this.keyboard.onKeyboardWillShow().subscribe((event) => {\n      this.zone.run(() => {\n        this.isKeyboardActive = true;\n      });\n    });\n    this.keyboard.onKeyboardWillHide().subscribe((event) => {\n      this.zone.run(() => {\n        this.isKeyboardActive = false;\n      });\n    });\n  }\n\n  ionViewDidEnter() {\n    if (localStorage.getItem(StorageKeys.USER_NAME)) {\n      this.loginForm.controls.email.setValue(\n        localStorage.getItem(StorageKeys.USER_NAME)\n      );\n    }\n    if (UserState.isAuth) {\n      this.navigationService.popToRoot(RoutePath.Home);\n    } else {\n      if (!localStorage.getItem(StorageKeys.FIRST_RUN)) {\n        localStorage.setItem(StorageKeys.FIRST_RUN, 'done');\n        setTimeout(() => {\n          this.navigationService.goTo(RoutePath.Tutorial);\n        }, 500);\n      }\n    }\n  }\n\n  goToForgotPassword() {\n    this.navigationService.goTo(RoutePath.ForgotPassword);\n  }\n\n  hideKeyboard() {\n    if(AppState.isOnDevice){\n      if (this.keyboard.isVisible) {\n        this.keyboard.hide();\n      }\n    }\n  }\n\n  async doLogin(event) {\n    this.hideKeyboard();\n    this.isLoading = true;\n    this.errorMessage = null;\n    let u = this.loginForm.value.email;\n    let p = this.loginForm.value.password;\n\n    const resp = await this.authService.login(u, p);\n    this.isLoading = false;\n    if (resp && resp.success) {\n      this.authService.setUserInfo(resp.data);\n      await this.helper.hideLoading();\n      if (this.loginForm.value.rememberMe) {\n        localStorage.setItem(StorageKeys.USER_NAME, u);\n      } else {\n        localStorage.removeItem(StorageKeys.USER_NAME);\n      }\n\n      this.navigationService\n        .popToRoot(RoutePath.Home)\n        .then(() => {\n          this.formSubmitted = false;\n          this.loginForm.reset();\n        });\n    } else {\n      this.formSubmitted = false;\n      if (resp && resp.message) {\n        if(resp.message.code === 2009){\n          const confirm = this.alert.create({\n            header: 'Login Failed',\n            message:\n              'Account not active. Please check email for activation link.',\n            buttons: [\n              {\n                text: 'Close',\n                role: 'cancel',\n                handler: (data) => {\n                  this.logger.debug('Close clicked');\n                },\n              },\n              {\n                text: 'Contact Us',\n                handler: (data) => {\n                  this.logger.debug('Contact Us clicked');\n                  window.open(\n                    AppConstants.contactUsUrl,\n                    '_system',\n                    'location=yes'\n                  );\n                },\n              },\n            ],\n          });\n          (await confirm).present();\n        } else if(resp.message.code === -1){\n          this.errorMessage = 'Make sure Wi-Fi or cellular data is turned on, then try again.';\n        } else {\n          this.errorMessage = 'Login Failed. Invalid Email/Password.';\n        }\n      } else {\n        this.errorMessage = 'Login Failed. Invalid Email/Password.';\n      }\n    }\n  }\n}\n"]}