{"version":3,"file":"src_app_pages_login_login_module_ts-es2015.js","mappings":"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","sources":["./src/app/bases/base-controller.ts","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html"],"sourcesContent":["import { AppLogger, AppLoggerService } from '../services/logger';\nimport { ServiceInjector } from '../modules/service-injector.module';\nimport { AppState } from '../services/state/app.state';\nexport class BaseController {\n  protected readonly logger: AppLogger;\n  protected readonly serviceInjector = ServiceInjector;\n  protected readonly name: string;\n  public isAndroid: boolean;\n\n  constructor(name: string) {\n    this.name = name;// || this.constructor?.name;\n\n    const appLoggerService: AppLoggerService =\n    ServiceInjector.get(AppLoggerService);\n    this.logger = appLoggerService?.getLogger(this.name);\n    this.logger.debug('Enter');\n    this.isAndroid = AppState.isOnAndroid;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, NavController, Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { RoutePath } from 'src/app/app-routing.module';\nimport { AuthServiceProvider } from 'src/app/services/auth-service/auth-service';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { NavigationService } from 'src/app/services/navigation.service';\nimport { Keyboard } from '@ionic-native/keyboard/ngx';\nimport { BaseController } from 'src/app/bases/base-controller';\nimport { AppConstants, StorageKeys } from 'src/app/models/app.constant';\nimport { AppState } from 'src/app/services/state/app.state';\nimport { UserState } from 'src/app/services/state/user.state';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage extends BaseController implements OnInit {\n  watchSub: Subscription;\n  isLoading = false;\n  public loginForm: FormGroup;\n  errorMessage = null;\n  formSubmitted = false;\n  // Property used to store the callback of the event handler to unsubscribe to it when leaving this page\n  public unregisterBackButtonAction: any;\n  isKeyboardActive = false;\n  constructor(\n    public navCtrl: NavController,\n    private authService: AuthServiceProvider,\n    private formBuilder: FormBuilder,\n    private helper: HelperService,\n    private navigationService: NavigationService,\n    private alert: AlertController,\n    public platform: Platform,\n    public keyboard: Keyboard,\n    private zone: NgZone\n  ) {\n    super('LoginPage');\n  }\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required])],\n      rememberMe: [localStorage.getItem(StorageKeys.USER_NAME) ? true : false],\n    });\n  }\n\n  ionViewWillEnter() {\n    this.keyboard.onKeyboardWillShow().subscribe((event) => {\n      this.zone.run(() => {\n        this.isKeyboardActive = true;\n      });\n    });\n    this.keyboard.onKeyboardWillHide().subscribe((event) => {\n      this.zone.run(() => {\n        this.isKeyboardActive = false;\n      });\n    });\n  }\n\n  ionViewDidEnter() {\n    if (localStorage.getItem(StorageKeys.USER_NAME)) {\n      this.loginForm.controls.email.setValue(\n        localStorage.getItem(StorageKeys.USER_NAME)\n      );\n    }\n    if (UserState.isAuth) {\n      this.navigationService.popToRoot(RoutePath.Home);\n    } else {\n      if (!localStorage.getItem(StorageKeys.FIRST_RUN)) {\n        localStorage.setItem(StorageKeys.FIRST_RUN, 'done');\n        setTimeout(() => {\n          this.navigationService.goTo(RoutePath.Tutorial);\n        }, 500);\n      }\n    }\n  }\n\n  goToForgotPassword() {\n    this.navigationService.goTo(RoutePath.ForgotPassword);\n  }\n\n  hideKeyboard() {\n    if(AppState.isOnDevice){\n      if (this.keyboard.isVisible) {\n        this.keyboard.hide();\n      }\n    }\n  }\n\n  async doLogin(event) {\n    this.hideKeyboard();\n    this.isLoading = true;\n    this.errorMessage = null;\n    let u = this.loginForm.value.email;\n    let p = this.loginForm.value.password;\n\n    const resp = await this.authService.login(u, p);\n    this.isLoading = false;\n    if (resp && resp.success) {\n      this.authService.setUserInfo(resp.data);\n      await this.helper.hideLoading();\n      if (this.loginForm.value.rememberMe) {\n        localStorage.setItem(StorageKeys.USER_NAME, u);\n      } else {\n        localStorage.removeItem(StorageKeys.USER_NAME);\n      }\n\n      this.navigationService\n        .popToRoot(RoutePath.Home)\n        .then(() => {\n          this.formSubmitted = false;\n          this.loginForm.reset();\n        });\n    } else {\n      this.formSubmitted = false;\n      if (resp && resp.message) {\n        if(resp.message.code === 2009){\n          const confirm = this.alert.create({\n            header: 'Login Failed',\n            message:\n              'Account not active. Please check email for activation link.',\n            buttons: [\n              {\n                text: 'Close',\n                role: 'cancel',\n                handler: (data) => {\n                  this.logger.debug('Close clicked');\n                },\n              },\n              {\n                text: 'Contact Us',\n                handler: (data) => {\n                  this.logger.debug('Contact Us clicked');\n                  window.open(\n                    AppConstants.contactUsUrl,\n                    '_system',\n                    'location=yes'\n                  );\n                },\n              },\n            ],\n          });\n          (await confirm).present();\n        } else if(resp.message.code === -1){\n          this.errorMessage = 'Make sure Wi-Fi or cellular data is turned on, then try again.';\n        } else {\n          this.errorMessage = 'Login Failed. Invalid Email/Password.';\n        }\n      } else {\n        this.errorMessage = 'Login Failed. Invalid Email/Password.';\n      }\n    }\n  }\n}\n","<ion-content class=\"ion-padding\">\n\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid && doLogin($event)\" class=\"app-content-center-midle\">\n    <div class=\"w-100 px-3 \" [ngClass]=\"{'mt--100': isKeyboardActive && isAndroid}\">\n      <!-- app-open-keybroad-01 -->\n      <p class=\"app-form-logo\">\n        <img src=\"assets/img/its-logo.png\" alt=\"Innova Telematics Solutions\" />\n      </p>\n      <div class=\"mb-4\">\n        <ion-input class=\"app-input mb-2\" type=\"email\" placeholder=\"Email/Phone #\" formControlName=\"email\"></ion-input>\n        <div ion-text color=\"danger\" *ngIf=\"formSubmitted && loginForm.controls.email.invalid\">\n          <span class=\"text-danger\" *ngIf=\"loginForm.controls.email.errors.required\">Email/Phone # is required.</span>\n        </div>\n      </div>\n      <p class=\"mb-3\">\n        <ion-input class=\"app-input mb-2\" type=\"password\" placeholder=\"Password\" formControlName=\"password\"\n          (keyup.enter)=\"loginForm.valid && doLogin($event)\"></ion-input>\n      </p>\n      <span ion-text color=\"danger\" *ngIf=\"formSubmitted && loginForm.controls.password.invalid\">\n        <span class=\"text-danger\" *ngIf=\"loginForm.controls.password.errors.required\">Password is required.</span>\n      </span>\n      <br>\n      <span [hidden]=\"!errorMessage\" class=\"text-danger\">{{errorMessage}}</span>\n      <ion-item lines=\"none\" class=\"ion-no-padding no-bg\">\n        <ion-label class=\"ion-text-end font-size-18\">Remember me</ion-label>\n        <ion-toggle slot=\"end\" mode=\"ios\" formControlName=\"rememberMe\" (click)=\"hideKeyboard()\"></ion-toggle>\n      </ion-item>\n      <p class=\"text-center mb-4 mt-0\">\n        <a class=\"no-line font-size-16\" (click)=\"goToForgotPassword()\">Forgot Password?</a>\n      </p>\n\n      <ion-button class=\"app-button\" expand=\"block\" type=\"submit\" [disabled]=\"isLoading\" (click)=\"formSubmitted = true\">\n        <ion-spinner [hidden]=\"!isLoading\" class=\"app-sign-up-spinner\"></ion-spinner>\n        <span [hidden]=\"isLoading\" class=\"button-inner\">Login</span>\n      </ion-button>\n      <p class=\"app-footer-logo\">\n        <img src=\"assets/img/CarAi_logo.png\" alt=\"Innova Telematics Solutions\" />\n      </p>\n    </div>\n  </form>\n</ion-content>"],"names":[],"sourceRoot":"webpack:///"}