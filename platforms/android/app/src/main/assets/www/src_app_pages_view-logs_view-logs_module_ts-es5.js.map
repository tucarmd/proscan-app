{"version":3,"mappings":"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","names":["BaseController","name","_modules_service_injector_module__WEBPACK_IMPORTED_MODULE_1__","appLoggerService","_services_logger__WEBPACK_IMPORTED_MODULE_0__","logger","getLogger","debug","isAndroid","_services_state_app_state__WEBPACK_IMPORTED_MODULE_2__","routes","path","component","_view_logs_page__WEBPACK_IMPORTED_MODULE_0__","ViewLogsPageRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","ViewLogsPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","_view_logs_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_view_logs_page__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_10__","ViewLogsPage","navCtrl","navParams","file","helper","emailComposer","device","downloadLink","src_app_services_state_app_state__WEBPACK_IMPORTED_MODULE_3__","logs","getLogMessages","filter","e","src_app_configs_logger_config__WEBPACK_IMPORTED_MODULE_2__","map","Date","timeStamp","toISOString","level","methodName","message","join","textLogs","replace","popToRoot","src_app_app_routing_module__WEBPACK_IMPORTED_MODULE_4__","confirm","removeLogMessages","alert","filename","getTime","logContent","writeFile","cacheDirectory","then","data","onSuccess","error","onErr","resp","deviceInfo","cordova","model","platform","version","manufacturer","serial","email","to","src_app_configs_app_config__WEBPACK_IMPORTED_MODULE_0__","cc","attachments","btoa","subject","body","isHtml","isAvailable","available","nativeURL","open","err","prompt","value","download","src_app_bases_base_controller__WEBPACK_IMPORTED_MODULE_1__","selectors","features","decls","vars","consts","template"],"sources":["webpack:///src/app/bases/base-controller.ts","webpack:///src/app/pages/view-logs/view-logs-routing.module.ts","webpack:///src/app/pages/view-logs/view-logs.module.ts","webpack:///src/app/pages/view-logs/view-logs.page.html","webpack:///src/app/pages/view-logs/view-logs.page.ts"],"sourcesContent":["import { AppLogger, AppLoggerService } from '../services/logger';\nimport { ServiceInjector } from '../modules/service-injector.module';\nimport { AppState } from '../services/state/app.state';\nexport class BaseController {\n  protected readonly logger: AppLogger;\n  protected readonly serviceInjector = ServiceInjector;\n  protected readonly name: string;\n  public isAndroid: boolean;\n\n  constructor(name: string) {\n    this.name = name;// || this.constructor?.name;\n\n    const appLoggerService: AppLoggerService =\n    ServiceInjector.get(AppLoggerService);\n    this.logger = appLoggerService?.getLogger(this.name);\n    this.logger.debug('Enter');\n    this.isAndroid = AppState.isOnAndroid;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ViewLogsPage } from './view-logs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewLogsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ViewLogsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ViewLogsPageRoutingModule } from './view-logs-routing.module';\n\nimport { ViewLogsPage } from './view-logs.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ViewLogsPageRoutingModule\n  ],\n  declarations: [ViewLogsPage]\n})\nexport class ViewLogsPageModule {}\n","<!--\n  Generated template for the ViewLogsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header class=\"ion-no-border\">\n  <ion-toolbar mode=\"md\" *ngIf=\"isAndroid\">\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"close()\">\n        <ion-icon name=\"chevron-back-outline\" class=\"font-size-28\" color=\"primary\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>View Logs</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"showDownloadPopup()\">\n        <ion-icon name=\"download\" class=\"font-size-28\"></ion-icon>\n      </ion-button>\n      <ion-button (click)=\"clear()\">\n        <ion-icon name=\"trash\" class=\"font-size-28\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n  <ion-toolbar mode=\"ios\" *ngIf=\"!isAndroid\">\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"close()\">\n        <ion-icon name=\"chevron-back-outline\" class=\"font-size-28\" color=\"primary\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title style=\"padding-left: 40px;\">View Logs</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"showDownloadPopup()\">\n        <ion-icon name=\"download\" class=\"font-size-28\" color=\"light\"></ion-icon>\n      </ion-button>\n      <ion-button (click)=\"clear()\">\n        <ion-icon name=\"trash\" class=\"font-size-28\" color=\"light\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <div *ngIf=\"logs\" [innerHtml]=\"logs\">\n  </div>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { NavController, NavParams } from '@ionic/angular';\nimport { AppConfig } from 'src/app/configs/app.config';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\nimport { Device } from '@ionic-native/device/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { BaseController } from 'src/app/bases/base-controller';\nimport { AppLoggerService } from 'src/app/services/logger';\nimport { LoggerConfig } from 'src/app/configs/logger.config';\nimport { AppState } from 'src/app/services/state/app.state';\nimport { RoutePath } from 'src/app/app-routing.module';\n@Component({\n  selector: 'app-view-logs',\n  templateUrl: './view-logs.page.html',\n  styleUrls: ['./view-logs.page.scss'],\n})\nexport class ViewLogsPage extends BaseController implements OnInit {\n  logs: any;\n  textLogs: any;\n  downloadLink: any;\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public file: File,\n    public helper: HelperService,\n    public emailComposer: EmailComposer,\n    private appLoggerService: AppLoggerService,\n    private device: Device\n  ) {\n    super('ViewLogsPage');\n  }\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n  }\n\n  ionViewDidEnter() {\n    this.downloadLink = null;\n    if (AppState.isOnDevice) {\n      let logs = this.appLoggerService\n        .getLogMessages()\n        .filter(\n          (e) => e.logger === LoggerConfig.bundleId\n          //e.timeStamp > CheckUpdateViewController.#startLogTime\n        )\n        .map((e) =>\n          [\n            new Date(e.timeStamp).toISOString(),\n            e.level,\n            e.methodName,\n            e.message,\n          ].join(' ')\n        )\n        .join('\\n');\n      this.textLogs = logs;\n      logs = logs.replace(/</g, '&lt;');\n      logs = logs.replace(/</g, '&gt;');\n      logs = logs.replace(/\\n/g, '<br/>');\n\n      this.logs = logs;\n    }\n  }\n\n  close() {\n    this.helper.popToRoot(RoutePath.Home);\n  }\n\n  clear() {\n    if (this.textLogs) {\n      this.helper.confirm(\n        'Are you sure to clear all logs?',\n        'Clear Logs',\n        () => {\n          this.appLoggerService.removeLogMessages();\n          this.logs = '';\n          this.textLogs = '';\n          this.downloadLink = null;\n          this.helper.alert('Log file has been cleared successfully!');\n        },\n        () => {}\n      );\n    } else {\n      this.helper.alert('No logs file available.');\n    }\n  }\n\n  download() {\n    if (this.textLogs) {\n      const filename = 'TestDrive-Log-Tool-' + new Date().getTime() + '.txt';\n      const logContent = this.textLogs;\n      try {\n        this.file\n          .writeFile(this.file.cacheDirectory, filename, logContent)\n          .then(async (data) => {\n            await this.onSuccess(data);\n          })\n          .catch((error) => {\n            this.onErr(error);\n          });\n      } catch (error) {\n        this.helper.alert(error);\n      }\n    } else {\n      this.helper.alert('No logs file available.');\n    }\n  }\n\n  async onSuccess(resp) {\n    try {\n      const deviceInfo =\n        'DEVICE INFO: ' +\n        '\\r\\n<br />- Cordova version: ' +\n        this.device.cordova +\n        '\\r\\n<br />- Model : ' +\n        this.device.model +\n        '\\r\\n<br />- Platform: ' +\n        this.device.platform +\n        '\\r\\n<br />- Version: ' +\n        this.device.version +\n        '\\r\\n<br />- Manufacturer: ' +\n        this.device.manufacturer +\n        '\\r\\n<br />- Serial: ' +\n        this.device.serial;\n      const email = {\n        to: AppConfig.LOGGER_EMAIL,\n        cc: AppConfig.LOGGER_CC_EMAIL,\n        attachments: ['base64:ProScan_2_Log.txt//' + btoa(this.textLogs)],\n        subject: 'ProScan 2.0 Logs ' + new Date().toISOString(),\n        body: deviceInfo,\n        isHtml: true,\n      };\n\n      // Send a text message using default options\n\n      try {\n        this.emailComposer.isAvailable().then((available: boolean) => {\n          this.logger.debug(resp.nativeURL);\n          this.logger.debug(available);\n          if (available) {\n            this.emailComposer.open(email).catch((error) => {\n              this.logger.debug(error);\n            });\n          } else {\n            this.helper.alert('Unable to send mail.');\n          }\n        });\n      } catch (error) {\n        this.logger.debug(error);\n      }\n    } catch (err) {\n      this.onErr(err);\n    }\n  }\n  onErr(resp) {\n    this.logger.debug(resp);\n    this.helper.alert('Cannot connect to server. Please try again.');\n  }\n\n  showDownloadPopup() {\n    if (this.downloadLink) {\n      this.helper.prompt(\n        'Please copy this url and open on your device, it will expired after access.',\n        'Download Logs File',\n        [{ name: 'url', value: this.downloadLink }]\n      );\n    } else {\n      this.download();\n    }\n  }\n}\n"]}