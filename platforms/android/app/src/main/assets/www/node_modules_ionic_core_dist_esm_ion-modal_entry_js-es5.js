(function () {
  "use strict";

  function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }

  function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }

  function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }

  function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }

  function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

  function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

  function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }

  function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }

  function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }

  function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }

  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }

  (self["webpackChunkcom_carmd_proscan2"] = self["webpackChunkcom_carmd_proscan2"] || []).push([["node_modules_ionic_core_dist_esm_ion-modal_entry_js"], {
    /***/
    10570:
    /*!*************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/index-c4b11676.js ***!
      \*************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "a": function a() {
          return (
            /* binding */
            printRequiredElementError
          );
        },

        /* harmony export */
        "b": function b() {
          return (
            /* binding */
            printIonError
          );
        },

        /* harmony export */
        "p": function p() {
          return (
            /* binding */
            printIonWarning
          );
        }
        /* harmony export */

      });
      /*!
       * (C) Ionic http://ionicframework.com - MIT License
       */

      /**
       * Logs a warning to the console with an Ionic prefix
       * to indicate the library that is warning the developer.
       *
       * @param message - The string message to be logged to the console.
       */


      var printIonWarning = function printIonWarning(message) {
        var _console;

        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          params[_key - 1] = arguments[_key];
        }

        return (_console = console).warn.apply(_console, ["[Ionic Warning]: ".concat(message)].concat(params));
      };
      /*
       * Logs an error to the console with an Ionic prefix
       * to indicate the library that is warning the developer.
       *
       * @param message - The string message to be logged to the console.
       * @param params - Additional arguments to supply to the console.error.
       */


      var printIonError = function printIonError(message) {
        var _console2;

        for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          params[_key2 - 1] = arguments[_key2];
        }

        return (_console2 = console).error.apply(_console2, ["[Ionic Error]: ".concat(message)].concat(params));
      };
      /**
       * Prints an error informing developers that an implementation requires an element to be used
       * within a specific selector.
       *
       * @param el The web component element this is requiring the element.
       * @param targetSelectors The selector or selectors that were not found.
       */


      var printRequiredElementError = function printRequiredElementError(el) {
        for (var _len3 = arguments.length, targetSelectors = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          targetSelectors[_key3 - 1] = arguments[_key3];
        }

        return console.error("<".concat(el.tagName.toLowerCase(), "> must be used inside ").concat(targetSelectors.join(' or '), "."));
      };
      /***/

    },

    /***/
    15678:
    /*!**************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/ion-modal.entry.js ***!
      \**************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ion_modal": function ion_modal() {
          return (
            /* binding */
            Modal
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */
      19369);
      /* harmony import */


      var _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./index-8e692445.js */
      91477);
      /* harmony import */


      var _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./ionic-global-c74e4951.js */
      45460);
      /* harmony import */


      var _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./index-e6d1a8be.js */
      64064);
      /* harmony import */


      var _framework_delegate_c3305a28_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./framework-delegate-c3305a28.js */
      64656);
      /* harmony import */


      var _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./helpers-3b390e48.js */
      83870);
      /* harmony import */


      var _keyboard_282b81b8_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./keyboard-282b81b8.js */
      99601);
      /* harmony import */


      var _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./index-c4b11676.js */
      10570);
      /* harmony import */


      var _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./index-33ffec25.js */
      340);
      /* harmony import */


      var _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./overlays-58fa8e4d.js */
      49432);
      /* harmony import */


      var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./theme-7670341c.js */
      31756);
      /* harmony import */


      var _index_27c7e5c4_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./index-27c7e5c4.js */
      20498);
      /* harmony import */


      var _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./animation-4ff3f603.js */
      41716);
      /* harmony import */


      var _cubic_bezier_e78d1307_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./cubic-bezier-e78d1307.js */
      62811);
      /* harmony import */


      var _index_422b6e83_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./index-422b6e83.js */
      18819);
      /* harmony import */


      var _hardware_back_button_490df115_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./hardware-back-button-490df115.js */
      66772);
      /* harmony import */


      var _gesture_controller_17060b7c_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./gesture-controller-17060b7c.js */
      72022);
      /*!
       * (C) Ionic http://ionicframework.com - MIT License
       */


      var Style;

      (function (Style) {
        Style["Dark"] = "DARK";
        Style["Light"] = "LIGHT";
        Style["Default"] = "DEFAULT";
      })(Style || (Style = {}));

      var StatusBar = {
        getEngine: function getEngine() {
          var _a;

          return ((_a = _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w === null || _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w === void 0 ? void 0 : _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w.Capacitor) === null || _a === void 0 ? void 0 : _a.isPluginAvailable('StatusBar')) && (_index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w === null || _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w === void 0 ? void 0 : _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w.Capacitor.Plugins.StatusBar);
        },
        supportsDefaultStatusBarStyle: function supportsDefaultStatusBarStyle() {
          var _a;
          /**
           * The 'DEFAULT' status bar style was added
           * to the @capacitor/status-bar plugin in Capacitor 3.
           * PluginHeaders is only supported in Capacitor 3+,
           * so we can use this to detect Capacitor 3.
           */


          return !!((_a = _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w === null || _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w === void 0 ? void 0 : _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w.Capacitor) === null || _a === void 0 ? void 0 : _a.PluginHeaders);
        },
        setStyle: function setStyle(options) {
          var engine = this.getEngine();

          if (!engine) {
            return;
          }

          engine.setStyle(options);
        },
        getStyle: function () {
          var _ref = (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            var engine, _yield$engine$getInfo, style;

            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  engine = this.getEngine();

                  if (engine) {
                    _context.next = 3;
                    break;
                  }

                  return _context.abrupt("return", Style.Default);

                case 3:
                  _context.next = 5;
                  return engine.getInfo();

                case 5:
                  _yield$engine$getInfo = _context.sent;
                  style = _yield$engine$getInfo.style;
                  return _context.abrupt("return", style);

                case 8:
                case "end":
                  return _context.stop();
              }
            }, _callee, this);
          }));

          return function getStyle() {
            return _ref.apply(this, arguments);
          };
        }()
      };
      /**
       * Use y = mx + b to
       * figure out the backdrop value
       * at a particular x coordinate. This
       * is useful when the backdrop does
       * not begin to fade in until after
       * the 0 breakpoint.
       */

      var getBackdropValueForSheet = function getBackdropValueForSheet(x, backdropBreakpoint) {
        /**
         * We will use these points:
         * (backdropBreakpoint, 0)
         * (maxBreakpoint, 1)
         * We know that at the beginning breakpoint,
         * the backdrop will be hidden. We also
         * know that at the maxBreakpoint, the backdrop
         * must be fully visible. maxBreakpoint should
         * always be 1 even if the maximum value
         * of the breakpoints array is not 1 since
         * the animation runs from a progress of 0
         * to a progress of 1.
         * m = (y2 - y1) / (x2 - x1)
         *
         * This is simplified from:
         * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)
         *
         * If the backdropBreakpoint is 1, we return 0 as the
         * backdrop is completely hidden.
         *
         */
        if (backdropBreakpoint === 1) {
          return 0;
        }

        var slope = 1 / (1 - backdropBreakpoint);
        /**
         * From here, compute b which is
         * the backdrop opacity if the offset
         * is 0. If the backdrop does not
         * begin to fade in until after the
         * 0 breakpoint, this b value will be
         * negative. This is fine as we never pass
         * b directly into the animation keyframes.
         * b = y - mx
         * Use a known point: (backdropBreakpoint, 0)
         * This is simplified from:
         * b = 0 - (backdropBreakpoint * slope)
         */

        var b = -(backdropBreakpoint * slope);
        /**
         * Finally, we can now determine the
         * backdrop offset given an arbitrary
         * gesture offset.
         */

        return x * slope + b;
      };
      /**
       * The tablet/desktop card modal activates
       * when the window width is >= 768.
       * At that point, the presenting element
       * is not transformed, so we do not need to
       * adjust the status bar color.
       *
       * Note: We check supportsDefaultStatusBarStyle so that
       * Capacitor <= 2 users do not get their status bar
       * stuck in an inconsistent state due to a lack of
       * support for Style.Default.
       */


      var setCardStatusBarDark = function setCardStatusBarDark() {
        if (!_index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w || _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {
          return;
        }

        StatusBar.setStyle({
          style: Style.Dark
        });
      };

      var setCardStatusBarDefault = function setCardStatusBarDefault() {
        var defaultStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Style.Default;

        if (!_index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w || _index_33ffec25_js__WEBPACK_IMPORTED_MODULE_8__.w.innerWidth >= 768 || !StatusBar.supportsDefaultStatusBarStyle()) {
          return;
        }

        StatusBar.setStyle({
          style: defaultStyle
        });
      };

      var handleCanDismiss = /*#__PURE__*/function () {
        var _ref2 = (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(el, animation) {
          var shouldDismiss;
          return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while (1) switch (_context2.prev = _context2.next) {
              case 0:
                if (!(typeof el.canDismiss !== 'function')) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt("return");

              case 2:
                _context2.next = 4;
                return el.canDismiss(undefined, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.G);

              case 4:
                shouldDismiss = _context2.sent;

                if (shouldDismiss) {
                  _context2.next = 7;
                  break;
                }

                return _context2.abrupt("return");

              case 7:
                /**
                 * If canDismiss resolved after the snap
                 * back animation finished, we can
                 * dismiss immediately.
                 *
                 * If canDismiss resolved before the snap
                 * back animation finished, we need to
                 * wait until the snap back animation is
                 * done before dismissing.
                 */
                if (animation.isRunning()) {
                  animation.onFinish(function () {
                    el.dismiss(undefined, 'handler');
                  }, {
                    oneTimeCallback: true
                  });
                } else {
                  el.dismiss(undefined, 'handler');
                }

              case 8:
              case "end":
                return _context2.stop();
            }
          }, _callee2);
        }));

        return function handleCanDismiss(_x, _x2) {
          return _ref2.apply(this, arguments);
        };
      }();
      /**
       * This function lets us simulate a realistic spring-like animation
       * when swiping down on the modal.
       * There are two forces that we need to use to compute the spring physics:
       *
       * 1. Stiffness, k: This is a measure of resistance applied a spring.
       * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.
       *
       * Using these two values, we can calculate the Spring Force and the Dampening Force
       * to compute the total force applied to a spring.
       *
       * Spring Force: This force pulls a spring back into its equilibrium position.
       * Hooke's Law tells us that that spring force (FS) = kX.
       * k is the stiffness of a spring, and X is the displacement of the spring from its
       * equilibrium position. In this case, it is the amount by which the free end
       * of a spring was displaced (stretched/pushed) from its "relaxed" position.
       *
       * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.
       * The dampening force, FD, can be found via this formula: FD = -cv
       * where c the dampening value and v is velocity.
       *
       * Therefore, the resulting force that is exerted on the block is:
       * F = FS + FD = -kX - cv
       *
       * Newton's 2nd Law tells us that F = ma:
       * ma = -kX - cv.
       *
       * For Ionic's purposes, we can assume that m = 1:
       * a = -kX - cv
       *
       * Imagine a block attached to the end of a spring. At equilibrium
       * the block is at position x = 1.
       * Pressing on the block moves it to position x = 0;
       * So, to calculate the displacement, we need to take the
       * current position and subtract the previous position from it.
       * X = x - x0 = 0 - 1 = -1.
       *
       * For Ionic's purposes, we are only pushing on the spring modal
       * so we have a max position of 1.
       * As a result, we can expand displacement to this formula:
       * X = x - 1
       *
       * a = -k(x - 1) - cv
       *
       * We can represent the motion of something as a function of time: f(t) = x.
       * The derivative of position gives us the velocity: f'(t)
       * The derivative of the velocity gives us the acceleration: f''(t)
       *
       * We can substitute the formula above with these values:
       *
       * f"(t) = -k * (f(t) - 1) - c * f'(t)
       *
       * This is called a differential equation.
       *
       * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0
       * This means our velocity is also zero: f'(0) = 0.
       *
       * We can cheat a bit and plug the formula into Wolfram Alpha.
       * However, we need to pick stiffness and dampening values:
       * k = 0.57
       * c = 15
       *
       * I picked these as they are fairly close to native iOS's spring effect
       * with the modal.
       *
       * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)
       *
       * The result is a formula that lets us calculate the acceleration
       * for a given time t.
       * Note: This is the approximate form of the solution. Wolfram Alpha will
       * give you a complex differential equation too.
       */


      var calculateSpringStep = function calculateSpringStep(t) {
        return 0.00255275 * Math.pow(2.71828, -14.9619 * t) - 1.00255 * Math.pow(2.71828, -0.0380968 * t) + 1;
      }; // Defaults for the card swipe animation


      var SwipeToCloseDefaults = {
        MIN_PRESENTING_SCALE: 0.93
      };

      var createSwipeToCloseGesture = function createSwipeToCloseGesture(el, animation, statusBarStyle, onDismiss) {
        /**
         * The step value at which a card modal
         * is eligible for dismissing via gesture.
         */
        var DISMISS_THRESHOLD = 0.5;
        var height = el.offsetHeight;
        var isOpen = false;
        var canDismissBlocksGesture = false;
        var contentEl = null;
        var scrollEl = null;
        var canDismissMaxStep = 0.2;
        var initialScrollY = true;
        var lastStep = 0;

        var getScrollY = function getScrollY() {
          if (contentEl && (0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.i)(contentEl)) {
            return contentEl.scrollY;
            /**
             * Custom scroll containers are intended to be
             * used with virtual scrolling, so we assume
             * there is scrolling in this case.
             */
          } else {
            return true;
          }
        };

        var canStart = function canStart(detail) {
          var target = detail.event.target;

          if (target === null || !target.closest) {
            return true;
          }
          /**
           * If we are swiping on the content,
           * swiping should only be possible if
           * the content is scrolled all the way
           * to the top so that we do not interfere
           * with scrolling.
           *
           * We cannot assume that the `ion-content`
           * target will remain consistent between
           * swipes. For example, when using
           * ion-nav within a card modal it is
           * possible to swipe, push a view, and then
           * swipe again. The target content will not
           * be the same between swipes.
           */


          contentEl = (0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.f)(target);

          if (contentEl) {
            /**
             * The card should never swipe to close
             * on the content with a refresher.
             * Note: We cannot solve this by making the
             * swipeToClose gesture have a higher priority
             * than the refresher gesture as the iOS native
             * refresh gesture uses a scroll listener in
             * addition to a gesture.
             *
             * Note: Do not use getScrollElement here
             * because we need this to be a synchronous
             * operation, and getScrollElement is
             * asynchronous.
             */
            if ((0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.i)(contentEl)) {
              var root = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.g)(contentEl);
              scrollEl = root.querySelector('.inner-scroll');
            } else {
              scrollEl = contentEl;
            }

            var hasRefresherInContent = !!contentEl.querySelector('ion-refresher');
            return !hasRefresherInContent && scrollEl.scrollTop === 0;
          }
          /**
           * Card should be swipeable on all
           * parts of the modal except for the footer.
           */


          var footer = target.closest('ion-footer');

          if (footer === null) {
            return true;
          }

          return false;
        };

        var onStart = function onStart(detail) {
          var deltaY = detail.deltaY;
          /**
           * Get the initial scrollY value so
           * that we can correctly reset the scrollY
           * prop when the gesture ends.
           */

          initialScrollY = getScrollY();
          /**
           * If canDismiss is anything other than `true`
           * then users should be able to swipe down
           * until a threshold is hit. At that point,
           * the card modal should not proceed any further.
           * TODO (FW-937)
           * Remove undefined check
           */

          canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;
          /**
           * If we are pulling down, then
           * it is possible we are pulling on the
           * content. We do not want scrolling to
           * happen at the same time as the gesture.
           */

          if (deltaY > 0 && contentEl) {
            (0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.d)(contentEl);
          }

          animation.progressStart(true, isOpen ? 1 : 0);
        };

        var onMove = function onMove(detail) {
          var deltaY = detail.deltaY;
          /**
           * If we are pulling down, then
           * it is possible we are pulling on the
           * content. We do not want scrolling to
           * happen at the same time as the gesture.
           */

          if (deltaY > 0 && contentEl) {
            (0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.d)(contentEl);
          }
          /**
           * If we are swiping on the content
           * then the swipe gesture should only
           * happen if we are pulling down.
           *
           * However, if we pull up and
           * then down such that the scroll position
           * returns to 0, we should be able to swipe
           * the card.
           */


          var step = detail.deltaY / height;
          /**
           * Check if user is swiping down and
           * if we have a canDismiss value that
           * should block the gesture from
           * proceeding,
           */

          var isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;
          /**
           * If we are blocking the gesture from dismissing,
           * set the max step value so that the sheet cannot be
           * completely hidden.
           */

          var maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;
          /**
           * If we are blocking the gesture from
           * dismissing, calculate the spring modifier value
           * this will be added to the starting breakpoint
           * value to give the gesture a spring-like feeling.
           * Note that the starting breakpoint is always 0,
           * so we omit adding 0 to the result.
           */

          var processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;
          var clampedStep = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.l)(0.0001, processedStep, maxStep);
          animation.progressStep(clampedStep);
          /**
           * When swiping down half way, the status bar style
           * should be reset to its default value.
           *
           * We track lastStep so that we do not fire these
           * functions on every onMove, only when the user has
           * crossed a certain threshold.
           */

          if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {
            setCardStatusBarDefault(statusBarStyle);
            /**
             * However, if we swipe back up, then the
             * status bar style should be set to have light
             * text on a dark background.
             */
          } else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {
            setCardStatusBarDark();
          }

          lastStep = clampedStep;
        };

        var onEnd = function onEnd(detail) {
          var velocity = detail.velocityY;
          var step = detail.deltaY / height;
          var isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;
          var maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;
          var processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;
          var clampedStep = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.l)(0.0001, processedStep, maxStep);
          var threshold = (detail.deltaY + velocity * 1000) / height;
          /**
           * If canDismiss blocks
           * the swipe gesture, then the
           * animation can never complete until
           * canDismiss is checked.
           */

          var shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;
          var newStepValue = shouldComplete ? -0.001 : 0.001;

          if (!shouldComplete) {
            animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');
            newStepValue += (0, _cubic_bezier_e78d1307_js__WEBPACK_IMPORTED_MODULE_13__.g)([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];
          } else {
            animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');
            newStepValue += (0, _cubic_bezier_e78d1307_js__WEBPACK_IMPORTED_MODULE_13__.g)([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];
          }

          var duration = shouldComplete ? computeDuration(step * height, velocity) : computeDuration((1 - clampedStep) * height, velocity);
          isOpen = shouldComplete;
          gesture.enable(false);

          if (contentEl) {
            (0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.r)(contentEl, initialScrollY);
          }

          animation.onFinish(function () {
            if (!shouldComplete) {
              gesture.enable(true);
            }
          }).progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);
          /**
           * If the canDismiss value blocked the gesture
           * from proceeding, then we should ignore whatever
           * shouldComplete is. Whether or not the modal
           * animation should complete is now determined by
           * canDismiss.
           *
           * If the user swiped >25% of the way
           * to the max step, then we should
           * check canDismiss. 25% was chosen
           * to avoid accidental swipes.
           */

          if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {
            handleCanDismiss(el, animation);
          } else if (shouldComplete) {
            onDismiss();
          }
        };

        var gesture = (0, _index_422b6e83_js__WEBPACK_IMPORTED_MODULE_14__.createGesture)({
          el: el,
          gestureName: 'modalSwipeToClose',
          gesturePriority: 39,
          direction: 'y',
          threshold: 10,
          canStart: canStart,
          onStart: onStart,
          onMove: onMove,
          onEnd: onEnd
        });
        return gesture;
      };

      var computeDuration = function computeDuration(remaining, velocity) {
        return (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.l)(400, remaining / Math.abs(velocity * 1.1), 500);
      };

      var createSheetEnterAnimation = function createSheetEnterAnimation(opts) {
        var currentBreakpoint = opts.currentBreakpoint,
            backdropBreakpoint = opts.backdropBreakpoint;
        /**
         * If the backdropBreakpoint is undefined, then the backdrop
         * should always fade in. If the backdropBreakpoint came before the
         * current breakpoint, then the backdrop should be fading in.
         */

        var shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;
        var initialBackdrop = shouldShowBackdrop ? "calc(var(--backdrop-opacity) * ".concat(currentBreakpoint, ")") : '0';
        var backdropAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)('backdropAnimation').fromTo('opacity', 0, initialBackdrop);

        if (shouldShowBackdrop) {
          backdropAnimation.beforeStyles({
            'pointer-events': 'none'
          }).afterClearStyles(['pointer-events']);
        }

        var wrapperAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)('wrapperAnimation').keyframes([{
          offset: 0,
          opacity: 1,
          transform: 'translateY(100%)'
        }, {
          offset: 1,
          opacity: 1,
          transform: "translateY(".concat(100 - currentBreakpoint * 100, "%)")
        }]);
        return {
          wrapperAnimation: wrapperAnimation,
          backdropAnimation: backdropAnimation
        };
      };

      var createSheetLeaveAnimation = function createSheetLeaveAnimation(opts) {
        var currentBreakpoint = opts.currentBreakpoint,
            backdropBreakpoint = opts.backdropBreakpoint;
        /**
         * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint
         * is defined, so we need to account for that offset by figuring out
         * what the current backdrop value should be.
         */

        var backdropValue = "calc(var(--backdrop-opacity) * ".concat(getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint), ")");
        var defaultBackdrop = [{
          offset: 0,
          opacity: backdropValue
        }, {
          offset: 1,
          opacity: 0
        }];
        var customBackdrop = [{
          offset: 0,
          opacity: backdropValue
        }, {
          offset: backdropBreakpoint,
          opacity: 0
        }, {
          offset: 1,
          opacity: 0
        }];
        var backdropAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);
        var wrapperAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)('wrapperAnimation').keyframes([{
          offset: 0,
          opacity: 1,
          transform: "translateY(".concat(100 - currentBreakpoint * 100, "%)")
        }, {
          offset: 1,
          opacity: 1,
          transform: "translateY(100%)"
        }]);
        return {
          wrapperAnimation: wrapperAnimation,
          backdropAnimation: backdropAnimation
        };
      };

      var createEnterAnimation$1 = function createEnterAnimation$1() {
        var backdropAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({
          'pointer-events': 'none'
        }).afterClearStyles(['pointer-events']);
        var wrapperAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');
        return {
          backdropAnimation: backdropAnimation,
          wrapperAnimation: wrapperAnimation
        };
      };
      /**
       * iOS Modal Enter Animation for the Card presentation style
       */


      var iosEnterAnimation = function iosEnterAnimation(baseEl, opts) {
        var presentingEl = opts.presentingEl,
            currentBreakpoint = opts.currentBreakpoint;
        var root = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.g)(baseEl);

        var _ref3 = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1(),
            wrapperAnimation = _ref3.wrapperAnimation,
            backdropAnimation = _ref3.backdropAnimation;

        backdropAnimation.addElement(root.querySelector('ion-backdrop'));
        wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({
          opacity: 1
        });
        var baseAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)('entering-base').addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(500).addAnimation(wrapperAnimation);

        if (presentingEl) {
          var isMobile = window.innerWidth < 768;
          var hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;
          var presentingElRoot = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.g)(presentingEl);
          var presentingAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().beforeStyles({
            transform: 'translateY(0)',
            'transform-origin': 'top center',
            overflow: 'hidden'
          });
          var bodyEl = document.body;

          if (isMobile) {
            /**
             * Fallback for browsers that does not support `max()` (ex: Firefox)
             * No need to worry about statusbar padding since engines like Gecko
             * are not used as the engine for standalone Cordova/Capacitor apps
             */
            var transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';
            var modalTransform = hasCardModal ? '-10px' : transformOffset;
            var toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;
            var finalTransform = "translateY(".concat(modalTransform, ") scale(").concat(toPresentingScale, ")");
            presentingAnimation.afterStyles({
              transform: finalTransform
            }).beforeAddWrite(function () {
              return bodyEl.style.setProperty('background-color', 'black');
            }).addElement(presentingEl).keyframes([{
              offset: 0,
              filter: 'contrast(1)',
              transform: 'translateY(0px) scale(1)',
              borderRadius: '0px'
            }, {
              offset: 1,
              filter: 'contrast(0.85)',
              transform: finalTransform,
              borderRadius: '10px 10px 0 0'
            }]);
            baseAnimation.addAnimation(presentingAnimation);
          } else {
            baseAnimation.addAnimation(backdropAnimation);

            if (!hasCardModal) {
              wrapperAnimation.fromTo('opacity', '0', '1');
            } else {
              var _toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;

              var _finalTransform = "translateY(-10px) scale(".concat(_toPresentingScale, ")");

              presentingAnimation.afterStyles({
                transform: _finalTransform
              }).addElement(presentingElRoot.querySelector('.modal-wrapper')).keyframes([{
                offset: 0,
                filter: 'contrast(1)',
                transform: 'translateY(0) scale(1)'
              }, {
                offset: 1,
                filter: 'contrast(0.85)',
                transform: _finalTransform
              }]);
              var shadowAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().afterStyles({
                transform: _finalTransform
              }).addElement(presentingElRoot.querySelector('.modal-shadow')).keyframes([{
                offset: 0,
                opacity: '1',
                transform: 'translateY(0) scale(1)'
              }, {
                offset: 1,
                opacity: '0',
                transform: _finalTransform
              }]);
              baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);
            }
          }
        } else {
          baseAnimation.addAnimation(backdropAnimation);
        }

        return baseAnimation;
      };

      var createLeaveAnimation$1 = function createLeaveAnimation$1() {
        var backdropAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().fromTo('opacity', 'var(--backdrop-opacity)', 0);
        var wrapperAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');
        return {
          backdropAnimation: backdropAnimation,
          wrapperAnimation: wrapperAnimation
        };
      };
      /**
       * iOS Modal Leave Animation
       */


      var iosLeaveAnimation = function iosLeaveAnimation(baseEl, opts) {
        var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;
        var presentingEl = opts.presentingEl,
            currentBreakpoint = opts.currentBreakpoint;
        var root = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.g)(baseEl);

        var _ref4 = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1(),
            wrapperAnimation = _ref4.wrapperAnimation,
            backdropAnimation = _ref4.backdropAnimation;

        backdropAnimation.addElement(root.querySelector('ion-backdrop'));
        wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({
          opacity: 1
        });
        var baseAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)('leaving-base').addElement(baseEl).easing('cubic-bezier(0.32,0.72,0,1)').duration(duration).addAnimation(wrapperAnimation);

        if (presentingEl) {
          var isMobile = window.innerWidth < 768;
          var hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;
          var presentingElRoot = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.g)(presentingEl);
          var presentingAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().beforeClearStyles(['transform']).afterClearStyles(['transform']).onFinish(function (currentStep) {
            // only reset background color if this is the last card-style modal
            if (currentStep !== 1) {
              return;
            }

            presentingEl.style.setProperty('overflow', '');
            var numModals = Array.from(bodyEl.querySelectorAll('ion-modal')).filter(function (m) {
              return m.presentingElement !== undefined;
            }).length;

            if (numModals <= 1) {
              bodyEl.style.setProperty('background-color', '');
            }
          });
          var bodyEl = document.body;

          if (isMobile) {
            var transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';
            var modalTransform = hasCardModal ? '-10px' : transformOffset;
            var toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;
            var finalTransform = "translateY(".concat(modalTransform, ") scale(").concat(toPresentingScale, ")");
            presentingAnimation.addElement(presentingEl).keyframes([{
              offset: 0,
              filter: 'contrast(0.85)',
              transform: finalTransform,
              borderRadius: '10px 10px 0 0'
            }, {
              offset: 1,
              filter: 'contrast(1)',
              transform: 'translateY(0px) scale(1)',
              borderRadius: '0px'
            }]);
            baseAnimation.addAnimation(presentingAnimation);
          } else {
            baseAnimation.addAnimation(backdropAnimation);

            if (!hasCardModal) {
              wrapperAnimation.fromTo('opacity', '1', '0');
            } else {
              var _toPresentingScale2 = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;

              var _finalTransform2 = "translateY(-10px) scale(".concat(_toPresentingScale2, ")");

              presentingAnimation.addElement(presentingElRoot.querySelector('.modal-wrapper')).afterStyles({
                transform: 'translate3d(0, 0, 0)'
              }).keyframes([{
                offset: 0,
                filter: 'contrast(0.85)',
                transform: _finalTransform2
              }, {
                offset: 1,
                filter: 'contrast(1)',
                transform: 'translateY(0) scale(1)'
              }]);
              var shadowAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().addElement(presentingElRoot.querySelector('.modal-shadow')).afterStyles({
                transform: 'translateY(0) scale(1)'
              }).keyframes([{
                offset: 0,
                opacity: '0',
                transform: _finalTransform2
              }, {
                offset: 1,
                opacity: '1',
                transform: 'translateY(0) scale(1)'
              }]);
              baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);
            }
          }
        } else {
          baseAnimation.addAnimation(backdropAnimation);
        }

        return baseAnimation;
      };

      var createEnterAnimation = function createEnterAnimation() {
        var backdropAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().fromTo('opacity', 0.01, 'var(--backdrop-opacity)').beforeStyles({
          'pointer-events': 'none'
        }).afterClearStyles(['pointer-events']);
        var wrapperAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().keyframes([{
          offset: 0,
          opacity: 0.01,
          transform: 'translateY(40px)'
        }, {
          offset: 1,
          opacity: 1,
          transform: "translateY(0px)"
        }]);
        return {
          backdropAnimation: backdropAnimation,
          wrapperAnimation: wrapperAnimation
        };
      };
      /**
       * Md Modal Enter Animation
       */


      var mdEnterAnimation = function mdEnterAnimation(baseEl, opts) {
        var currentBreakpoint = opts.currentBreakpoint;
        var root = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.g)(baseEl);

        var _ref5 = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation(),
            wrapperAnimation = _ref5.wrapperAnimation,
            backdropAnimation = _ref5.backdropAnimation;

        backdropAnimation.addElement(root.querySelector('ion-backdrop'));
        wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));
        return (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().addElement(baseEl).easing('cubic-bezier(0.36,0.66,0.04,1)').duration(280).addAnimation([backdropAnimation, wrapperAnimation]);
      };

      var createLeaveAnimation = function createLeaveAnimation() {
        var backdropAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().fromTo('opacity', 'var(--backdrop-opacity)', 0);
        var wrapperAnimation = (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().keyframes([{
          offset: 0,
          opacity: 0.99,
          transform: "translateY(0px)"
        }, {
          offset: 1,
          opacity: 0,
          transform: 'translateY(40px)'
        }]);
        return {
          backdropAnimation: backdropAnimation,
          wrapperAnimation: wrapperAnimation
        };
      };
      /**
       * Md Modal Leave Animation
       */


      var mdLeaveAnimation = function mdLeaveAnimation(baseEl, opts) {
        var currentBreakpoint = opts.currentBreakpoint;
        var root = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.g)(baseEl);

        var _ref6 = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation(),
            wrapperAnimation = _ref6.wrapperAnimation,
            backdropAnimation = _ref6.backdropAnimation;

        backdropAnimation.addElement(root.querySelector('ion-backdrop'));
        wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));
        return (0, _animation_4ff3f603_js__WEBPACK_IMPORTED_MODULE_12__.c)().easing('cubic-bezier(0.47,0,0.745,0.715)').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);
      };

      var createSheetGesture = function createSheetGesture(baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation) {
        var breakpoints = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];
        var getCurrentBreakpoint = arguments.length > 7 ? arguments[7] : undefined;
        var onDismiss = arguments.length > 8 ? arguments[8] : undefined;
        var onBreakpointChange = arguments.length > 9 ? arguments[9] : undefined;
        // Defaults for the sheet swipe animation
        var defaultBackdrop = [{
          offset: 0,
          opacity: 'var(--backdrop-opacity)'
        }, {
          offset: 1,
          opacity: 0.01
        }];
        var customBackdrop = [{
          offset: 0,
          opacity: 'var(--backdrop-opacity)'
        }, {
          offset: 1 - backdropBreakpoint,
          opacity: 0
        }, {
          offset: 1,
          opacity: 0
        }];
        var SheetDefaults = {
          WRAPPER_KEYFRAMES: [{
            offset: 0,
            transform: 'translateY(0%)'
          }, {
            offset: 1,
            transform: 'translateY(100%)'
          }],
          BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop
        };
        var contentEl = baseEl.querySelector('ion-content');
        var height = wrapperEl.clientHeight;
        var currentBreakpoint = initialBreakpoint;
        var offset = 0;
        var canDismissBlocksGesture = false;
        var canDismissMaxStep = 0.95;
        var wrapperAnimation = animation.childAnimations.find(function (ani) {
          return ani.id === 'wrapperAnimation';
        });
        var backdropAnimation = animation.childAnimations.find(function (ani) {
          return ani.id === 'backdropAnimation';
        });
        var maxBreakpoint = breakpoints[breakpoints.length - 1];
        var minBreakpoint = breakpoints[0];

        var enableBackdrop = function enableBackdrop() {
          baseEl.style.setProperty('pointer-events', 'auto');
          backdropEl.style.setProperty('pointer-events', 'auto');
          /**
           * When the backdrop is enabled, elements such
           * as inputs should not be focusable outside
           * the sheet.
           */

          baseEl.classList.remove('ion-disable-focus-trap');
        };

        var disableBackdrop = function disableBackdrop() {
          baseEl.style.setProperty('pointer-events', 'none');
          backdropEl.style.setProperty('pointer-events', 'none');
          /**
           * When the backdrop is enabled, elements such
           * as inputs should not be focusable outside
           * the sheet.
           * Adding this class disables focus trapping
           * for the sheet temporarily.
           */

          baseEl.classList.add('ion-disable-focus-trap');
        };
        /**
         * After the entering animation completes,
         * we need to set the animation to go from
         * offset 0 to offset 1 so that users can
         * swipe in any direction. We then set the
         * animation offset to the current breakpoint
         * so there is no flickering.
         */


        if (wrapperAnimation && backdropAnimation) {
          wrapperAnimation.keyframes(_toConsumableArray(SheetDefaults.WRAPPER_KEYFRAMES));
          backdropAnimation.keyframes(_toConsumableArray(SheetDefaults.BACKDROP_KEYFRAMES));
          animation.progressStart(true, 1 - currentBreakpoint);
          /**
           * If backdrop is not enabled, then content
           * behind modal should be clickable. To do this, we need
           * to remove pointer-events from ion-modal as a whole.
           * ion-backdrop and .modal-wrapper always have pointer-events: auto
           * applied, so the modal content can still be interacted with.
           */

          var shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;

          if (shouldEnableBackdrop) {
            enableBackdrop();
          } else {
            disableBackdrop();
          }
        }

        if (contentEl && currentBreakpoint !== maxBreakpoint) {
          contentEl.scrollY = false;
        }

        var canStart = function canStart(detail) {
          /**
           * If the sheet is fully expanded and
           * the user is swiping on the content,
           * the gesture should not start to
           * allow for scrolling on the content.
           */
          var content = detail.event.target.closest('ion-content');
          currentBreakpoint = getCurrentBreakpoint();

          if (currentBreakpoint === 1 && content) {
            return false;
          }

          return true;
        };

        var onStart = function onStart() {
          /**
           * If canDismiss is anything other than `true`
           * then users should be able to swipe down
           * until a threshold is hit. At that point,
           * the card modal should not proceed any further.
           *
           * canDismiss is never fired via gesture if there is
           * no 0 breakpoint. However, it can be fired if the user
           * presses Esc or the hardware back button.
           * TODO (FW-937)
           * Remove undefined check
           */
          canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;
          /**
           * If swiping on the content
           * we should disable scrolling otherwise
           * the sheet will expand and the content will scroll.
           */

          if (contentEl) {
            contentEl.scrollY = false;
          }

          (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.r)(function () {
            /**
             * Dismisses the open keyboard when the sheet drag gesture is started.
             * Sets the focus onto the modal element.
             */
            baseEl.focus();
          });
          animation.progressStart(true, 1 - currentBreakpoint);
        };

        var onMove = function onMove(detail) {
          /**
           * Given the change in gesture position on the Y axis,
           * compute where the offset of the animation should be
           * relative to where the user dragged.
           */
          var initialStep = 1 - currentBreakpoint;
          var secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;
          var step = initialStep + detail.deltaY / height;
          var isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;
          /**
           * If we are blocking the gesture from dismissing,
           * set the max step value so that the sheet cannot be
           * completely hidden.
           */

          var maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;
          /**
           * If we are blocking the gesture from
           * dismissing, calculate the spring modifier value
           * this will be added to the starting breakpoint
           * value to give the gesture a spring-like feeling.
           * Note that when isAttemptingDismissWithCanDismiss is true,
           * the modifier is always added to the breakpoint that
           * appears right after the 0 breakpoint.
           *
           * Note that this modifier is essentially the progression
           * between secondToLastBreakpoint and maxStep which is
           * why we subtract secondToLastBreakpoint. This lets us get
           * the result as a value from 0 to 1.
           */

          var processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined ? secondToLastBreakpoint + calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint)) : step;
          offset = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.l)(0.0001, processedStep, maxStep);
          animation.progressStep(offset);
        };

        var onEnd = function onEnd(detail) {
          /**
           * When the gesture releases, we need to determine
           * the closest breakpoint to snap to.
           */
          var velocity = detail.velocityY;
          var threshold = (detail.deltaY + velocity * 350) / height;
          var diff = currentBreakpoint - threshold;
          var closest = breakpoints.reduce(function (a, b) {
            return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;
          });
          moveSheetToBreakpoint({
            breakpoint: closest,
            breakpointOffset: offset,
            canDismiss: canDismissBlocksGesture
          });
        };

        var moveSheetToBreakpoint = function moveSheetToBreakpoint(options) {
          var breakpoint = options.breakpoint,
              canDismiss = options.canDismiss,
              breakpointOffset = options.breakpointOffset;
          /**
           * canDismiss should only prevent snapping
           * when users are trying to dismiss. If canDismiss
           * is present but the user is trying to swipe upwards,
           * we should allow that to happen,
           */

          var shouldPreventDismiss = canDismiss && breakpoint === 0;
          var snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;
          var shouldRemainOpen = snapToBreakpoint !== 0;
          currentBreakpoint = 0;
          /**
           * Update the animation so that it plays from
           * the last offset to the closest snap point.
           */

          if (wrapperAnimation && backdropAnimation) {
            wrapperAnimation.keyframes([{
              offset: 0,
              transform: "translateY(".concat(breakpointOffset * 100, "%)")
            }, {
              offset: 1,
              transform: "translateY(".concat((1 - snapToBreakpoint) * 100, "%)")
            }]);
            backdropAnimation.keyframes([{
              offset: 0,
              opacity: "calc(var(--backdrop-opacity) * ".concat(getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint), ")")
            }, {
              offset: 1,
              opacity: "calc(var(--backdrop-opacity) * ".concat(getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint), ")")
            }]);
            animation.progressStep(0);
          }
          /**
           * Gesture should remain disabled until the
           * snapping animation completes.
           */


          gesture.enable(false);

          if (shouldPreventDismiss) {
            handleCanDismiss(baseEl, animation);
          } else if (!shouldRemainOpen) {
            onDismiss();
          }

          return new Promise(function (resolve) {
            animation.onFinish(function () {
              if (shouldRemainOpen) {
                /**
                 * Once the snapping animation completes,
                 * we need to reset the animation to go
                 * from 0 to 1 so users can swipe in any direction.
                 * We then set the animation offset to the current
                 * breakpoint so that it starts at the snapped position.
                 */
                if (wrapperAnimation && backdropAnimation) {
                  (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.r)(function () {
                    wrapperAnimation.keyframes(_toConsumableArray(SheetDefaults.WRAPPER_KEYFRAMES));
                    backdropAnimation.keyframes(_toConsumableArray(SheetDefaults.BACKDROP_KEYFRAMES));
                    animation.progressStart(true, 1 - snapToBreakpoint);
                    currentBreakpoint = snapToBreakpoint;
                    onBreakpointChange(currentBreakpoint);
                    /**
                     * If the sheet is fully expanded, we can safely
                     * enable scrolling again.
                     */

                    if (contentEl && currentBreakpoint === breakpoints[breakpoints.length - 1]) {
                      contentEl.scrollY = true;
                    }
                    /**
                     * Backdrop should become enabled
                     * after the backdropBreakpoint value
                     */


                    var shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;

                    if (shouldEnableBackdrop) {
                      enableBackdrop();
                    } else {
                      disableBackdrop();
                    }

                    gesture.enable(true);
                    resolve();
                  });
                } else {
                  gesture.enable(true);
                  resolve();
                }
              } else {
                resolve();
              }
              /**
               * This must be a one time callback
               * otherwise a new callback will
               * be added every time onEnd runs.
               */

            }, {
              oneTimeCallback: true
            }).progressEnd(1, 0, 500);
          });
        };

        var gesture = (0, _index_422b6e83_js__WEBPACK_IMPORTED_MODULE_14__.createGesture)({
          el: wrapperEl,
          gestureName: 'modalSheet',
          gesturePriority: 40,
          direction: 'y',
          threshold: 10,
          canStart: canStart,
          onStart: onStart,
          onMove: onMove,
          onEnd: onEnd
        });
        return {
          gesture: gesture,
          moveSheetToBreakpoint: moveSheetToBreakpoint
        };
      };

      var modalIosCss = ":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;margin-left:auto;margin-right:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.modal-handle::before{padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\"\"}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle::before{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: 1px){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: 1px){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-card) .modal-wrapper,:host-context([dir=rtl]).modal-card .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}:host-context([dir=rtl]):host(.modal-sheet) .modal-wrapper,:host-context([dir=rtl]).modal-sheet .modal-wrapper{border-top-left-radius:var(--border-radius);border-top-right-radius:var(--border-radius);border-bottom-right-radius:0;border-bottom-left-radius:0}";
      var modalMdCss = ":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;margin-left:auto;margin-right:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, #c0c0be);cursor:pointer;z-index:11}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.modal-handle::before{padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\"\"}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.modal-handle::before{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}";

      var Modal = /*#__PURE__*/function () {
        function Modal(hostRef) {
          var _this10 = this;

          _classCallCheck(this, Modal);

          (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
          this.didPresent = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionModalDidPresent", 7);
          this.willPresent = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionModalWillPresent", 7);
          this.willDismiss = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionModalWillDismiss", 7);
          this.didDismiss = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionModalDidDismiss", 7);
          this.ionBreakpointDidChange = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "ionBreakpointDidChange", 7);
          this.didPresentShorthand = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "didPresent", 7);
          this.willPresentShorthand = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "willPresent", 7);
          this.willDismissShorthand = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "willDismiss", 7);
          this.didDismissShorthand = (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.e)(this, "didDismiss", 7);
          this.modalIndex = modalIds++;
          this.coreDelegate = (0, _framework_delegate_c3305a28_js__WEBPACK_IMPORTED_MODULE_4__.C)();
          this.isSheetModal = false;
          this.inheritedAttributes = {};
          this.inline = false; // Whether or not modal is being dismissed via gesture

          this.gestureAnimationDismissing = false;
          this.presented = false;
          /** @internal */

          this.hasController = false;
          /**
           * If `true`, the keyboard will be automatically dismissed when the overlay is presented.
           */

          this.keyboardClose = true;
          /**
           * A decimal value between 0 and 1 that indicates the
           * point after which the backdrop will begin to fade in
           * when using a sheet modal. Prior to this point, the
           * backdrop will be hidden and the content underneath
           * the sheet can be interacted with. This value is exclusive
           * meaning the backdrop will become active after the value
           * specified.
           */

          this.backdropBreakpoint = 0;
          /**
           * The interaction behavior for the sheet modal when the handle is pressed.
           *
           * Defaults to `"none"`, which  means the modal will not change size or position when the handle is pressed.
           * Set to `"cycle"` to let the modal cycle between available breakpoints when pressed.
           *
           * Handle behavior is unavailable when the `handle` property is set to `false` or
           * when the `breakpoints` property is not set (using a fullscreen or card modal).
           */

          this.handleBehavior = 'none';
          /**
           * If `true`, the modal will be dismissed when the backdrop is clicked.
           */

          this.backdropDismiss = true;
          /**
           * If `true`, a backdrop will be displayed behind the modal.
           * This property controls whether or not the backdrop
           * darkens the screen when the modal is presented.
           * It does not control whether or not the backdrop
           * is active or present in the DOM.
           */

          this.showBackdrop = true;
          /**
           * If `true`, the modal will animate.
           */

          this.animated = true;
          /**
           * If `true`, the modal can be swiped to dismiss. Only applies in iOS mode.
           * @deprecated - To prevent modals from dismissing, use canDismiss instead.
           */

          this.swipeToClose = false;
          /**
           * If `true`, the modal will open. If `false`, the modal will close.
           * Use this if you need finer grained control over presentation, otherwise
           * just use the modalController or the `trigger` property.
           * Note: `isOpen` will not automatically be set back to `false` when
           * the modal dismisses. You will need to do that in your code.
           */

          this.isOpen = false;
          /**
           * If `true`, the component passed into `ion-modal` will
           * automatically be mounted when the modal is created. The
           * component will remain mounted even when the modal is dismissed.
           * However, the component will be destroyed when the modal is
           * destroyed. This property is not reactive and should only be
           * used when initially creating a modal.
           *
           * Note: This feature only applies to inline modals in JavaScript
           * frameworks such as Angular, React, and Vue.
           */

          this.keepContentsMounted = false;

          this.configureTriggerInteraction = function () {
            var trigger = _this10.trigger,
                el = _this10.el,
                destroyTriggerInteraction = _this10.destroyTriggerInteraction;

            if (destroyTriggerInteraction) {
              destroyTriggerInteraction();
            }

            if (trigger === undefined) {
              return;
            }

            var triggerEl = trigger !== undefined ? document.getElementById(trigger) : null;

            if (!triggerEl) {
              (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.p)("A trigger element with the ID \"".concat(trigger, "\" was not found in the DOM. The trigger element must be in the DOM when the \"trigger\" property is set on ion-modal."), _this10.el);
              return;
            }

            var configureTriggerInteraction = function configureTriggerInteraction(trigEl, modalEl) {
              var openModal = function openModal() {
                modalEl.present();
              };

              trigEl.addEventListener('click', openModal);
              return function () {
                trigEl.removeEventListener('click', openModal);
              };
            };

            _this10.destroyTriggerInteraction = configureTriggerInteraction(triggerEl, el);
          };

          this.onHandleClick = function () {
            var sheetTransition = _this10.sheetTransition,
                handleBehavior = _this10.handleBehavior;

            if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {
              /**
               * The sheet modal should not advance to the next breakpoint
               * if the handle behavior is not `cycle` or if the handle
               * is clicked while the sheet is moving to a breakpoint.
               */
              return;
            }

            _this10.moveToNextBreakpoint();
          };

          this.onBackdropTap = function () {
            var sheetTransition = _this10.sheetTransition;

            if (sheetTransition !== undefined) {
              /**
               * When the handle is double clicked at the largest breakpoint,
               * it will start to move to the first breakpoint. While transitioning,
               * the backdrop will often receive the second click. We prevent the
               * backdrop from dismissing the modal while moving between breakpoints.
               */
              return;
            }

            _this10.dismiss(undefined, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.B);
          };

          this.onLifecycle = function (modalEvent) {
            var el = _this10.usersElement;
            var name = LIFECYCLE_MAP[modalEvent.type];

            if (el && name) {
              var ev = new CustomEvent(name, {
                bubbles: false,
                cancelable: false,
                detail: modalEvent.detail
              });
              el.dispatchEvent(ev);
            }
          };
        }

        return _createClass(Modal, [{
          key: "onIsOpenChange",
          value: function onIsOpenChange(newValue, oldValue) {
            if (newValue === true && oldValue === false) {
              this.present();
            } else if (newValue === false && oldValue === true) {
              this.dismiss();
            }
          }
        }, {
          key: "onTriggerChange",
          value: function onTriggerChange() {
            this.configureTriggerInteraction();
          }
        }, {
          key: "swipeToCloseChanged",
          value: function swipeToCloseChanged(enable) {
            var _this = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
              return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                while (1) switch (_context3.prev = _context3.next) {
                  case 0:
                    if (_this.gesture) {
                      _this.gesture.enable(enable);
                    } else if (enable) {
                      _this.initSwipeToClose();
                    }

                  case 1:
                  case "end":
                    return _context3.stop();
                }
              }, _callee3);
            }))();
          }
        }, {
          key: "breakpointsChanged",
          value: function breakpointsChanged(breakpoints) {
            if (breakpoints !== undefined) {
              this.sortedBreakpoints = breakpoints.sort(function (a, b) {
                return a - b;
              });
            }
          }
        }, {
          key: "connectedCallback",
          value: function connectedCallback() {
            var configureTriggerInteraction = this.configureTriggerInteraction,
                el = this.el;
            (0, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.e)(el);
            configureTriggerInteraction();
          }
        }, {
          key: "disconnectedCallback",
          value: function disconnectedCallback() {
            var destroyTriggerInteraction = this.destroyTriggerInteraction;

            if (destroyTriggerInteraction) {
              destroyTriggerInteraction();
            }
          }
        }, {
          key: "componentWillLoad",
          value: function componentWillLoad() {
            var breakpoints = this.breakpoints,
                initialBreakpoint = this.initialBreakpoint,
                swipeToClose = this.swipeToClose,
                el = this.el;
            this.inheritedAttributes = (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.j)(el, ['aria-label', 'role']);
            /**
             * If user has custom ID set then we should
             * not assign the default incrementing ID.
             */

            this.modalId = this.el.hasAttribute('id') ? this.el.getAttribute('id') : "ion-modal-".concat(this.modalIndex);
            var isSheetModal = this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined;

            if (isSheetModal) {
              this.currentBreakpoint = this.initialBreakpoint;
            }

            if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {
              (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.p)('Your breakpoints array must include the initialBreakpoint value.');
            }

            if (swipeToClose) {
              (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.p)('swipeToClose has been deprecated in favor of canDismiss.\n\nIf you want a card modal to be swipeable, set canDismiss to `true`. In the next major release of Ionic, swipeToClose will be removed, and all card modals will be swipeable by default.');
            }
          }
        }, {
          key: "componentDidLoad",
          value: function componentDidLoad() {
            var _this11 = this;

            /**
             * If modal was rendered with isOpen="true"
             * then we should open modal immediately.
             */
            if (this.isOpen === true) {
              (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.r)(function () {
                return _this11.present();
              });
            }

            this.breakpointsChanged(this.breakpoints);
          }
          /**
           * Determines whether or not an overlay
           * is being used inline or via a controller/JS
           * and returns the correct delegate.
           * By default, subsequent calls to getDelegate
           * will use a cached version of the delegate.
           * This is useful for calling dismiss after
           * present so that the correct delegate is given.
           */

        }, {
          key: "getDelegate",
          value: function getDelegate() {
            var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            if (this.workingDelegate && !force) {
              return {
                delegate: this.workingDelegate,
                inline: this.inline
              };
            }
            /**
             * If using overlay inline
             * we potentially need to use the coreDelegate
             * so that this works in vanilla JS apps.
             * If a developer has presented this component
             * via a controller, then we can assume
             * the component is already in the
             * correct place.
             */


            var parentEl = this.el.parentNode;
            var inline = this.inline = parentEl !== null && !this.hasController;
            var delegate = this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate;
            return {
              inline: inline,
              delegate: delegate
            };
          }
          /**
           * Determines whether or not the
           * modal is allowed to dismiss based
           * on the state of the canDismiss prop.
           */

        }, {
          key: "checkCanDismiss",
          value: function checkCanDismiss(data, role) {
            var _this2 = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
              var canDismiss;
              return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                while (1) switch (_context4.prev = _context4.next) {
                  case 0:
                    canDismiss = _this2.canDismiss;
                    /**
                     * TODO (FW-937) - Remove the following check in
                     * the next major release of Ionic.
                     */

                    if (!(canDismiss === undefined)) {
                      _context4.next = 3;
                      break;
                    }

                    return _context4.abrupt("return", true);

                  case 3:
                    if (!(typeof canDismiss === 'function')) {
                      _context4.next = 5;
                      break;
                    }

                    return _context4.abrupt("return", canDismiss(data, role));

                  case 5:
                    return _context4.abrupt("return", canDismiss);

                  case 6:
                  case "end":
                    return _context4.stop();
                }
              }, _callee4);
            }))();
          }
          /**
           * Present the modal overlay after it has been created.
           */

        }, {
          key: "present",
          value: function present() {
            var _this3 = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
              var _this3$getDelegate, inline, delegate, hasCardModal;

              return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                while (1) switch (_context5.prev = _context5.next) {
                  case 0:
                    if (!_this3.presented) {
                      _context5.next = 2;
                      break;
                    }

                    return _context5.abrupt("return");

                  case 2:
                    if (!(_this3.currentTransition !== undefined)) {
                      _context5.next = 5;
                      break;
                    }

                    _context5.next = 5;
                    return _this3.currentTransition;

                  case 5:
                    /**
                     * If the modal is presented multiple times (inline modals), we
                     * need to reset the current breakpoint to the initial breakpoint.
                     */
                    _this3.currentBreakpoint = _this3.initialBreakpoint;
                    _this3$getDelegate = _this3.getDelegate(true), inline = _this3$getDelegate.inline, delegate = _this3$getDelegate.delegate;
                    _context5.next = 9;
                    return (0, _framework_delegate_c3305a28_js__WEBPACK_IMPORTED_MODULE_4__.a)(delegate, _this3.el, _this3.component, ['ion-page'], _this3.componentProps, inline);

                  case 9:
                    _this3.usersElement = _context5.sent;
                    _context5.next = 12;
                    return (0, _index_27c7e5c4_js__WEBPACK_IMPORTED_MODULE_11__.e)(_this3.usersElement);

                  case 12:
                    (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.c)(function () {
                      return _this3.el.classList.add('show-modal');
                    });
                    _this3.currentTransition = (0, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.d)(_this3, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {
                      presentingEl: _this3.presentingElement,
                      currentBreakpoint: _this3.initialBreakpoint,
                      backdropBreakpoint: _this3.backdropBreakpoint
                    });
                    /* tslint:disable-next-line */

                    if (typeof window !== 'undefined') {
                      /**
                       * This needs to be setup before any
                       * non-transition async work so it can be dereferenced
                       * in the dismiss method. The dismiss method
                       * only waits for the entering transition
                       * to finish. It does not wait for all of the `present`
                       * method to resolve.
                       */
                      _this3.keyboardOpenCallback = function () {
                        if (_this3.gesture) {
                          /**
                           * When the native keyboard is opened and the webview
                           * is resized, the gesture implementation will become unresponsive
                           * and enter a free-scroll mode.
                           *
                           * When the keyboard is opened, we disable the gesture for
                           * a single frame and re-enable once the contents have repositioned
                           * from the keyboard placement.
                           */
                          _this3.gesture.enable(false);

                          (0, _helpers_3b390e48_js__WEBPACK_IMPORTED_MODULE_5__.r)(function () {
                            if (_this3.gesture) {
                              _this3.gesture.enable(true);
                            }
                          });
                        }
                      };

                      window.addEventListener(_keyboard_282b81b8_js__WEBPACK_IMPORTED_MODULE_6__.KEYBOARD_DID_OPEN, _this3.keyboardOpenCallback);
                    }
                    /**
                     * TODO (FW-937) - In the next major release of Ionic, all card modals
                     * will be swipeable by default. canDismiss will be used to determine if the
                     * modal can be dismissed. This check should change to check the presence of
                     * presentingElement instead.
                     *
                     * If we did not do this check, then not using swipeToClose would mean you could
                     * not run canDismiss on swipe as there would be no swipe gesture created.
                     */


                    hasCardModal = _this3.presentingElement !== undefined && (_this3.swipeToClose || _this3.canDismiss !== undefined);
                    /**
                     * We need to change the status bar at the
                     * start of the animation so that it completes
                     * by the time the card animation is done.
                     */

                    if (!(hasCardModal && (0, _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__.b)(_this3) === 'ios')) {
                      _context5.next = 21;
                      break;
                    }

                    _context5.next = 19;
                    return StatusBar.getStyle();

                  case 19:
                    _this3.statusBarStyle = _context5.sent;
                    setCardStatusBarDark();

                  case 21:
                    _context5.next = 23;
                    return _this3.currentTransition;

                  case 23:
                    if (_this3.isSheetModal) {
                      _this3.initSheetGesture();
                    } else if (hasCardModal) {
                      _this3.initSwipeToClose();
                    }

                    _this3.currentTransition = undefined;

                  case 25:
                  case "end":
                    return _context5.stop();
                }
              }, _callee5);
            }))();
          }
        }, {
          key: "initSwipeToClose",
          value: function initSwipeToClose() {
            var _this12 = this;

            var _this4 = this;

            var _a;

            if ((0, _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__.b)(this) !== 'ios') {
              return;
            }

            var el = this.el; // All of the elements needed for the swipe gesture
            // should be in the DOM and referenced by now, except
            // for the presenting el

            var animationBuilder = this.leaveAnimation || _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__.c.get('modalLeave', iosLeaveAnimation);

            var ani = this.animation = animationBuilder(el, {
              presentingEl: this.presentingElement
            });
            var contentEl = (0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.a)(el);

            if (!contentEl) {
              (0, _index_e6d1a8be_js__WEBPACK_IMPORTED_MODULE_3__.p)(el);
              return;
            }

            var statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;
            this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, function () {
              /**
               * While the gesture animation is finishing
               * it is possible for a user to tap the backdrop.
               * This would result in the dismiss animation
               * being played again. Typically this is avoided
               * by setting `presented = false` on the overlay
               * component; however, we cannot do that here as
               * that would prevent the element from being
               * removed from the DOM.
               */
              _this12.gestureAnimationDismissing = true;

              _this12.animation.onFinish( /*#__PURE__*/(0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
                return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                  while (1) switch (_context6.prev = _context6.next) {
                    case 0:
                      _context6.next = 2;
                      return _this4.dismiss(undefined, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.G);

                    case 2:
                      _this4.gestureAnimationDismissing = false;

                    case 3:
                    case "end":
                      return _context6.stop();
                  }
                }, _callee6);
              })));
            });
            this.gesture.enable(true);
          }
        }, {
          key: "initSheetGesture",
          value: function initSheetGesture() {
            var _this13 = this;

            var wrapperEl = this.wrapperEl,
                initialBreakpoint = this.initialBreakpoint,
                backdropBreakpoint = this.backdropBreakpoint;

            if (!wrapperEl || initialBreakpoint === undefined) {
              return;
            }

            var animationBuilder = this.enterAnimation || _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__.c.get('modalEnter', iosEnterAnimation);

            var ani = this.animation = animationBuilder(this.el, {
              presentingEl: this.presentingElement,
              currentBreakpoint: initialBreakpoint,
              backdropBreakpoint: backdropBreakpoint
            });
            ani.progressStart(true, 1);

            var _createSheetGesture = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, function () {
              var _a;

              return (_a = _this13.currentBreakpoint) !== null && _a !== void 0 ? _a : 0;
            }, function () {
              return _this13.sheetOnDismiss();
            }, function (breakpoint) {
              if (_this13.currentBreakpoint !== breakpoint) {
                _this13.currentBreakpoint = breakpoint;

                _this13.ionBreakpointDidChange.emit({
                  breakpoint: breakpoint
                });
              }
            }),
                gesture = _createSheetGesture.gesture,
                moveSheetToBreakpoint = _createSheetGesture.moveSheetToBreakpoint;

            this.gesture = gesture;
            this.moveSheetToBreakpoint = moveSheetToBreakpoint;
            this.gesture.enable(true);
          }
        }, {
          key: "sheetOnDismiss",
          value: function sheetOnDismiss() {
            var _this5 = this;
            /**
             * While the gesture animation is finishing
             * it is possible for a user to tap the backdrop.
             * This would result in the dismiss animation
             * being played again. Typically this is avoided
             * by setting `presented = false` on the overlay
             * component; however, we cannot do that here as
             * that would prevent the element from being
             * removed from the DOM.
             */


            this.gestureAnimationDismissing = true;
            this.animation.onFinish( /*#__PURE__*/(0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
              return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                while (1) switch (_context7.prev = _context7.next) {
                  case 0:
                    _this5.currentBreakpoint = 0;

                    _this5.ionBreakpointDidChange.emit({
                      breakpoint: _this5.currentBreakpoint
                    });

                    _context7.next = 4;
                    return _this5.dismiss(undefined, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.G);

                  case 4:
                    _this5.gestureAnimationDismissing = false;

                  case 5:
                  case "end":
                    return _context7.stop();
                }
              }, _callee7);
            })));
          }
          /**
           * Dismiss the modal overlay after it has been presented.
           *
           * @param data Any data to emit in the dismiss events.
           * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.
           */

        }, {
          key: "dismiss",
          value: function dismiss(data, role) {
            var _this6 = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
              var _a, hasCardModal, enteringAnimation, dismissed, _this6$getDelegate, delegate;

              return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                while (1) switch (_context8.prev = _context8.next) {
                  case 0:
                    if (!(_this6.gestureAnimationDismissing && role !== _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.G)) {
                      _context8.next = 2;
                      break;
                    }

                    return _context8.abrupt("return", false);

                  case 2:
                    _context8.t0 = role !== 'handler';

                    if (!_context8.t0) {
                      _context8.next = 7;
                      break;
                    }

                    _context8.next = 6;
                    return _this6.checkCanDismiss(data, role);

                  case 6:
                    _context8.t0 = !_context8.sent;

                  case 7:
                    if (!_context8.t0) {
                      _context8.next = 9;
                      break;
                    }

                    return _context8.abrupt("return", false);

                  case 9:
                    /**
                     * We need to start the status bar change
                     * before the animation so that the change
                     * finishes when the dismiss animation does.
                     * TODO (FW-937)
                     */
                    hasCardModal = _this6.presentingElement !== undefined && (_this6.swipeToClose || _this6.canDismiss !== undefined);

                    if (hasCardModal && (0, _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__.b)(_this6) === 'ios') {
                      setCardStatusBarDefault(_this6.statusBarStyle);
                    }
                    /* tslint:disable-next-line */


                    if (typeof window !== 'undefined' && _this6.keyboardOpenCallback) {
                      window.removeEventListener(_keyboard_282b81b8_js__WEBPACK_IMPORTED_MODULE_6__.KEYBOARD_DID_OPEN, _this6.keyboardOpenCallback);
                      _this6.keyboardOpenCallback = undefined;
                    }
                    /**
                     * When using an inline modal
                     * and presenting a modal it is possible to
                     * quickly dismiss the modal while it is
                     * presenting. We need to await any current
                     * transition to allow the present to finish
                     * before dismissing again.
                     */


                    if (!(_this6.currentTransition !== undefined)) {
                      _context8.next = 15;
                      break;
                    }

                    _context8.next = 15;
                    return _this6.currentTransition;

                  case 15:
                    enteringAnimation = _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.h.get(_this6) || [];
                    _this6.currentTransition = (0, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.f)(_this6, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {
                      presentingEl: _this6.presentingElement,
                      currentBreakpoint: (_a = _this6.currentBreakpoint) !== null && _a !== void 0 ? _a : _this6.initialBreakpoint,
                      backdropBreakpoint: _this6.backdropBreakpoint
                    });
                    _context8.next = 19;
                    return _this6.currentTransition;

                  case 19:
                    dismissed = _context8.sent;

                    if (!dismissed) {
                      _context8.next = 28;
                      break;
                    }

                    _this6$getDelegate = _this6.getDelegate(), delegate = _this6$getDelegate.delegate;
                    _context8.next = 24;
                    return (0, _framework_delegate_c3305a28_js__WEBPACK_IMPORTED_MODULE_4__.d)(delegate, _this6.usersElement);

                  case 24:
                    (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.c)(function () {
                      return _this6.el.classList.remove('show-modal');
                    });

                    if (_this6.animation) {
                      _this6.animation.destroy();
                    }

                    if (_this6.gesture) {
                      _this6.gesture.destroy();
                    }

                    enteringAnimation.forEach(function (ani) {
                      return ani.destroy();
                    });

                  case 28:
                    _this6.currentBreakpoint = undefined;
                    _this6.currentTransition = undefined;
                    _this6.animation = undefined;
                    return _context8.abrupt("return", dismissed);

                  case 32:
                  case "end":
                    return _context8.stop();
                }
              }, _callee8);
            }))();
          }
          /**
           * Returns a promise that resolves when the modal did dismiss.
           */

        }, {
          key: "onDidDismiss",
          value: function onDidDismiss() {
            return (0, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.g)(this.el, 'ionModalDidDismiss');
          }
          /**
           * Returns a promise that resolves when the modal will dismiss.
           */

        }, {
          key: "onWillDismiss",
          value: function onWillDismiss() {
            return (0, _overlays_58fa8e4d_js__WEBPACK_IMPORTED_MODULE_9__.g)(this.el, 'ionModalWillDismiss');
          }
          /**
           * Move a sheet style modal to a specific breakpoint. The breakpoint value must
           * be a value defined in your `breakpoints` array.
           */

        }, {
          key: "setCurrentBreakpoint",
          value: function setCurrentBreakpoint(breakpoint) {
            var _this7 = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
              var currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints;
              return _regeneratorRuntime().wrap(function _callee9$(_context9) {
                while (1) switch (_context9.prev = _context9.next) {
                  case 0:
                    if (_this7.isSheetModal) {
                      _context9.next = 3;
                      break;
                    }

                    (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.p)('setCurrentBreakpoint is only supported on sheet modals.');
                    return _context9.abrupt("return");

                  case 3:
                    if (_this7.breakpoints.includes(breakpoint)) {
                      _context9.next = 6;
                      break;
                    }

                    (0, _index_c4b11676_js__WEBPACK_IMPORTED_MODULE_7__.p)("Attempted to set invalid breakpoint value ".concat(breakpoint, ". Please double check that the breakpoint value is part of your defined breakpoints."));
                    return _context9.abrupt("return");

                  case 6:
                    currentBreakpoint = _this7.currentBreakpoint, moveSheetToBreakpoint = _this7.moveSheetToBreakpoint, canDismiss = _this7.canDismiss, breakpoints = _this7.breakpoints;

                    if (!(currentBreakpoint === breakpoint)) {
                      _context9.next = 9;
                      break;
                    }

                    return _context9.abrupt("return");

                  case 9:
                    if (!moveSheetToBreakpoint) {
                      _context9.next = 14;
                      break;
                    }

                    _this7.sheetTransition = moveSheetToBreakpoint({
                      breakpoint: breakpoint,
                      breakpointOffset: 1 - currentBreakpoint,
                      canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0
                    });
                    _context9.next = 13;
                    return _this7.sheetTransition;

                  case 13:
                    _this7.sheetTransition = undefined;

                  case 14:
                  case "end":
                    return _context9.stop();
                }
              }, _callee9);
            }))();
          }
          /**
           * Returns the current breakpoint of a sheet style modal
           */

        }, {
          key: "getCurrentBreakpoint",
          value: function getCurrentBreakpoint() {
            var _this8 = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
              return _regeneratorRuntime().wrap(function _callee10$(_context10) {
                while (1) switch (_context10.prev = _context10.next) {
                  case 0:
                    return _context10.abrupt("return", _this8.currentBreakpoint);

                  case 1:
                  case "end":
                    return _context10.stop();
                }
              }, _callee10);
            }))();
          }
        }, {
          key: "moveToNextBreakpoint",
          value: function moveToNextBreakpoint() {
            var _this9 = this;

            return (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
              var breakpoints, currentBreakpoint, allowedBreakpoints, currentBreakpointIndex, nextBreakpointIndex, nextBreakpoint;
              return _regeneratorRuntime().wrap(function _callee11$(_context11) {
                while (1) switch (_context11.prev = _context11.next) {
                  case 0:
                    breakpoints = _this9.breakpoints, currentBreakpoint = _this9.currentBreakpoint;

                    if (!(!breakpoints || currentBreakpoint == null)) {
                      _context11.next = 3;
                      break;
                    }

                    return _context11.abrupt("return", false);

                  case 3:
                    allowedBreakpoints = breakpoints.filter(function (b) {
                      return b !== 0;
                    });
                    currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);
                    nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;
                    nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];
                    /**
                     * Sets the current breakpoint to the next available breakpoint.
                     * If the current breakpoint is the last breakpoint, we set the current
                     * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.
                     */

                    _context11.next = 9;
                    return _this9.setCurrentBreakpoint(nextBreakpoint);

                  case 9:
                    return _context11.abrupt("return", true);

                  case 10:
                  case "end":
                    return _context11.stop();
                }
              }, _callee11);
            }))();
          }
        }, {
          key: "render",
          value: function render() {
            var _this14 = this;

            var handle = this.handle,
                isSheetModal = this.isSheetModal,
                presentingElement = this.presentingElement,
                htmlAttributes = this.htmlAttributes,
                handleBehavior = this.handleBehavior,
                inheritedAttributes = this.inheritedAttributes;
            var showHandle = handle !== false && isSheetModal;
            var mode = (0, _ionic_global_c74e4951_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
            var modalId = this.modalId;
            var isCardModal = presentingElement !== undefined && mode === 'ios';
            var isHandleCycle = handleBehavior === 'cycle';
            return (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.H, Object.assign({
              "no-router": true,
              tabindex: "-1"
            }, htmlAttributes, {
              style: {
                zIndex: "".concat(20000 + this.overlayIndex)
              },
              "class": Object.assign(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, mode, true), 'modal-default', !isCardModal && !isSheetModal), "modal-card", isCardModal), "modal-sheet", isSheetModal), 'overlay-hidden', true), (0, _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_10__.g)(this.cssClass)),
              id: modalId,
              onIonBackdropTap: this.onBackdropTap,
              onIonModalDidPresent: this.onLifecycle,
              onIonModalWillPresent: this.onLifecycle,
              onIonModalWillDismiss: this.onLifecycle,
              onIonModalDidDismiss: this.onLifecycle
            }), (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("ion-backdrop", {
              ref: function ref(el) {
                return _this14.backdropEl = el;
              },
              visible: this.showBackdrop,
              tappable: this.backdropDismiss,
              part: "backdrop"
            }), mode === 'ios' && (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", {
              "class": "modal-shadow"
            }), (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("div", Object.assign({
              /*
                role and aria-modal must be used on the
                same element. They must also be set inside the
                shadow DOM otherwise ion-button will not be highlighted
                when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134
              */
              role: "dialog"
            }, inheritedAttributes, {
              "aria-modal": "true",
              "class": "modal-wrapper ion-overlay-wrapper",
              part: "content",
              ref: function ref(el) {
                return _this14.wrapperEl = el;
              }
            }), showHandle && (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("button", {
              "class": "modal-handle",
              // Prevents the handle from receiving keyboard focus when it does not cycle
              tabIndex: !isHandleCycle ? -1 : 0,
              "aria-label": "Activate to adjust the size of the dialog overlaying the screen",
              onClick: isHandleCycle ? this.onHandleClick : undefined,
              part: "handle"
            }), (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.h)("slot", null)));
          }
        }, {
          key: "el",
          get: function get() {
            return (0, _index_8e692445_js__WEBPACK_IMPORTED_MODULE_1__.i)(this);
          }
        }], [{
          key: "watchers",
          get: function get() {
            return {
              "isOpen": ["onIsOpenChange"],
              "trigger": ["onTriggerChange"],
              "swipeToClose": ["swipeToCloseChanged"]
            };
          }
        }]);
      }();

      var LIFECYCLE_MAP = {
        ionModalDidPresent: 'ionViewDidEnter',
        ionModalWillPresent: 'ionViewWillEnter',
        ionModalWillDismiss: 'ionViewWillLeave',
        ionModalDidDismiss: 'ionViewDidLeave'
      };
      var modalIds = 0;
      Modal.style = {
        ios: modalIosCss,
        md: modalMdCss
      };
      /***/
    },

    /***/
    31756:
    /*!*************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/theme-7670341c.js ***!
      \*************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "c": function c() {
          return (
            /* binding */
            createColorClasses
          );
        },

        /* harmony export */
        "g": function g() {
          return (
            /* binding */
            getClassMap
          );
        },

        /* harmony export */
        "h": function h() {
          return (
            /* binding */
            hostContext
          );
        },

        /* harmony export */
        "o": function o() {
          return (
            /* binding */
            openURL
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */
      19369);
      /*!
       * (C) Ionic http://ionicframework.com - MIT License
       */


      var hostContext = function hostContext(selector, el) {
        return el.closest(selector) !== null;
      };
      /**
       * Create the mode and color classes for the component based on the classes passed in
       */


      var createColorClasses = function createColorClasses(color, cssClassMap) {
        return typeof color === 'string' && color.length > 0 ? Object.assign(_defineProperty({
          'ion-color': true
        }, "ion-color-".concat(color), true), cssClassMap) : cssClassMap;
      };

      var getClassList = function getClassList(classes) {
        if (classes !== undefined) {
          var array = Array.isArray(classes) ? classes : classes.split(' ');
          return array.filter(function (c) {
            return c != null;
          }).map(function (c) {
            return c.trim();
          }).filter(function (c) {
            return c !== '';
          });
        }

        return [];
      };

      var getClassMap = function getClassMap(classes) {
        var map = {};
        getClassList(classes).forEach(function (c) {
          return map[c] = true;
        });
        return map;
      };

      var SCHEME = /^[a-z][a-z0-9+\-.]*:/;

      var openURL = /*#__PURE__*/function () {
        var _ref = (0, _Users_tucarmd_DATA_PROJECTS_proscan_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(url, ev, direction, animation) {
          var router;
          return _regeneratorRuntime().wrap(function _callee12$(_context12) {
            while (1) switch (_context12.prev = _context12.next) {
              case 0:
                if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) {
                  _context12.next = 5;
                  break;
                }

                router = document.querySelector('ion-router');

                if (!router) {
                  _context12.next = 5;
                  break;
                }

                if (ev != null) {
                  ev.preventDefault();
                }

                return _context12.abrupt("return", router.push(url, direction, animation));

              case 5:
                return _context12.abrupt("return", false);

              case 6:
              case "end":
                return _context12.stop();
            }
          }, _callee12);
        }));

        return function openURL(_x, _x2, _x3, _x4) {
          return _ref.apply(this, arguments);
        };
      }();
      /***/

    }
  }]);
})();
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-modal_entry_js-es5.js.map