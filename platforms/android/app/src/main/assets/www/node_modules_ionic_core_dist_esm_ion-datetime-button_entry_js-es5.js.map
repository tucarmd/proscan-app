{"version":3,"mappings":"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","names":["iosDatetimeButtonCss","mdDatetimeButtonCss","DatetimeButton","constructor","hostRef","registerInstance","datetimeEl","overlayEl","datetimePresentation","datetimeActive","color","disabled","getParsedDateValues","value","undefined","Array","isArray","setDateTimeText","locale","hourCycle","preferWheel","multiple","titleSelectedDatesFormatter","parsedValues","parsedDatetimes","parseDate","length","getToday","firstParsedDatetime","use24Hour","is24Hour","forEach","parsedDatetime","tzOffset","dateText","timeText","getMonthDayAndYear","getLocalizedTime","headerText","e","printIonError","getMonthAndYear","getLocalizedDateTime","month","year","waitForDatetimeChanges","_this","Promise","resolve","addEventListener","once","handleDateClick","ev","needsPresentationChange","needsChange","presentation","selectedButton","presentOverlay","dateTargetEl","handleTimeClick","timeTargetEl","triggerEl","tagName","present","Object","assign","detail","ionShadowTarget","componentWillLoad","datetime","_this2","el","document","getElementById","io","IntersectionObserver","entries","isIntersecting","threshold","observe","closest","classList","add","componentOnReady","render","mode","getIonMode","h","Host","class","createColorClasses","id","onClick","part","ref","name","getElement","style","ios","md"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-datetime-button.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement } from './index-8e692445.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { a as addEventListener, c as componentOnReady } from './helpers-3b390e48.js';\nimport { b as printIonError } from './index-c4b11676.js';\nimport { c as createColorClasses } from './theme-7670341c.js';\nimport { q as parseDate, t as getToday, J as is24Hour, S as getLocalizedDateTime, G as getMonthAndYear, K as getLocalizedTime, T as getMonthDayAndYear } from './data-caf38df0.js';\n\nconst iosDatetimeButtonCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}\";\n\nconst mdDatetimeButtonCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}:host button{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;margin-left:2px;margin-right:2px;margin-top:0px;margin-bottom:0px;position:relative;-webkit-transition:150ms color ease-in-out;transition:150ms color ease-in-out;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host button{margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:2px;margin-inline-end:2px}}:host(.time-active) #time-button,:host(.date-active) #date-button{color:var(--ion-color-base)}:host(.datetime-button-disabled){pointer-events:none}:host(.datetime-button-disabled) button{opacity:0.4}\";\n\nconst DatetimeButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.datetimeEl = null;\n    this.overlayEl = null;\n    this.datetimePresentation = 'date-time';\n    this.datetimeActive = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * If `true`, the user cannot interact with the button.\n     */\n    this.disabled = false;\n    /**\n     * Accepts one or more string values and converts\n     * them to DatetimeParts. This is done so datetime-button\n     * can work with an array internally and not need\n     * to keep checking if the datetime value is `string` or `string[]`.\n     */\n    this.getParsedDateValues = (value) => {\n      // TODO FW-2646 Remove value === ''\n      if (value === '' || value === undefined || value === null) {\n        return [];\n      }\n      if (Array.isArray(value)) {\n        return value;\n      }\n      return [value];\n    };\n    /**\n     * Check the value property on the linked\n     * ion-datetime and then format it according\n     * to the locale specified on ion-datetime.\n     */\n    this.setDateTimeText = () => {\n      const { datetimeEl, datetimePresentation } = this;\n      if (!datetimeEl) {\n        return;\n      }\n      const { value, locale, hourCycle, preferWheel, multiple, titleSelectedDatesFormatter } = datetimeEl;\n      const parsedValues = this.getParsedDateValues(value);\n      /**\n       * Both ion-datetime and ion-datetime-button default\n       * to today's date and time if no value is set.\n       */\n      const parsedDatetimes = parseDate(parsedValues.length > 0 ? parsedValues : [getToday()]);\n      /**\n       * If developers incorrectly use multiple=\"true\"\n       * with non \"date\" datetimes, then just select\n       * the first value so the interface does\n       * not appear broken. Datetime will provide a\n       * warning in the console.\n       */\n      const firstParsedDatetime = parsedDatetimes[0];\n      const use24Hour = is24Hour(locale, hourCycle);\n      // TODO(FW-1865) - Remove once FW-1831 is fixed.\n      parsedDatetimes.forEach((parsedDatetime) => {\n        parsedDatetime.tzOffset = undefined;\n      });\n      this.dateText = this.timeText = undefined;\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          const dateText = getMonthDayAndYear(locale, firstParsedDatetime);\n          const timeText = getLocalizedTime(locale, firstParsedDatetime, use24Hour);\n          if (preferWheel) {\n            this.dateText = `${dateText} ${timeText}`;\n          }\n          else {\n            this.dateText = dateText;\n            this.timeText = timeText;\n          }\n          break;\n        case 'date':\n          if (multiple && parsedValues.length !== 1) {\n            let headerText = `${parsedValues.length} days`; // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n              try {\n                headerText = titleSelectedDatesFormatter(parsedValues);\n              }\n              catch (e) {\n                printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n              }\n            }\n            this.dateText = headerText;\n          }\n          else {\n            this.dateText = getMonthDayAndYear(locale, firstParsedDatetime);\n          }\n          break;\n        case 'time':\n          this.timeText = getLocalizedTime(locale, firstParsedDatetime, use24Hour);\n          break;\n        case 'month-year':\n          this.dateText = getMonthAndYear(locale, firstParsedDatetime);\n          break;\n        case 'month':\n          this.dateText = getLocalizedDateTime(locale, firstParsedDatetime, { month: 'long' });\n          break;\n        case 'year':\n          this.dateText = getLocalizedDateTime(locale, firstParsedDatetime, { year: 'numeric' });\n          break;\n      }\n    };\n    /**\n     * Waits for the ion-datetime to re-render.\n     * This is needed in order to correctly position\n     * a popover relative to the trigger element.\n     */\n    this.waitForDatetimeChanges = async () => {\n      const { datetimeEl } = this;\n      if (!datetimeEl) {\n        return Promise.resolve();\n      }\n      return new Promise((resolve) => {\n        addEventListener(datetimeEl, 'ionRender', resolve, { once: true });\n      });\n    };\n    this.handleDateClick = async (ev) => {\n      const { datetimeEl, datetimePresentation } = this;\n      if (!datetimeEl) {\n        return;\n      }\n      let needsPresentationChange = false;\n      /**\n       * When clicking the date button,\n       * we need to make sure that only a date\n       * picker is displayed. For presentation styles\n       * that display content other than a date picker,\n       * we need to update the presentation style.\n       */\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          const needsChange = datetimeEl.presentation !== 'date';\n          /**\n           * The date+time wheel picker\n           * shows date and time together,\n           * so do not adjust the presentation\n           * in that case.\n           */\n          if (!datetimeEl.preferWheel && needsChange) {\n            datetimeEl.presentation = 'date';\n            needsPresentationChange = true;\n          }\n          break;\n      }\n      /**\n       * Track which button was clicked\n       * so that it can have the correct\n       * activated styles applied when\n       * the modal/popover containing\n       * the datetime is opened.\n       */\n      this.selectedButton = 'date';\n      this.presentOverlay(ev, needsPresentationChange, this.dateTargetEl);\n    };\n    this.handleTimeClick = (ev) => {\n      const { datetimeEl, datetimePresentation } = this;\n      if (!datetimeEl) {\n        return;\n      }\n      let needsPresentationChange = false;\n      /**\n       * When clicking the time button,\n       * we need to make sure that only a time\n       * picker is displayed. For presentation styles\n       * that display content other than a time picker,\n       * we need to update the presentation style.\n       */\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'time-date':\n          const needsChange = datetimeEl.presentation !== 'time';\n          if (needsChange) {\n            datetimeEl.presentation = 'time';\n            needsPresentationChange = true;\n          }\n          break;\n      }\n      /**\n       * Track which button was clicked\n       * so that it can have the correct\n       * activated styles applied when\n       * the modal/popover containing\n       * the datetime is opened.\n       */\n      this.selectedButton = 'time';\n      this.presentOverlay(ev, needsPresentationChange, this.timeTargetEl);\n    };\n    /**\n     * If the datetime is presented in an\n     * overlay, the datetime and overlay\n     * should be appropriately sized.\n     * These classes provide default sizing values\n     * that developers can customize.\n     * The goal is to provide an overlay that is\n     * reasonably sized with a datetime that\n     * fills the entire container.\n     */\n    this.presentOverlay = async (ev, needsPresentationChange, triggerEl) => {\n      const { overlayEl } = this;\n      if (!overlayEl) {\n        return;\n      }\n      if (overlayEl.tagName === 'ION-POPOVER') {\n        /**\n         * When the presentation on datetime changes,\n         * we need to wait for the component to re-render\n         * otherwise the computed width/height of the\n         * popover content will be wrong, causing\n         * the popover to not align with the trigger element.\n         */\n        if (needsPresentationChange) {\n          await this.waitForDatetimeChanges();\n        }\n        /**\n         * We pass the trigger button element\n         * so that the popover aligns with the individual\n         * button that was clicked, not the component container.\n         */\n        overlayEl.present(Object.assign(Object.assign({}, ev), { detail: {\n            ionShadowTarget: triggerEl,\n          } }));\n      }\n      else {\n        overlayEl.present();\n      }\n    };\n  }\n  async componentWillLoad() {\n    const { datetime } = this;\n    if (!datetime) {\n      printIonError('An ID associated with an ion-datetime instance is required for ion-datetime-button to function properly.', this.el);\n      return;\n    }\n    const datetimeEl = (this.datetimeEl = document.getElementById(datetime));\n    if (!datetimeEl) {\n      printIonError(`No ion-datetime instance found for ID '${datetime}'.`, this.el);\n      return;\n    }\n    /**\n     * Since the datetime can be used in any context (overlays, accordion, etc)\n     * we track when it is visible to determine when it is active.\n     * This informs which button is highlighted as well as the\n     * aria-expanded state.\n     */\n    const io = new IntersectionObserver((entries) => {\n      const ev = entries[0];\n      this.datetimeActive = ev.isIntersecting;\n    }, {\n      threshold: 0.01,\n    });\n    io.observe(datetimeEl);\n    /**\n     * Get a reference to any modal/popover\n     * the datetime is being used in so we can\n     * correctly size it when it is presented.\n     */\n    const overlayEl = (this.overlayEl = datetimeEl.closest('ion-modal, ion-popover'));\n    /**\n     * The .ion-datetime-button-overlay class contains\n     * styles that allow any modal/popover to be\n     * sized according to the dimensions of the datetime.\n     * If developers want a smaller/larger overlay all they need\n     * to do is change the width/height of the datetime.\n     * Additionally, this lets us avoid having to set\n     * explicit widths on each variant of datetime.\n     */\n    if (overlayEl) {\n      overlayEl.classList.add('ion-datetime-button-overlay');\n    }\n    componentOnReady(datetimeEl, () => {\n      const datetimePresentation = (this.datetimePresentation = datetimeEl.presentation || 'date-time');\n      /**\n       * Set the initial display\n       * in the rendered buttons.\n       *\n       * From there, we need to listen\n       * for ionChange to be emitted\n       * from datetime so we know when\n       * to re-render the displayed\n       * text in the buttons.\n       */\n      this.setDateTimeText();\n      addEventListener(datetimeEl, 'ionChange', this.setDateTimeText);\n      /**\n       * Configure the initial selected button\n       * in the event that the datetime is displayed\n       * without clicking one of the datetime buttons.\n       * For example, a datetime could be expanded\n       * in an accordion. In this case users only\n       * need to click the accordion header to show\n       * the datetime.\n       */\n      switch (datetimePresentation) {\n        case 'date-time':\n        case 'date':\n        case 'month-year':\n        case 'month':\n        case 'year':\n          this.selectedButton = 'date';\n          break;\n        case 'time-date':\n        case 'time':\n          this.selectedButton = 'time';\n          break;\n      }\n    });\n  }\n  render() {\n    const { color, dateText, timeText, selectedButton, datetimeActive, disabled } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(color, {\n        [mode]: true,\n        [`${selectedButton}-active`]: datetimeActive,\n        ['datetime-button-disabled']: disabled,\n      }) }, dateText && (h(\"button\", { class: \"ion-activatable\", id: \"date-button\", \"aria-expanded\": datetimeActive ? 'true' : 'false', onClick: this.handleDateClick, disabled: disabled, part: \"native\", ref: (el) => (this.dateTargetEl = el) }, h(\"slot\", { name: \"date-target\" }, dateText), mode === 'md' && h(\"ion-ripple-effect\", null))), timeText && (h(\"button\", { class: \"ion-activatable\", id: \"time-button\", \"aria-expanded\": datetimeActive ? 'true' : 'false', onClick: this.handleTimeClick, disabled: disabled, part: \"native\", ref: (el) => (this.timeTargetEl = el) }, h(\"slot\", { name: \"time-target\" }, timeText), mode === 'md' && h(\"ion-ripple-effect\", null)))));\n  }\n  get el() { return getElement(this); }\n};\nDatetimeButton.style = {\n  ios: iosDatetimeButtonCss,\n  md: mdDatetimeButtonCss\n};\n\nexport { DatetimeButton as ion_datetime_button };\n"]}