{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAKA;;AAEA;AACA;AAAA;;AACI,iEAAgB,IAAhB,EAAgBA,OAAhB;AACJ;;AAHA;AAAA;AAAA,iBAIA;AACA,uBAAiB,8DAAU,IAAV,CAAjB;AACA,mBAAY,uDAAEC,iDAAF,EAAM;AAAI,uBAAO,uDAAkB,UAAlB,sBAC7BC,IAD6B,EAC7B,IAD6B;AAAX,aAAN,EAEA,uDAAC,MAAD,EAAC,IAAD,CAFA,CAAZ;AAGA;AATA;AAAA;;AAWAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;;;AACA,UAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,EAAX,EAAkB;AACpC,eAAOA,EAAE,CAACC,OAAHD,CAAWD,QAAXC,MAAyB,IAAhC;AADF;AAGA;AACA;AACA;;;AACA,UAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,WAAR,EAAwB;AACjD,eAAO,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACE,MAANF,GAAe,CAA5C,GACHG,MAAM,CAACC,MAAPD;AAAgB,uBAAa;AAA7BA,+BAAiDH,KAAjDG,GAA2D,IAA3DA,GAAmEF,WAAnEE,CADG,GAC+EF,WADtF;AADF;;AAIA,UAAMI,YAAY,GAAIC,SAAhBD,YAAgBC,QAAD,EAAa;AAChC,YAAIA,OAAO,KAAKC,SAAhB,EAA2B;AACzB,cAAMC,KAAK,GAAGC,KAAK,CAACC,OAAND,CAAcH,OAAdG,IAAyBH,OAAzBG,GAAmCH,OAAO,CAACK,KAARL,CAAc,GAAdA,CAAjD;AACA,iBAAOE,KAAK,CACTI,MADIJ,CACIK,WAAD;AAAA,mBAAOA,CAAC,IAAI,IAAZ;AAAA,WADHL,EAEJM,GAFIN,CAECK,WAAD;AAAA,mBAAOA,CAAC,CAACE,IAAFF,EAAP;AAAA,WAFAL,EAGJI,MAHIJ,CAGIK,WAAD;AAAA,mBAAOA,CAAC,KAAK,EAAb;AAAA,WAHHL,CAAP;AAID;;AACD,eAAO,EAAP;AARF;;AAUA,UAAMQ,WAAW,GAAIV,SAAfU,WAAeV,QAAD,EAAa;AAC/B,YAAMQ,GAAG,GAAG,EAAZ;AACAT,oBAAY,CAACC,OAAD,CAAZD,CAAsBY,OAAtBZ,CAA+BQ,WAAD;AAAA,iBAAQC,GAAG,CAACD,CAAD,CAAHC,GAAS,IAAjB;AAAA,SAA9BT;AACA,eAAOS,GAAP;AAHF;;AAKA,UAAMI,MAAM,GAAG,sBAAf;;AACA,UAAMC,OAAO;AAAA,0MAAG,iBAAOC,GAAP,EAAYC,EAAZ,EAAgBC,SAAhB,EAA2BC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,sBACVH,GAAG,IAAI,IAAPA,IAAeA,GAAG,CAAC,CAAD,CAAHA,KAAW,GAA1BA,IAAiC,CAACF,MAAM,CAACM,IAAPN,CAAYE,GAAZF,CADxB;AAAA;AAAA;AAAA;;AAENO,sBAFM,GAEGC,QAAQ,CAACC,aAATD,CAAuB,YAAvBA,CAFH;;AAAA,qBAGRD,MAHQ;AAAA;AAAA;AAAA;;AAIV,oBAAIJ,EAAE,IAAI,IAAV,EAAgB;AACdA,oBAAE,CAACO,cAAHP;AACD;;AANS,iDAOHI,MAAM,CAACI,IAAPJ,CAAYL,GAAZK,EAAiBH,SAAjBG,EAA4BF,SAA5BE,CAPG;;AAAA;AAAA,iDAUP,KAVO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAPN,OAAO;AAAA;AAAA;AAAA,SAAb;;;;","names":["hostRef","_index_8e692445_js__WEBPACK_IMPORTED_MODULE_0__","mode","Text","hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassList","classes","undefined","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-text.entry.js","webpack:///node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host } from './index-8e692445.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { c as createColorClasses } from './theme-7670341c.js';\n\nconst textCss = \":host(.ion-color){color:var(--ion-color-base)}\";\n\nconst Text = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(this.color, {\n        [mode]: true,\n      }) }, h(\"slot\", null)));\n  }\n};\nText.style = textCss;\n\nexport { Text as ion_text };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]}