{"version":3,"mappings":"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","names":["ValidateVin","control","re","RegExp","value","length","match","invalidVin","ValidateMileage","isNaN","_configs_app_config__WEBPACK_IMPORTED_MODULE_0__","invalidMileage","ValidateMileageKm","Events","topic","observer","channels","rxjs__WEBPACK_IMPORTED_MODULE_0__","sub","subscribe","subscriptions","unsubscribe","data","subject","next","complete","factory","providedIn","InnovaHelper","convertByteArrayToHexString","byteArray","hexStr","i","toString","slice","convertByteArrayToString","startIndex","res","byteLength","String","fromCharCode","convertByteArrayToBase64String","window","btoa","convertLittleEndianHexToDecimal","littleEndianHex","parseInt","reverse","join","formatVIN","vin","ret","x","charCodeAt","charAt","substring","isLastPackage","buffer","totalLength","convertBytesToInt","byteHigh","byteLow","convertStringToByteArray","text","array","Uint8Array","isInvalidOrEmptyGUID","obj","undefined","toLowerCase","isInvalidOrEmptyVIN","_ArrayOfZero","convertBase64ToBinary","base64","raw","atob","rawLength","ArrayBuffer","convertBase","num","from","baseFrom","to","baseTo","combineUArray","params","forEach","arr","push","element","decToBytes","decimalValue","byte0","byte1","hex","str","n","substr","replace","a","b","temp","set","_uuid_v4__WEBPACK_IMPORTED_MODULE_0__","uuid","convertUuidToGuid","convertUuidBytesToGuidBytes","id","uuidByteArray","JSON","parse","stringify","swap","convertByteArrayToGuid","convertUuidToBytes","MANUFACTURE_MAKE_DEFINITION","Manufacturer","Make","getManufactureByMake","make","toUpperCase","manufacturer","find","m","MONITOR_DEFINITION","map","item","split","BRAKE_LIFE_DEFINITION_2021","ouput","applocation","appmessage","_Make","_PIDs","_Group","_Operation","_Condition","_ValueType","OIL_LIFE_DEFINITION_2021","OIL_LEVEL_DEFINITION","_Manufacture","BRAKE_LIFE_DEFINITION","OIL_LIFE_DEFINITION","TRANSMISSION_FLUID_TEMPERATURE_DEFINITION","_Unit","TIRE_PRESSURES_DEFINITION","_Pid","_Name","_ThresholdName","_StandardName","_StatusName","_OtherName","_OtherThresholdName","_OtherStandardName","_OtherStatusName","BufferResp","fLog","isCompleted","payload","expectedLength","error","command","type","parseFeedback","parseData","code","message","t","knownErrors","translateError","appendData","concat","Response","Logger","currentResponse","_BufferResp__WEBPACK_IMPORTED_MODULE_0__","logt","log","isJSON","ensurePayload","status","_angular_core__WEBPACK_IMPORTED_MODULE_2__","CommandService","commService","events","logger","response","_standard_enums__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","isFastCancel","src_app_services_innova_tool_models__WEBPACK_IMPORTED_MODULE_5__","ResetListenerData","ResetResponse","timerInterval","clearInterval","timerIntervalTick","isProcessing","bytes","resetResponse","data_load","len_data","b0","b1","b2","b3","vcidata","publish","Finish","notify_confirmack","_utilities_dataParser__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","procid","_obd_vcistd__WEBPACK_IMPORTED_MODULE_6__","statid","usbCommandHeader","usbData","cmdinfo","lencmd","datacmd","cs","sumdata","writeHex","disconnectBluetoothDevices","CloseConnection","BluetoothIsConnected","initialize","datareceivehandler","macAddress","cb","connectBlueToothDevice","datareceivehandler_bluetooth","console","listBluetoothDevices","alert","listBonnedBluetoothDevices","Promise","resolve","timeout","nretry","num_retry","respData","setBleMsgRx","getSerialType","setInterval","getBleMsgRx","store_multidata","isvalid","sendData","busyFrame","busyFrame2","BleMsgRx","eventId","callbackNotify","dataEvent","dataarray","bytes_temp","xx","lendata","logComRx","isFrameBusy","isRegisterCallBack","isConfirmNormal","KeepAlive","isFrameACK","isStartMultiData","isStopMultiData","isRequestACK","isNotifyPacket","lenNotifyExpected","_isDone","notifyData","expectedLen","isDone","waiting","__onNotifyEvents","__resetTimerTimeout","isConfirmNormalStatus","resp","parseResponse","isDataofMulti","index","Object","receivedData","Error","parserNotifyEvents","dataRet","parseEventData","bytedatas","isUnsigned","_utilities_dataParser__WEBPACK_IMPORTED_MODULE_1__","errorexception","_standard_enums__WEBPACK_IMPORTED_MODULE_2__","name","lodash__WEBPACK_IMPORTED_MODULE_0__","toFixed","unit","timeElapse","everageSpeed","distance","fuelStatusParser","xxx","getBatteryHealthStatus","numberPid","shift","listPids","pidRetVal","pid","oemPiddata","buff","pop","err","OBDSystem","BatteryVoltage","Unit","LinkVciCmd","Procid","_vcistd__WEBPACK_IMPORTED_MODULE_0__","stateid","batvol","j","_utilities_dataParser__WEBPACK_IMPORTED_MODULE_3__","search","v","Float32Array","logdebug","unit_type","val","lang_id","func_id","func","o","Link","LinkMultiData","guid","number","bytesInChar","byte","new_x","Array","guiid","guidToBytes","_obd__WEBPACK_IMPORTED_MODULE_1__","GUI","proc_id","cmd_id","_utilities_dataParser__WEBPACK_IMPORTED_MODULE_2__","keycode","system","subsystem","group_id","param","stt","then","Livedata","getlivedatapidsupport_group","itemid","getlivedata_itemval","getlivedatapidsupport_group_v2","getlivedata_itemval_v2","getlivedata_numberpidsuppport_group_v2","innovagroup","start_idx","end_idx","startid","stopid","Number","ls_pid","ls_item","new_list_info","getlivedata_listinfo","ls_info","Group","ListItem","NWSCAN","VinString","lodash__WEBPACK_IMPORTED_MODULE_2__","_utilities_dataParser__WEBPACK_IMPORTED_MODULE_4__","ymmeprofile","manufacture_enum","year_enum","make_enum","model_enum","engine_enum","trim_enum","option_enum","transmission_enum","result","modules","getGroupName","ex","getInspecGroupName","objSystem","System","SubSystem","ModuleName","InnovaGroup","groupName","inspecGroup","nSystem","sysIndex","systemId","nSubSystem","subIndex","LB","HB","bInnovaGroup","subSystemId","subSystem","Erase_Dtc","Status","getInspecGroup","rawbuff","keys","includes","modulename","inspec_gr","InspecGroup","Dtcs","InvalidDTC","DTCCode","IsInvalidDTC","dtc","list","group","groupid","key","def","BodyInfo","definition","isEnable","usbArgs","OBDx","VCICmd","notifier","sleepMs","is_initializing","sleep","setReableFormat","_vcistd__WEBPACK_IMPORTED_MODULE_2__","EnableFastCancel","productid","main","boot","db","lodash__WEBPACK_IMPORTED_MODULE_3__","_m","_b","_d","ms","setTimeout","cmdInfo","procdata","statedata","respdata","ERASE_STATUS","ERR_CODE","restvcidata","ERASE_ERR_CODE","cmd","vehicleIdx","MaxNumBuff","__flink","idx","bufferIndex","reportConfig","returndata","YMME_PROFILE","OBD2_LD_SID1_BUFF","OBD2_FF_SID2_BUFF","OBD2_DTC_SID37A_BUFF","OBD2_SPECIALTEST_SID568_BUFF","OBD2_VEHINFO_SID9_BUFF","OBD2_RECORED_LD_BUFF","OEM_MODULE_BUFF","isVEHICLE_DATA_YMME_PROFILE","getVehReport_YMME_PROFILE","isVEHICLE_DATA_OBD2_LD_SID1_BUFF","getVehReport_OBD2_LD_SID1_BUFF","isVEHICLE_DATA_OBD2_FF_SID2_BUFF","getVehReport_OBD2_FF_SID2_BUFF","isVEHICLE_DATA_OBD2_DTC_SID37A_BUFF","getVehReport_OBD2_DTC_SID37A_BUFF","isVEHICLE_DATA_OBD2_SPECIALTEST_SID568_BUFF","getVehReport_OBD2_SPECIALTEST_SID568_BUFF","isVEHICLE_DATA_OBD2_VEHINFO_SID9_BUFF","getVehReport_OBD2_VEHINFO_SID9_BUFF","isVEHICLE_DATA_OBD2_RECORED_LD_BUFF","getVehReport_OBD2_RECORED_LD_BUFF","isVEHICLE_DATA_OEM_MODULE_BUFF","getVehReport_OEM_MODULE_BUFF","LinkHIDUSBCmd","sendGetMultiData","ResetFastCancel","EventCallBackFunction","_angular_core__WEBPACK_IMPORTED_MODULE_7__","OBD2","isCancelQuery","cbinfo","isNeedCheckVoltage","notifyInfo","percent","total","isfinish","listProtocol","_standard_enums__WEBPACK_IMPORTED_MODULE_6__","fFuncCheckVoltage","_utilities_dataParser__WEBPACK_IMPORTED_MODULE_5__","fLinkToProtx","_ecuvol","protocolx","idprotocol","_obdUtils__WEBPACK_IMPORTED_MODULE_3__","linkedProtocol","readFFDtc","args","f","dd","d","eProtocol","MilStatus","Int8Array","textid","moduleindex","dtcindex","c","loc","enumFuelType","fuelType","enumVehType","vehType","newName","nameString","nameLength","OBD2FF","bufferType","segmentType","_vcistd__WEBPACK_IMPORTED_MODULE_3__","bufferLength","formatedBuffer","formatBuffer","itemType","pkgIndex","language","iCommand","iReportId","iVehicleIndex","reserved","dataType","enumDataType","dataBufferIndex","enumItemType","iSize","theFFBuffer","theFFBufferDTC","theFFBufferItemName","theFFBufferUnit","retData","isNeedCheckFF","getFFHeader","getFFDTC","getFFItemNames","getFFItemUnits","itemFFValuesBuffer","getFFItemValues","parseItemFF","datas","lensize","retdata","bNoRecordedItem","parseFreezeFrameData","retdatas","listItemNames","listItemValues","listItemUnits","exception","parseFFItemValues","appendBuffer","getFFDataCommand","theBuffer","milDtcLen","transferStatus","namesBufferIndex","itemNameBytes","itemNameLen","itemNameArr","unitsBufferIndex","itemUnitBytes","itemUnitLen","itemUnitArr","valuesBuffer","valuesBufferIndex","itemValueIndex","itemValueBytes","itemValueLen","itemValueArr","_obd__WEBPACK_IMPORTED_MODULE_0__","enumProtocolToString","eprotocol","_standard_enums_Global__WEBPACK_IMPORTED_MODULE_0__","OFM","getofmsupportitem","resultdisplay","nPid","num_profile","modules_val","pididx","profileid","ofm_item","getofmprofileid_value","profile_data","obj_temp","Value","num_profie","ofm_group","mod","Symptom","_title","_title_str","_body","_body_str","_optlist","_optlist_str","_softkey","_softkey_str","title","Title","body","Body","option","softkey","EnumVCIProcStates","EnumSeverityText","VCIProg","systemdata","tool","obd2","oem","read_report","ofm","enable_jsonfmt","disable_jsonfmt","enable_jsonfmt_def","disable_jsonfmt_def","livedata","symptom","gui","ymme","unsolicited_msg","keepalive_obd2","keepalive_oem","max","VCICmd_Unsolicited_msg","msg_cancel","msg_gui_ack","msg_max","VCICmd_BT_setting","get_bt_name","set_bt_name","VCICmd_obd2","start_Query","Link_To_Prot_N","monitoricon","ReadVin","Read_Dtc","freezeframe","Read_all","ReadService9","ReadService5","ReadService6","ReadService8","GetLedStatus","SetSmogCheckState","GetSmogCheckState","SetSmogCheckCountry","GetSmogCheckCountry","SetFuelType","GetFuelType","SetVehType","GetVehType","getymmeprofile","GetReport","Max","enumEVAPStatus","eEVAPSTATE_NONE","eEVAPSTATE_NO_SUP","eEVAPSTATE_SUP_OK","eEVAPSTATE_RES_NEG","eEVAPSTATE_RES_NO","eEVAPSTATE_MAX","VCICmd_obd2_reporttype","report_full","report_sid1","report_sid2","report_sid3","report_sid4","report_sid5","report_sid6","report_sid7","report_sid8","report_sid9","report_sid10","report_sid37A","report_mil_stat","report_drivecycle_mon_list","report_drivecycle_mon_text","report_sid6_tids","report_sid6_comp_ids","report_vehicle_data_ymme_profile","report_mon_stat","report_ff_info","report_ff_ld","report_dtcs","report_dtc_def","report_vin","report_ymme","report_vehicle_info","report_TDC_monitor","report_RPM_VSS","VCICmd_nwscan","start","getsystem","getsubsystem","listoemprofileid_old","querysystem","readdtsystem","erasedtcsystem","exitsystem","getdataofsyste","readdtcgroup","scan_all","quick_readsystem","quick_readgroup","listoemprofileid","report_dtc_system","get_dtc_def","get_dtc_listinspec","VCICmd_system","getversion","getymme","setymme","setvin","resettool","VCICmd_YMME","init","get","confirm","VCICmd_ofm","getsupport_item","read_item","stream_cfg","VCI_ofm_group","ofm_group_none","ofm_group_odo","ofm_group_srv_check","ofm_group_warninglight","ofm_group_tpms","ofm_group_max","VCICmd_livedata","read_itemlist","read_itemval","read_list_item_val","set_system_subsystem","start_hybrid_ld","read_item_info","set_record_dtc_trigger","reset_record_dtc_trigger","check_getnumpid_group","get_listiteminfo","get_listitemval","get_itemval_v2","VCICmd_symptom","symptom_init","symptom_getui","symptom_setselection","symptom_max","VCI_symptom_getui","symptom_get_title","symptom_get_body","symptom_get_optionlist","symptom_get_softkey","symptom_getui_max","VCI_symptom_selection_type","symptom_normal_selection","symtom_softkey_selection","VCI_symptom_softkey_type","symptom_left_softkey","symptom_right_softkey","Enum_Nws_Link_Status","EnumInnovaGroups","EnumInspectionGroups","Enum_ofm_Items","VCICmd_tool","getecuvoltage","setting_unit","setting_language","UNIT_ID","Standard","Metric","GUI_LANGUAGE_ID","GUI_LANG_ENGLISH","GUI_LANG_SPANISH","GUI_LANG_FRENCH","SF_FunctionGroup","UNKNOWN","Diesel_Injector_Coding","Diesel_Particulate_Filter_Reset","Reset_Electric_Traction_System","Throttle_Body_Relearn","Throttle_Body_Relearn_OBD","Throttle_Body_Relearn_Procedure","TPMS_Relearn_OBD","Transmission_Reset_Adaptation","Idle_Speed_Relearn","Injector_Coding","Idle_Speed_Relearn_OBD","Idle_Speed_Relearn_Procedure","Transmission_Fluid_Level_Check","Transmission_Reset","Headlamp_Calibration","Seat_Occupied_Calibration","Maintenance_Reset","Window_Door_Roof_Reset","Suspension_Calibration","Tire_Size_Reset","ABS_Bleeding","VCICmd_GUI","gui_proc_enter","gui_proc_leave","gui_proc_terminate","gui_set_key","gui_set_key_with_index","gui_set_param","gui_lcd_display","gui_set_special_function_group","gui_host_ack","gui_set_special_at_module","gui_max","VCI_Data_Logging","EN_NO_LOG","EN_OBDII","EN_ECM","EN_TCM","EN_ABS","EN_SRS","EN_TPMS","EN_Allsystems","EN_ABSLD","EN_SRSLD","EN_TCMLD","EN_TPMSLD","EN_ECMAT","EN_ECMSF","EN_OilReset","EN_BatteryReset","EN_SAScalibration","EN_EPBreset","EN_TPMSRelearn","EN_ThrottleBodyRelearn","EN_ElectricTractionSystemReset","EN_DPFReset","EN_MaintenanceReset","EN_Tiresizereset","EN_SuspensionCalibration","EN_HeadlampCalibration","EN_WindowDoorRoofReset","EN_SeatOccupiedCalibration","EN_ABSBleeding","EN_TransmissionReset","EN_TransmissionFluidChangeReset","EN_TransmissionFluidLevelCheck","EN_InjectorCoding","EN_All","VCI_GUI_Param_Type","param_selection","param_input","SYS_PROC_ID","PROC_NONE","PROC_CURRENT","PROC_PREVIOUS","PROC_TOOL_INIT","PROC_SERVICE_RESET","PROC_BATTERY_HEALTH_CHECK","PROC_BATTERY_ALTERNATOR_HEALTH_CHECK","PROC_OIL_RESET","PROC_OEM_BAT_RESET","PROC_OILRESETSF","PROC_OILRESETSF_LINKING","PROC_ACTIVE_TEST","PROC_AT_LINKING","PROC_AT_LD","PROC_AT_LIST_FUNCTION","PROC_SPECIAL_FUNCTION","PROC_SF_LINKING","PROC_BAT_LINKING","PROC_OEM_BAT_RESET_SF","PROC_SYSTEM_AND_ACTUAL_TEST","PROC_SAS_LINKING","PROC_SAS_CALIBRATION","PROC_EPB_LINKING","PROC_EPB","PROC_TPMS_RESET_MENU","PROC_TPMS_PROCEDURE","PROC_DPF_RESET","PROC_DPF_RESET_SF","PROC_DIAGNOSTIC_ROUTINE","PROC_DIAGNOSTIC_ROUTINE_LINKING","PROC_ID_MAX","SYS_CMD_ID","CMD_NONE","CMD_CURRENT","CMD_PREVIOUS","CMD_INIT_PROC","CMD_END_PROC","CMD_EXIT","CMD_DISP","CMD_WAITING","CMD_ID_MAX","GUI_KEY_CODE","GUI_KEY_NONE","GUI_KEY_ERASE","GUI_KEY_ENTER","GUI_KEY_UP","GUI_KEY_DOWN","GUI_KEY_POWER_LINK","GUI_KEY_DTC","GUI_KEY_MENU","GUI_KEY_FF","GUI_KEY_LD","GUI_KEY_SYSTEM","GUI_SOFTKEY_1","GUI_SOFTKEY_2","GUI_SOFTKEY_3","GUI_KEY_RESERVED_13","GUI_KEY_RESERVED_14","GUI_KEY_RESERVED_15","GUI_KEY_ALL","enumSmogCheckLoc","Arizona","California","Colorado","Connecticut","DC","Delaware","Georgia","Idaho","Illinois","Indiana","Louisiana","Maine","Maryland","Massachusetts","Missouri","Nevada","NewHampshire","NewJersey","NewMexico","NewYork","NorthCarolina","Ohio","Oregon","Pennsylvania","RhodeIsland","Tennessee","Texas","Utah","Vermont","Virginia","Wisconsin","NoIMProg","enumSmogCheckLocCountry","Cache","Davis","SaltLake","Weber","Ada","Canyon","NoProgram","eFuelType_UNKNOWN","eFuelType_GAS","eFuelType_DIESEL","eFuelType_MAX_255","ICOMMANDS","description","getVehicleData","getFreezeFrameData","getDtcs","getVIN","getSupportedPIDs","format","registerPIDs","input","unregisterPIDs","poll","options","readRegisteredPIDs","stream","clearVehicleDiscovery","startVehicleDiscovery","setResponseFormat","LogData","setfuncid","startlog","stoplog","getlog","getlog_encrypt","getIMReadiness","getToolSettings","eraseFirmwareAndJumpToBootloader","upgradeFirmware","reboot","getGuid","setGuid","dataLength","getUsbProductId","retries","getOEMSupportedPIDs","getOEMPIDData","getOEMBuffer","getOEMDTC","eraseOEMDTC","registerOEMPIDs","unregisterOEMPIDs","streamOEM","batteryHealthCheck","getVehicleV5Data","registerNotifyEvents","getStoredVehicles","selectVehicle","batteryCheck","USBHIDCommand_64","eVEHICLE_DATA_YMME_PROFILE","desc","eVEHICLE_DATA_OBD2_LD_SID1_BUFF","eVEHICLE_DATA_OBD2_FF_SID2_BUFF","eVEHICLE_DATA_OBD2_DTC_SID37A_BUFF","eVEHICLE_DATA_OBD2_SPECIALTEST_SID568_BUFF","eVEHICLE_DATA_OBD2_SPECIALTEST_SID5_BUFF","eVEHICLE_DATA_OBD2_SPECIALTEST_SID6_BUFF","eVEHICLE_DATA_OBD2_SPECIALTEST_SID8_BUFF","eVEHICLE_DATA_OBD2_VEHINFO_SID9_BUFF","eVEHICLE_DATA_OBD2_RECORED_LD_BUFF","eVEHICLE_DATA_OEM_MODULE_BUFF","eVEHICLE_DATA_OBD2_FF_SID2_BUFF_RAW","FreezeFrameDataTypes","DTC_INFO","LD_HEADER","LD_ITEM_NAME_STRING","LD_ITEM_UNIT_STRING","LD_ITEM_VALUE_STRING","Metrics","USA","METRIC","TransferStatus","TRANSFERRING","COMPLETED","VALID","Languages","ENGLISH","SPANISH","FRENCH","VehicleDataTypes","BufferSegmentTypes","VERSION","VIN_PROFILE","MONITOR_ICON","FREEZE_FRAME","DTC","SPECIAL_TEST","VEHICLE_INFO","LIVE_DATA","OEM_DATA","YMME","sel_id","OBDService","notifyService","nwscan","obdsystem","obd2ff","isDevConnected","_standard_enums__WEBPACK_IMPORTED_MODULE_0__","registerCallback","Event","isBTDevConnected","stopQuery","getBluetoothDevicesList","getBluetoothBondedDevicesList","isSuccess","getYMMEString","getMonitorIcon","getMonitorIcon_SID41","getRPM_VSS","getFreezeFrameDTCInfo","getFreezeFrameLiveData","getOBD2DTCInfo","getVehicleInfo_SID9","getOBD2DTCDef","getVehReport_OBD2_LD_SID1_BUFF_new","getVehReport_OBD2_FF_SID2_BUFF_RAW_new","getVehReport_OBD2_DTC_SID37A_BUFF_new","getVehReport_OBD2_SPECIALTEST_SID5_BUFF_new","getVehReport_OBD2_SPECIALTEST_SID6_BUFF_v2","getVehReport_OBD2_SPECIALTEST_SID8_BUFF_new","getVehReport_OBD2_VEHINFO_SID9_BUFF_new","link_OBD2_SPECIALTEST_SID6","link_OBD2_SPECIALTEST_SID5","link_OBD2_SPECIALTEST_SID8","Erase_OBD2_Dtcs","getInfo","assign","apiVersion","vinstring","setVinString","Query","obd2info","GetBluetoothName","SetBluetoothName","retreiveData","linkinfo","retreiveFFDTCMonData","retreiveDTCData","quick_retreiveData","obd2Query","linkedPro","obd2RetriveData","obd2FFDTCMonRetriveData","obd2DTCRetriveData","obd2QuickRetriveData","QueryProtocolCAN","setYmmeProfile","getYMMEProfile","getSupportedOEMModules","eraseOEMSystem","getOEMSystem_quick","getDtcdef","getDtcdef_withgroup","getDtc_listInspecGroup","QueryOEMSystem","ExitOEMSystem","getECUVoltage","SetOBD2SmogCheckState","SetOBD2SmogCheckCountry","GetOBD2SmogCheckState","GetOBD2SmogCheckCountry","GetOBD2LedStatus","readGUID","writeGUID","unittype","settingUnitType","SettingLanguage","ofm_getodometer_pidsupport","ofm_getservicecheck_pidsupport","ofm_getwarninglight_pidsupport","ofm_gettpms_pidsupport","_obd_vcistd__WEBPACK_IMPORTED_MODULE_2__","getInnovaGroupDtc","getlivedata_list_itemval_v2","getlivedata_list_itemval","disable_dtc_trigger","enable_dtc_trigger","getlivedata_hybrid_info","getVehReport_MIL_Status","getVehReport_DriveCycle_Mon_List","getVehReport_DriveCycle_Mon_Text","initprocess","getScreen_UI","set_useroptionselection","set_softkeyselection","getOBD2_LiveDataListPIDsupport","getOBD2_LiveDataItem_Val","getABS_LiveDataListPIDsupport","getABS_LiveDataItem_Val","getSRS_LiveDataListPIDsupport","getSRS_LiveDataItem_Val","getECM_LiveDataListPIDsupport","getECM_LiveDataItem_Val","getOther_LiveDataItem_Val","getlivedata_iteminfo","getECM_LiveDataNumberItemSupport","getABS_LiveDataNumberItemSupport","getlivedata_numberpidsuppport_other","getSRS_LiveDataNumberItemSupport","end","proc_enter_proc","gui_proc_enter_specialFunction_feature","gui_proc_sf_at_set_active_module","set_param","delay","gui_set_key_code","gui_set_key_code_with_index","cancel_vci_process","gui_terminate_proc","cbfunc","input_val","gui_notice_disp","proc_terminate_proc","SetLogFunction","StartLog","StopLog","GetLog","_angular_core__WEBPACK_IMPORTED_MODULE_15__","bytesToBase64","apply","isEmptyResponse","count","reduce","DEFAULT_LOG_LEVEL","_innova_vci_service_src_obdservice_service__WEBPACK_IMPORTED_MODULE_1__","includesAny","haystack","matchCase","VCI_STATIC_TEXTS","DtcStatus","store","pending","permanent","UIProcess","loading_symbols","service_reset","start_process","retry","exit","back","yes","no","one_moment_please","view_procedure","successful","completed","command_state","is_not_supported","InnovaScreenEventResp","respdataOrType","respBody","_type","currenttype","isEquals","screentype","trim","hdr","InnovaVCIService","obdService","eventService","helper","ble","connService","appLoggerService","initGUIProc","deinitGUIProc","initToolScreenGUI","delayMs","src_app_configs_app_config__WEBPACK_IMPORTED_MODULE_0__","timeoutMs","isScreenGuiInitialized","sto","debug","bind","clearTimeout","gui_set_softkey","selectOption","gui_set_key_option","setInput","gui_set_input_val","getLogger","_a","_isConnected","_connectedDevAddr","_toolName","_isVehicleConnected","_isWatchingConnection","_vciResponseData","resumeProcess","stoCheckConnection","isSkip","_isToolReady","isConnected","waitToolReady","screenAction","cancel_process","_innova_tool_models__WEBPACK_IMPORTED_MODULE_4__","resume_process","closePort","deviceId","cancelProcess","resetVciLocale","disconnectBT","_onDone","msg","initialize_bt","isBleEnabled","_btDevices","_isStartBtConnect","_connectBT","selectedDevice","device","isBTConnected","_scanBtProc","handleResponse","resetVciReponseData","get_list_bt_bondeddevices","pairedDevices","lodash__WEBPACK_IMPORTED_MODULE_6__","filter","btDevice","_state_app_state__WEBPACK_IMPORTED_MODULE_13__","stopScan","startScan","findIndex","btName","isLocalName","localName","localStorage","getItem","pro15Tool","_models_app_model__WEBPACK_IMPORTED_MODULE_8__","discoverBluetoothDevices2","devices","initializeBT","info","callbackResult","disconnect","_innova_vci_service_src_standard_enums__WEBPACK_IMPORTED_MODULE_3__","protocolId","isEmptyVciData","startMs","Date","getTime","endMs","Math","round","protocolName","checkVehConn","isConnectedVehicle","isVehicleConnected","_totalSleepTimeMs","enableReportSleepTime","setUnit","setLang","unit_name","_models_app_data__WEBPACK_IMPORTED_MODULE_12__","_models_app_enum__WEBPACK_IMPORTED_MODULE_9__","units","_innova_vci_service_src_obd_vcistd__WEBPACK_IMPORTED_MODULE_5__","selected_unit","setting_unittype","isOk","unitId","lang","langs","selected_lang","langId","isSetVciLocale","getVersion","setting_getguid","toolGUID","_innova_helper_service__WEBPACK_IMPORTED_MODULE_11__","setting_setguid","rs","vciResponseData","usbProductId","bootloaderVersion","firmwareVersion","databaseVersion","dongleId","toolInfo","currentData","setVciResponseData","linkProtocols","isFullLink","setVciLocale","connectAndGetToolInfo","toolName","getBatteryVoltage","voltage","batteryVoltage","getVehicleBufferAndInfo","vehicleInfoEcm","ff","freezeFrameEcm","freezeFrameTcm","monitor","monitorEcm","monitorTcm","readDtcsOBDII","dtcs","getVehReport_MonitorIconStatus","monitorData","milStatus","dtcEcm","dtcTcm","vinProfile","getYMME","oemModules","allSupportedModules","scanAllSupportedModules","allSupportedGroups","readDtc","supportedModules","oemModule","Skipped","readOdo","readSupportedModules","isOK","ymmeRaw","ymmeReadable","readOdometer","pidsupport","numPID","results","profile_id","objitem","ofm_getitemname","itemname","unit_str","OBD2_erase_Dtcs","eraseRs","clearCache","nwscan_eraseSystem","innovaGroupIds","isArray","isErased","isValid","isModuleInGroup","eraseDTCs","getVehReport_FreezeFrameDTCInfo","freezeFrameDtc","getVehReport_OBD2_DTC_Info","dtcInfoData","moduleIndex","moduleDtcs","getVehReport_OBD2_DTC_Def","dtcDef","totalFiltered","nwscan_LinkSystem","oemItem","_oemModule","dtcId","nwscan_getdtcdef","dtcinfo","mode","linkVehReport_OBD2_SPECIALTEST_SID5","getVehReport_OBD2_SPECIALTEST_SID5_BUFF","linkVehReport_OBD2_SPECIALTEST_SID6","getVehReport_OBD2_SPECIALTEST_SID6_BUFF","linkVehReport_OBD2_SPECIALTEST_SID8","feature","spectest_enter_proc","actuatortest_enter_proc","oil_reset_enter_proc","battery_reset_enter_proc","epb_enter_proc","sas_enter_proc","ABS_bleeding_enter_proc","battery_health_check_enter_proc","dpf_enter_proc","tpms_reset_enter_proc","service_reset_proc_enter","_screenEvents","rxjs__WEBPACK_IMPORTED_MODULE_21__","_screenActions","readableData","isNoYmme","ymme_get","ymmeInfo","getVehReport_YMME_String","vehinfo","year","indexOf","setYmme","readBuffer","readInfo","vehicleinfoBuffer","vehicleInfoTcm","getVehReport_OBD2_VehicleInfo_SID9","vehicleinfoStr","vehicleInfoData","getodometer_pidsupport","odometer","getOfmItems","ofmitem","odo","isInvalid","mileage","NaN","getlistfunc","ld_abs_get_itemlist","ld_srs_get_itemlist","ld_ecm_get_itemlist","ld_obd2_get_itemlist","call","pids","pidItemInfo","pId","pIdHex","pidItem","parseFloat","min","range","getitemvalfunc","ld_abs_get_itemval","ld_srs_get_itemval","ld_ecm_get_itemval","ld_obd2_get_itemval","pidsValues","regex","matches","ld_abs_get_ListItem_Val","ld_srs_get_ListItem_Val","ld_ecm_get_ListItem_Val","ld_obd2_get_ListItem_Val","force","setVINString","model","engine","useCached","nwscan_getSupportSystem","ymme_init","selection_id","ymme_confirm","ymme_back","isEnabled","_isVciLog","logMessages","logPayload","tag","supportLogTags","toISOString","e","_angular_core__WEBPACK_IMPORTED_MODULE_22__"],"sources":["webpack:///src/app/app.validators.ts","webpack:///src/app/services/events.service.ts","webpack:///src/app/services/innova-helper.service.ts","webpack:///src/app/services/innova-report-helper/innova-report-data-models.ts","webpack:///src/app/services/innova-vci-service/src/command/BufferResp.ts","webpack:///src/app/services/innova-vci-service/src/command/Response.ts","webpack:///src/app/services/innova-vci-service/src/command/command.service.ts","webpack:///src/app/services/innova-vci-service/src/command/eventParser.ts","webpack:///src/app/services/innova-vci-service/src/obd/OBDSystem.ts","webpack:///src/app/services/innova-vci-service/src/obd/gui.ts","webpack:///src/app/services/innova-vci-service/src/obd/livedata.ts","webpack:///src/app/services/innova-vci-service/src/obd/nwscan.ts","webpack:///src/app/services/innova-vci-service/src/obd/obd.ts","webpack:///src/app/services/innova-vci-service/src/obd/obd2.ts","webpack:///src/app/services/innova-vci-service/src/obd/obd2ff.ts","webpack:///src/app/services/innova-vci-service/src/obd/obdUtils.ts","webpack:///src/app/services/innova-vci-service/src/obd/ofm.ts","webpack:///src/app/services/innova-vci-service/src/obd/symptom.ts","webpack:///src/app/services/innova-vci-service/src/obd/vcistd.ts","webpack:///src/app/services/innova-vci-service/src/obd/ymme.ts","webpack:///src/app/services/innova-vci-service/src/obdservice.service.ts","webpack:///src/app/services/innova-vci.service.ts"],"sourcesContent":["import { AbstractControl } from '@angular/forms';\nimport { MAX_MILEAGE_VALUE, MAX_MILEAGE_VALUE_KM } from './configs/app.config';\n\nexport function ValidateVin(control: AbstractControl) {\n  // let re = new RegExp('^[A-HJ-NPR-Z\\\\d]{8}[\\\\dX][A-HJ-NPR-Z\\\\d]{2}\\\\d{6}$');\n  let re = new RegExp('^[a-zA-Z0-9]{17}$');\n  if (control.value.length && !(control.value.match(re))) {\n    return { invalidVin: true };\n  }\n  return null;\n}\n\nexport function ValidateMileage(control: AbstractControl) {\n  if (isNaN(control.value) || control.value <= 0 || control.value > MAX_MILEAGE_VALUE) {\n    return { invalidMileage: true };\n  }\n  return null;\n}\n\nexport function ValidateMileageKm(control: AbstractControl) {\n  if (isNaN(control.value) || control.value <= 0 || control.value > MAX_MILEAGE_VALUE_KM) {\n    return { invalidMileage: true };\n  }\n  return null;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * A custom Events service just like Ionic 3 Events https://ionicframework.com/docs/v3/api/util/Events/ which got removed in Ionic 5.\n *\n * @author Shashank Agrawal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class Events {\n  private channels: { [key: string]: Subject<any> } = {};\n  private subscriptions: { [key: string]: Subscription} = {};\n\n  /**\n   * Subscribe to a topic and provide a single handler/observer.\n   * @param topic The name of the topic to subscribe to.\n   * @param observer The observer or callback function to listen when changes are published.\n   *\n   * @returns Subscription from which you can unsubscribe to release memory resources and to prevent memory leak.\n   */\n  subscribe(topic: string, observer: (_: any) => void): Subscription {\n    if (!this.channels[topic]) {\n      // You can also use ReplaySubject with one concequence\n      this.channels[topic] = new Subject<any>();\n    }\n\n    let sub = this.channels[topic].subscribe(observer);\n    this.subscriptions[topic] = sub;\n    return sub;\n  }\n\n  unsubscribe(topic: string): void {\n    if (this.subscriptions[topic]) {\n      // You can also use ReplaySubject with one concequence\n      this.subscriptions[topic].unsubscribe();\n      delete this.subscriptions[topic];\n    }\n  }\n\n  /**\n   * Publish some data to the subscribers of the given topic.\n   * @param topic The name of the topic to emit data to.\n   * @param data data in any format to pass on.\n   */\n  publish(topic: string, data?: any): void {\n    const subject = this.channels[topic];\n    if (!subject) {\n      // Or you can create a new subject for future subscribers\n      return;\n    }\n\n    subject.next(data);\n  }\n\n  /**\n   * When you are sure that you are done with the topic and the subscribers no longer needs to listen to a particular topic, you can\n   * destroy the observable of the topic using this method.\n   * @param topic The name of the topic to destroy.\n   */\n  destroy(topic: string): null {\n    const subject = this.channels[topic];\n    if (!subject) {\n      return;\n    }\n\n    subject.complete();\n    delete this.channels[topic];\n  }\n}\n","/*\n * Created by Truyen Nguyen.\n * Email: truyenn@carmd.com.\n * Date: 7/19/2018 (m/d/y).\n * Time: 9:44:1.\n * Copyright (c) 2018, CARMD.COM CORP, (http://carmd.com). All rights reserved.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { UuidV4 } from \"./uuid-v4\";\n\n@Injectable()\nexport class InnovaHelper {\n  static convertByteArrayToHexString(byteArray: Uint8Array): string {\n    if (!byteArray) return null;\n\n    let hexStr = \"\";\n    for (let i = 0; i < byteArray.length; i++) {\n      hexStr += (\"0\" + (byteArray[i] & 0xff).toString(16)).slice(-2);\n    }\n\n    return hexStr;\n  }\n\n  static convertByteArrayToString(\n    byteArray: Uint8Array,\n    startIndex = 0\n  ): string {\n    if (!byteArray) return null;\n\n    let res = \"\";\n    for (let i = startIndex; i < byteArray.byteLength; i++) {\n      res += String.fromCharCode(byteArray[i]);\n    }\n    return res;\n  }\n\n  static convertByteArrayToBase64String(\n    byteArray: Uint8Array,\n    startIndex = 0\n  ): string {\n    if (!byteArray) return null;\n    return window.btoa(InnovaHelper.convertByteArrayToString(byteArray, startIndex));\n  }\n\n  static convertLittleEndianHexToDecimal(littleEndianHex): number {\n    return parseInt(\n      \"0x\" +\n        littleEndianHex\n          .match(/../g)\n          .reverse()\n          .join(\"\")\n    );\n  }\n\n  static convertHexToAscii = (hexStr): string => {\n    if (!hexStr) return null;\n    let hex = hexStr.toString();\n    let str = \"\";\n    for (let n = 0; n < hex.length; n += 2) {\n      str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n    }\n    //str = this.removeNonAscii( str );\n\n    return str;\n  };\n\n  static formatVIN(vin): string {\n    if (!vin) return \"\";\n    let ret = \"\";\n    for (let x = 0; x < vin.length; x++) {\n      if (vin.charCodeAt(x) >= 0 && vin.charCodeAt(x) <= 90) {\n        ret += vin.charAt(x);\n      }\n    }\n\n    if (ret.length < 17) return \"\";\n    if (ret.length > 17) {\n      ret = ret.substring(0, 17);\n    }\n    return ret;\n  }\n\n  static removeNonAscii = str => {\n    if (!str) return \"\";\n    //remove \\u0000 in string\n    str = str.replace(/\\0/g, \"\");\n    let ret = \"\";\n    for (let x = 0; x < str.length; x++) {\n      if (str.charCodeAt(x) >= 0 && str.charCodeAt(x) <= 127) {\n        ret += str.charAt(x);\n      }\n    }\n    return ret;\n  };\n\n  static concatTypedArray = function(a: Uint8Array, b: Uint8Array): Uint8Array {\n    if (!a) a = new Uint8Array(0);\n    if (!b) b = new Uint8Array(0);\n    let temp = new Uint8Array(a.byteLength + b.byteLength);\n    temp.set(new Uint8Array(a), 0);\n    temp.set(new Uint8Array(b), a.byteLength);\n    return temp;\n  };\n\n  static isLastPackage(buffer, totalLength) {\n    return buffer && buffer.length === totalLength;\n  }\n\n  static convertBytesToInt(byteHigh, byteLow): number {\n    return byteHigh | (byteLow << 8);\n  }\n\n\n\n  static generateUuid = function(): string {\n    return UuidV4.uuid();\n  };\n\n  static generateGuid = function(): string {\n    let uuid = UuidV4.uuid();\n    return InnovaHelper.convertUuidToGuid(uuid);\n  };\n\n  //convert uuidBytes to uuid\n  static convertByteArrayToUuid = function(byteArray): string {\n    if (!byteArray || byteArray.length != 16) return null;\n    return UuidV4.parseBinary(byteArray);\n    //return UUID( {random: byteArray} );\n  };\n\n  //convert uuidBytes to guid\n  static convertByteArrayToGuid = function(byteArray): string {\n    if (!byteArray || byteArray.length != 16) return null;\n    return UuidV4.parseBinary(this.convertUuidBytesToGuidBytes(byteArray));\n  };\n\n  static convertUuidToBytes = function(id): Uint8Array {\n    return UuidV4.parse(id);\n  };\n\n  static convertStringToByteArray(text: string): Uint8Array {\n    let array = new Uint8Array(text.length);\n    for (let i = 0; i < text.length; i++) {\n      array[i] = text.charCodeAt(i);\n    }\n    return array;\n  }\n\n  static convertUuidBytesToGuidBytes = function(uuidByteArray) {\n    let byteArray = JSON.parse(JSON.stringify(uuidByteArray));\n    //swap first 4\n    let swap = byteArray[0];\n    byteArray[0] = byteArray[3];\n    byteArray[3] = swap;\n\n    swap = byteArray[1];\n    byteArray[1] = byteArray[2];\n    byteArray[2] = swap;\n\n    //swap next 2\n    swap = byteArray[4];\n    byteArray[4] = byteArray[5];\n    byteArray[5] = swap;\n\n    //swap next 2\n    swap = byteArray[6];\n    byteArray[6] = byteArray[7];\n    byteArray[7] = swap;\n\n    return byteArray;\n  };\n\n  static convertUuidToGuid = function(uuid): string {\n    return this.convertByteArrayToGuid(this.convertUuidToBytes(uuid));\n  };\n\n  static isInvalidOrEmptyGUID(obj) {\n    return (\n      undefined === obj ||\n      null === obj ||\n      obj.length < 36 ||\n      \"00000000-0000-0000-0000-000000000000\" == obj ||\n      \"ffffffff-ffff-ffff-ffff-ffffffffffff\" == (obj+\"\").toLowerCase()\n    );\n  }\n\n  static isInvalidOrEmptyVIN(obj) {\n    return (\n      undefined === obj ||\n      null === obj ||\n      obj.length != 17 ||\n      \"00000000000000000000000000000000\" == obj ||\n       this._ArrayOfZero(this.convertStringToByteArray(obj))\n    );\n  }\n\n  static _ArrayOfZero(obj){\n    for (let i = 0; i < obj.length; i++) {\n      if (obj[i] != 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static convertBase64ToBinary(base64) {\n    var raw = window.atob(base64);\n    var rawLength = raw.length;\n    var array = new Uint8Array(new ArrayBuffer(rawLength));\n\n    for (let i = 0; i < rawLength; i++) {\n      array[i] = raw.charCodeAt(i);\n    }\n    return array;\n  }\n\n  static convertBase(num) {\n    return {\n      from: (baseFrom) => {\n        return {\n          to: (baseTo) => {\n            return parseInt(num, baseFrom).toString(baseTo)\n          }\n        }\n      }\n    }\n  }\n\n  static combineUArray(...params) {\n    // let len = params.map((arr) => arr.length)\n      // .reduce((acc, cur) => acc + cur, 0);\n    let res = [];\n    params.forEach(arr => {\n      arr.forEach(element => {\n        res.push(element);\n      });\n    });\n    return new Uint8Array(res);\n  }\n  static decToBytes(decimalValue) {\n    var byte0 = decimalValue & 0xff;\n    var byte1 = (decimalValue >> 8) & 0xff;\n    return new Uint8Array([ byte0, byte1 ]);\n  }\n}\n","export const MANUFACTURE_MAKE_DEFINITION = [\n  {\n    Manufacturer: 'BMW',\n    Make: 'BMW',\n  },\n  {\n    Manufacturer: 'BMW',\n    Make: 'Mini',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Alfa Romeo(FCA)',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Chrysler',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Dodge',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Eagle',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Fiat(FCA)',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Jeep',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Plymouth',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'Ram',\n  },\n  {\n    Manufacturer: 'Chrysler',\n    Make: 'SRT',\n  },\n  {\n    Manufacturer: 'Ford',\n    Make: 'Ford',\n  },\n  {\n    Manufacturer: 'Ford',\n    Make: 'Lincoln',\n  },\n  {\n    Manufacturer: 'Ford',\n    Make: 'Mercury',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Buick',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Cadillac',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Chevrolet',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Geo',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'GMC',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Hummer',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Oldsmobile',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Pontiac',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Saab',\n  },\n  {\n    Manufacturer: 'GM',\n    Make: 'Saturn',\n  },\n  {\n    Manufacturer: 'Honda',\n    Make: 'Acura',\n  },\n  {\n    Manufacturer: 'Honda',\n    Make: 'Honda',\n  },\n  {\n    Manufacturer: 'Honda',\n    Make: 'Honda ',\n  },\n  {\n    Manufacturer: 'Hyundai',\n    Make: 'Hyundai',\n  },\n  {\n    Manufacturer: 'Hyundai',\n    Make: 'Kia',\n  },\n  {\n    Manufacturer: 'Jaguar Land Rover',\n    Make: 'Jaguar',\n  },\n  {\n    Manufacturer: 'Jaguar Land Rover',\n    Make: 'Land Rover',\n  },\n  {\n    Manufacturer: 'Mazda',\n    Make: 'Mazda',\n  },\n  {\n    Manufacturer: 'Mercedes-Benz',\n    Make: 'Mercedes-Benz',\n  },\n  {\n    Manufacturer: 'Mercedes-Benz',\n    Make: 'Smart',\n  },\n  {\n    Manufacturer: 'Mitsubishi',\n    Make: 'Mitsubishi',\n  },\n  {\n    Manufacturer: 'Nissan',\n    Make: 'Infiniti',\n  },\n  {\n    Manufacturer: 'Nissan',\n    Make: 'Nissan',\n  },\n  {\n    Manufacturer: 'Subaru',\n    Make: 'Subaru',\n  },\n  {\n    Manufacturer: 'Toyota',\n    Make: 'Lexus',\n  },\n  {\n    Manufacturer: 'Toyota',\n    Make: 'Scion',\n  },\n  {\n    Manufacturer: 'Toyota',\n    Make: 'Toyota',\n  },\n  {\n    Manufacturer: 'Volkswagen',\n    Make: 'Audi',\n  },\n  {\n    Manufacturer: 'Volkswagen',\n    Make: 'Volkswagen',\n  },\n  {\n    Manufacturer: 'Volvo',\n    Make: 'Volvo',\n  },\n];\n\nexport function getManufactureByMake(make: string) {\n  make = (make || '').replace(/[^\\w]/gi, '').toUpperCase();\n  let manufacturer = MANUFACTURE_MAKE_DEFINITION.find(m => m.Make.replace(/[^\\w]/gi, '').toUpperCase() === make);\n  return manufacturer ? manufacturer.Manufacturer : '';\n}\n\n// https://codebeautify.org/xmltojson\n\nexport const MONITOR_DEFINITION = [\n  // [shortName, enName, spName, frName ....]\n  [\n    'mis',\n    'Misfire Monitor',\n    'El monitor de fallo de encendido',\n    'La sonde des ratés',\n  ],\n  [\n    'fue',\n    'Fuel System Monitor',\n    'El monitor del sistema de combustible',\n    'La sonde du système de carburation',\n  ],\n  [\n    'ccm',\n    'Comprehensive Component Monitor (CCM)',\n    'El monitor general de componentes (CCM)',\n    'La sonde globale des composants (SGC)',\n  ],\n  [\n    'cat',\n    'Catalyst Monitor',\n    'Monitor del convertidor catalítico',\n    'La sonde du convertisseur catalytique',\n  ],\n  [\n    'hca',\n    'Heated Catalyst Monitor',\n    'Monitor del sistema EGR',\n    \"Sonde de catalyseur d'hydrocarbures non méthaniques\",\n  ],\n  [\n    'eva',\n    'EVAP System Monitor',\n    'Monitor del sistema EVAP',\n    \"La sonde du système d'évaporation (EVAP)\",\n  ],\n  [\n    'air',\n    'Secondary Air System Monitor',\n    'Monitor del sistema secundario de aire',\n    \"La sonde du système d'air secondaire\",\n  ],\n  [\n    'o2s',\n    'Oxygen Sensor Monitor',\n    'Monitor del sensor de oxígeno',\n    \"La sonde du détecteur d'oxygène\",\n  ],\n  [\n    'htr',\n    'Oxygen Sensor Heater Monitor',\n    'Monitor del calefactor del sensor de oxígeno',\n  ],\n  [\n    'nox',\n    'NOx Adsorber Monitor',\n    'Monitor de adsorción NOx',\n    \"Sonde d'absorption de NOx\",\n  ],\n  [\n    'egs',\n    'Exhaust Gas Sensor Monitor',\n    'Monitor de sensor de gases de escape',\n    \"Sonde du capteur de gaz d'échappement\",\n  ],\n  [\n    'hcc',\n    'NMHC Monitor',\n    'Monitor NMHC',\n    'La sonde du convertisseur catalytique chauffé',\n  ],\n  [\n    'egr',\n    'EGR System Monitor',\n    'Monitor del sistema EGR',\n    'La sonde du système de recirculation des gaz du carter («EGR»)',\n  ],\n  [\n    'dpf',\n    'PM Filter Monitor',\n    'Monitor de filtro PM',\n    'Sonde de filtre à particules',\n  ],\n  ['ect', 'Engine Coolant Temperature', 'Monitor de ECT', 'Sonde de ECT'],\n  [\n    'bps',\n    'Boost Pressure System Monitor',\n    'Monitor del sistema de presión de refuerzo',\n    'Sonde du système de pression de suralimentation',\n  ],\n].map((item) => item.join('/').toUpperCase().split('/')); // UPPERCASE ALL\n\nexport const BRAKE_LIFE_DEFINITION_2021 = [\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'CHEVROLET',\n    _PIDs: 'Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Low|OFF',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'BMW',\n    _PIDs: 'Rear Brake Pad Check',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '50',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'BMW',\n    _PIDs: 'Front Brake Pad Check',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '50',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'FORD',\n    _PIDs: 'Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Low|OFF',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'AUDI',\n    _PIDs: 'Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Inactive|Wear indicat.',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'LINCOLN',\n    _PIDs: 'Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Low|OFF',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'MERCURY',\n    _PIDs: 'Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Low|OFF',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'MERCEDES-BENZ',\n    _PIDs: 'Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Off|Not OK|Not Present',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'MERCEDES-BENZ',\n    _PIDs: 'Rear Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Off|Not OK|Not Present',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'MERCEDES-BENZ',\n    _PIDs: 'Front Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Off|Not OK|Not Present',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Make: 'VOLKSWAGEN',\n    _PIDs: 'Brake Pad Check',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Inactive|Wear indicat.',\n    _ValueType: 'string',\n  },\n];\n\n// Update since https://iectech.atlassian.net/browse/TABD-224\nexport const OIL_LIFE_DEFINITION_2021 = [\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'CHEVROLET',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '20',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'BMW',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '20',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'FORD',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '15',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'OTHERS',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '20',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'GM',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '20',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'LINCOLN',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '15',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'MAZDA',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '15',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'MERCEDES-BENZ',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '2',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'HONDA',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '15',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: '{0:00}%',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: '{0:00}%',\n      },\n    ],\n    _Make: 'ACURA',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: '15',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Poor',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good',\n      },\n    ],\n    _Make: 'VOLKSWAGEN',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Poor|Poor oil quality',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Poor',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good',\n      },\n    ],\n    _Make: 'AUDI',\n    _PIDs: 'Oil Life Remaining',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Poor|Poor oil quality',\n    _ValueType: 'string',\n  },\n];\n\n// Defined by 'TelematicsDongle_PIDs_Specification (Jul292021).xlsx'\nexport const OIL_LEVEL_DEFINITION = [\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'XX %',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'XX %',\n      },\n    ],\n    _Manufacture: 'VOLVO',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: 'x<25 || x>57,,x>=35 && x<=57',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'OTHERS',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: '??,,OK|OFF|Not present|Not activate|Not Actived|Brake lining 1|Brake Pads Not Worn',\n    _ValueType: 'int',\n  }\n];\n\n// Defined by 'TelematicsDongle_PIDs_Specification (Jul292021).xlsx'\nexport const BRAKE_LIFE_DEFINITION = [\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'XX %',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'XX %',\n      },\n    ],\n    _Manufacture: 'BMW',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: 'x<50,,x>51',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'OTHERS',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Others,,OK|OFF|Not Set|Not present|Not activate|Not Actived|Not Activated|Brake lining 1|Brake Pads Not Worn',\n    _ValueType: 'int',\n  }\n];\n\n// Defined by 'TelematicsDongle_PIDs_Specification (Jul292021).xlsx'\nexport const OIL_LIFE_DEFINITION = [\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'XX %',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'XX %',\n      },\n    ],\n    _Manufacture: 'FORD|HONDA',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: 'x<15,,x>16',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'XX %',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'XX %',\n      },\n    ],\n    _Manufacture: 'BMW|GM|CHRYSLER|SUBARU',\n    _Group: 'Group 1',\n    _Operation: 'Comparison',\n    _Condition: 'x<20,,x>21',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Poor',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good',\n      },\n    ],\n    _Manufacture: 'FORD',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Low Oil,,OK',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Poor',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good',\n      },\n    ],\n    _Manufacture: 'VOLKSWAGEN',\n    _Group: 'Group 2',\n    _Operation: 'Equality',\n    _Condition: 'Poor|Poor oil quality,,Good|Good oil quality',\n    _ValueType: 'string',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Poor',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good',\n      },\n    ],\n    _Manufacture: 'VOLKSWAGEN',\n    _Group: 'Group 3',\n    _Operation: 'Comparison',\n    _Condition: 'x<>1,,x==1',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Poor',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good',\n      },\n    ],\n    _Manufacture: 'MERCEDES-BENZ',\n    _Group: 'Group 3',\n    _Operation: 'Comparison',\n    _Condition: 'x<1 || x>4,,x>1 && x<4',\n    _ValueType: 'int',\n  },\n];\n\n// Defined by 'TelematicsDongle_PIDs_Specification (Jul292021).xlsx'\nexport const TRANSMISSION_FLUID_TEMPERATURE_DEFINITION = [\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'TOYOTA|SUBARU',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=212,,176<=x && x<=194',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'BMW|HONDA|ACURA',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=230,,x<230',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'GM',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>240,,x<240',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'FORD|LINCOLN|VOLKSWAGEN|AUDI',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=221,,176<=x && x<=203',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'HYUNDAI',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=221,,176<=x && x<=221',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'MERCURY',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=221,,176<=x && x<=194',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'MERCEDES-BENZ',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=248,,x<248',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'MAZDA',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=266,,x<266',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'VOLVO',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=194,,176<=x && x<=194',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'CHRYSLER',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=200,,x<=200',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'JAGUAR LAND ROVER',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=275,,176<=x && x<=221',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'NISSAN',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>=293,,x<293',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'MITSUBISHI',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>176,,58<=x && x<=176',\n    _ValueType: 'int',\n  },\n  {\n    ouput: [\n      {\n        applocation: 'Needs Attention',\n        appmessage: 'Inspect',\n      },\n      {\n        applocation: 'Passed',\n        appmessage: 'Good Condition',\n      },\n    ],\n    _Manufacture: 'MITSUBISHI',\n    _PIDs: 'Transmission Fluid Temperature',\n    _Group: 'Group 2',\n    _Operation: 'Comparison',\n    _Condition: 'x>161,,143<=x && x<=161',\n    _Unit: 'COUNT',\n    _ValueType: 'int',\n  },\n];\n\nexport const TIRE_PRESSURES_DEFINITION = [\n  {\n    _Pid: '1',\n    _Name: 'left front tire pressure',\n    _ThresholdName: 'left front tire pressure threshold',\n    _StandardName: 'left front tire pressure standard',\n    _StatusName: 'left front tire pressure status',\n    _OtherName: 'tire 1 pressure',\n    _OtherThresholdName: 'tire 1 pressure threshold',\n    _OtherStandardName: 'tire 1 pressure standard',\n    _OtherStatusName: 'tire 1 pressure status',\n  },\n  {\n    _Pid: '2',\n    _Name: 'left rear tire pressure',\n    _ThresholdName: 'left rear tire pressure threshold',\n    _StandardName: 'left rear tire pressure standard',\n    _StatusName: 'left rear tire pressure status',\n    _OtherName: 'tire 2 pressure',\n    _OtherThresholdName: 'tire 2 pressure threshold',\n    _OtherStandardName: 'tire 2 pressure standard',\n    _OtherStatusName: 'tire 2 pressure status',\n  },\n  {\n    _Pid: '3',\n    _Name: 'right front tire pressure',\n    _ThresholdName: 'right front tire pressure threshold',\n    _StandardName: 'right front tire pressure standard',\n    _StatusName: 'right front tire pressure status',\n    _OtherName: 'tire 3 pressure',\n    _OtherThresholdName: 'tire 3 pressure threshold',\n    _OtherStandardName: 'tire 3 pressure standard',\n    _OtherStatusName: 'tire 3 pressure status',\n  },\n  {\n    _Pid: '4',\n    _Name: 'right rear tire pressure',\n    _ThresholdName: 'right rear tire pressure threshold',\n    _StandardName: 'right rear tire pressure standard',\n    _StatusName: 'right rear tire pressure status',\n    _OtherName: 'tire 4 pressure',\n    _OtherThresholdName: 'tire 4 pressure threshold',\n    _OtherStandardName: 'tire 4 pressure standard',\n    _OtherStatusName: 'tire 4 pressure status',\n  },\n  {\n    _Pid: '5',\n    _Name: 'spare tire pressure',\n    _ThresholdName: 'spare tire pressure threshold',\n    _StandardName: 'spare tire pressure standard',\n    _StatusName: 'spare tire pressure status',\n    _OtherName: 'tire 5 pressure',\n    _OtherThresholdName: 'tire 5 pressure threshold',\n    _OtherStandardName: 'tire 5 pressure standard',\n    _OtherStatusName: 'tire 5 pressure status',\n  },\n];\n","export class BufferResp {\n\n    private command = 0;\n    private isCompleted = false;\n    private payload = [];\n\n    private expectedLength = 0;\n    private error = {};\n\n\n    constructor(private buffer, private fLog) {\n\n\n        this.isCompleted = false\n        this.payload = []\n        this.expectedLength = 0\n        this.error = {}\n\n        //Parse the 1st buffer\n        this.command = buffer[1] - 1\n        let type = buffer[0]\n        if (type === 0xDD) {\n            this.parseFeedback(buffer)\n        }\n        else if (type === 0xDA) {\n\n            this.parseData(buffer)\n\n        }\n        else {\n            this.isCompleted = true\n            this.error = { code: 0, message: 'Corrupted packet' }\n            this.payload = []\n        }\n    }\n    logger(t) {\n\n        this.fLog && this.fLog(t)\n    }\n    translateError(code) {\n        let knownErrors = {\n            0: \"No Error\",\n            2: \"Request without correct response from vehicle\",\n            3: \"Parameter is not matched with spec\",\n            4: \"Message is not supported\",\n            5: \"General error\",\n            6: \"process is not ready , need to retry in next time example retry in 100ms\",\n            7: \"Need to restart write flash present section again\",\n            8: \"Already have it\"\n        }\n        return knownErrors[code] || `Error response with code ${code}`\n    }\n\n    parseFeedback(buffer) {\n        let res = buffer[4]\n        this.isCompleted = true\n\n        if (res === 0xC2) {\n            let code = buffer[5]\n            let message = this.translateError(code)\n            this.error = { code, message }\n        }\n        else if (buffer[1] === 0xcf &&\n            buffer[2] === 2 &&\n            buffer[3] === 0) {\n            this.payload = [buffer[4], buffer[5]]\n        }\n        else {\n            this.payload = []\n        }\n    }\n\n    parseData(buffer) {\n        if (this.expectedLength === 0) {\n            this.expectedLength = buffer[2] + (buffer[3] * 256)\n        }\n\n        //Data which include the checksum\n        let data = buffer.slice(4, buffer.length)\n        this.appendData(data)\n    }\n\n    appendData(data) {\n\n        this.payload = this.payload.concat(data)\n        //If payload is ready eg = expected-length + checksum\n        this.isCompleted = (this.payload.length >= this.expectedLength + 1)\n        // console.log(`append response payload: ${this.payload.length}, expected: ${this.expectedLength}`)\n        if (this.isCompleted) {\n            this.payload = this.payload.slice(0, this.payload.length - 1)\n        }\n\n        return this\n    }\n}\n","/*\n*Handle respones data buffers\n* */\n\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { NotifyService } from './../utilities/notify.service'\nimport { BufferResp } from './BufferResp'\nimport * as DataParser from './../utilities/dataParser'\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Response {\n  private currentResponse\n\n  constructor(private Logger: NotifyService) {\n    this.currentResponse = null\n  }\n\n  private ensurePayload(payload) {\n    return payload && payload.slice(0, payload.length - 1)\n  }\n\n  /**\n   * Process a given buffer and then returns response if completed, otherwise returns null\n   */\n  public parseResponse(buffer, command) {\n\n    if (!command) {\n      return {\n        command: 'Unknown',\n        error: 'Unexpected data received',\n        payload: buffer\n      }\n    }\n    /*\n      Fix bug drop package data\n    */\n    //If there is a pending response, just append data\n    if (!this.currentResponse || (this.currentResponse.command !== command.id)) {\n      // rule: response command id must equal request command id + 1\n      if (!this.currentResponse) {\n\n          this.currentResponse = new BufferResp(buffer, (logt) => {\n            this.Logger.log(logt)\n          });\n        if (buffer && (buffer[1] === 0x81)) { //response in JSON format , Pro34\n          this.currentResponse['isJSON'] = true;\n        }\n      }\n      else if (this.currentResponse && this.currentResponse.isJSON) {\n        this.currentResponse.appendData(buffer)\n      }\n      else {\n        // kind of unknown response, just skip it\n        return null\n      }\n    }\n    else if (this.currentResponse.command === command.id) {\n      this.currentResponse.appendData(buffer)\n    }\n\n    //If response is completed constructed, remove from pending list\n    //And returns the response, otherwise returns null\n    if (this.currentResponse.isCompleted && this.ensurePayload(this.currentResponse.payload)) {\n      let res = this.currentResponse\n\n      // if ((this.currentResponse.isJSON || command.isVCIMode) && (res.payload.length > 4))\n      // {\n      //   res.status = res.payload[4];\n      //   res.payload = res.payload.slice(5);/*4bytes length , 1byte status , <data>*/\n      // }\n\n      this.currentResponse = null\n\n      //console.log('payload----------------------', bytesToHexString(res.payload))\n      return {\n        command: res.command,\n        error: res.error,\n        payload: res.payload,\n        status: res.status\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * When error occurs reset the current response\n   */\n  public resetResponse() {\n\n    this.currentResponse = null\n  }\n}","/**\n * @Author: quocdo-macbook\n * @Date:   2020-11-06T22:46:24+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2021-12-09T21:14:46+07:00\n */\n\n\n\nimport { Injectable, EventEmitter, Output } from '@angular/core';\nimport { ConnectivityService } from './../connectivity/connectivity.service'\nimport * as VCIStd from '../obd/vcistd';\nimport { NotifyService } from './../utilities/notify.service'\nimport * as DataParser from './../utilities/dataParser';\nimport { Buffer } from 'buffer'\nimport * as _ from 'lodash';\nimport { Response } from './Response'\nimport { parserNotifyEvents } from './eventParser'\nimport { enumDataFrameType, EnumSerialType } from './../standard/enums'\nimport { timeout } from 'q';\nimport { isNullOrUndefined, isObject } from 'util';\nimport { InnovaVCIEvent } from 'src/app/services/innova-tool-models';\nimport * as ENUMVCIs from '../obd/vcistd'\nimport { Events } from 'src/app/services/events.service';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CommandService {\n\n  private command: any = {};\n  private callback = null;\n  private dataReceiver = null;\n  private notifier = null;\n  private timerInterval = null;\n  private timerIntervalTick = 0;\n  private isForceStop = false;\n  private formatType = 0;\n  private BleMsgRx = enumDataFrameType.unknowFrame;\n  private callbackNotify = null;\n  private timerTimeout = null;\n  private notifyData: any;\n  private isProcessing = false;\n  public isConfirmNormal = false;\n  private isFastCancel = false;\n  private  bytes = [];\n  // private vciEvents: EventEmitter<any> = new EventEmitter<any>()\n  private respData = null;\n  private store_multidata = [];\n  constructor(private commService: ConnectivityService, private events: Events, private logger: NotifyService, private response: Response) {\n    this.isFastCancel = false;\n    this.events.subscribe(InnovaVCIEvent.INTERRUPT_PROCESS, () => {\n      this.ResetListenerData();\n      this.ResetResponse();\n    });\n  }\n  public EventCallBackFunction = new EventEmitter();\n  public isRegisterCallBack = false;\n\n  // Add by ngoclb\n  public ResetListenerData() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n    this.timerIntervalTick = 0;\n    this.command = {};\n    this.isProcessing = false;\n    this.isFastCancel = false;\n  }\n\n  private ResetResponse() {\n    this.bytes = [];\n    this.response.resetResponse();\n  }\n\n  public async EnableFastCancel()\n  {\n    this.isFastCancel = true;\n  }\n\n  public async ResetFastCancel() {\n    this.isFastCancel = false;\n  }\n\n  public async receivedData(data) {\n    try {\n      const { command, payload } = data;\n    let data_load = null;\n    let len_data = 0;\n\n      if (command === 'Unknown') {\n      data_load = payload.slice(4);\n    }\n      else {\n      data_load = payload;\n    }\n    const [b0, b1, b2, b3, status, ...vcidata] = data_load; //remove four bytes of header when listening\n      !isNullOrUndefined(this.timerInterval) && await clearInterval(this.timerInterval);\n      this.isProcessing = false; // received status\n      if (status === 0x99) //End Process\n    {\n\n        await this.events.publish('user:gui_info', { Finish: '' });\n    }\n      else {\n        await this.notify_confirmack();\n        if (command === 'Unknown') {\n          length = vcidata.length - 1;\n    }\n        else {\n      length = vcidata.length;\n    }\n\n        let str: string = DataParser.bytesToString(vcidata.slice(0, length)).replace('Select and press ENTER', '');\n      //this.logger.log(str);\n        str = str.replace('and press Enter', '');\n      this.logger.log(str);\n      var obj = JSON.parse(str);\n        if (_.isObject(obj)) {\n          await this.events.publish('user:gui_info', obj);\n      }\n    }\n    }\n    catch (err) {\n      this.logger.log('Received GUI:' + err)\n    }\n\n\n    //this.EventCallBackFunction.emit(obj);\n  }\n\n  async notify_confirmack() {\n    try {\n      const procid = DataParser.arrayFromNumber(ENUMVCIs.VCIProg.gui, 2);\n      const statid = DataParser.arrayFromNumber(ENUMVCIs.VCICmd_GUI.gui_host_ack, 1);\n    const usbCommandHeader = [0x04, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00];\n    const usbData = [];\n      const cmdinfo = {\n        id: 0x80,\n        data: [].concat(usbCommandHeader, procid, statid, usbData, [0, 0])\n      }\n      let lencmd = [cmdinfo.data.length];\n      const datacmd = [0xAD, cmdinfo.id, ...lencmd, ...cmdinfo.data];\n    let cs = this.sumdata(datacmd);\n    this.logger.log('Send GUI ACK')\n    await this.commService.writeHex([...datacmd, cs])\n    }\n    catch (err) {\n      this.logger.log('Gui ACK Error:' + err)\n    }\n\n\n  }\n\n  public async disconnectBluetoothDevices(): Promise<boolean> {\n    return this.commService.disconnectBluetoothDevices();\n  }\n\n  public async CloseConnection(): Promise<boolean> {\n    return this.commService.CloseConnection();\n  }\n\n  public async BluetoothIsConnected():Promise<boolean> {\n    return this.commService.BluetoothIsConnected();\n  }\n\n  public initialize(type: EnumSerialType): Promise<boolean> {\n    return this.commService.initialize(async (data) => {\n      await this.datareceivehandler(data)\n    }, type\n    )\n  }\n\n  public async connectBlueToothDevice(macAddress:string, cb?: any){ // changed by ngoclb\n    try{\n      let res = await this.commService.connectBlueToothDevice(macAddress,(data) => {\n        this.datareceivehandler_bluetooth(data)\n      },cb)\n      return res;\n    }\n    catch (err) {\n      //alert(err);\n      return null; // add by ngoclb\n    }\n  }\n\n  public async getBluetoothDevicesList(): Promise<object> {\n    console.log('Run getBluetoothDevicesList: ');\n    try {\n      return await this.commService.listBluetoothDevices();\n    }\n    catch (err) {\n      console.log('err: ', err);\n      alert(err);\n    }\n\n  }\n\n  public async getBluetoothBondedDevicesList(): Promise<object> {\n    console.log('Run getBluetoothBondedDevicesList: ');\n    try {\n      return await this.commService.listBonnedBluetoothDevices();\n    }\n    catch (err) {\n      console.log('getBluetoothBondedDevicesList err: ', err);\n      alert(err);\n    }\n\n  }\n\n  private sumdata(data): Number {\n    let cs = 0;\n    (data || []).map(t => {\n      cs += t;\n      return t\n    })\n    cs &= 0xff\n    return cs\n  }\n\n  /**\n   * [sendGetMultiData Function handle send and get multidata of Loggign]\n   * @param  cmdinfo [cmd info]\n   * @return         [data of response]\n   */\n  public sendGetMultiData(cmdinfo):Promise<{data,error}> {\n    return new Promise(async resolve => {\n      try {\n        this.ResetListenerData();\n        this.ResetResponse();\n        let payload:any =[];\n        this.command = {\n          data: cmdinfo.data || [],\n          id: cmdinfo.id,\n          timeout: cmdinfo.timeout || 3000,\n          nretry: cmdinfo.nretry || 3\n        }\n        let num_retry = 0;\n        let lencmd = [this.command.data.length];\n        if (this.command.data.length > 0x7f) {\n          lencmd = DataParser.numberToBytes(this.command.data.length, 2)\n          lencmd[0] |= 0x80;\n        }\n        const datacmd = [0xAD, this.command.id, ...lencmd, ...this.command.data]\n        let cs = this.sumdata(datacmd)\n        this.isProcessing = true\n        //this.timerIntervalTick = 0\n        this.respData = null\n        this.setBleMsgRx(enumDataFrameType.unknowFrame)\n        this.timerIntervalTick = 0;\n        //this.respData.isvalid = false;\n        await this.commService.writeHex([...datacmd, cs])\n        if(this.commService.getSerialType() === EnumSerialType.Bluetooth)\n        {\n          this.command.timeout=this.command.timeout*3;\n        }\n        this.timerInterval && clearInterval(this.timerInterval);\n        this.timerInterval =  setInterval(async ()=>{\n          // this.logger.log('TimerID:' + this.timerInterval);\n          this.timerIntervalTick +=10\n          if(this.isProcessing == false)\n          {\n            payload  = this.respData;\n            // this.command = undefined;\n            // this.logger.log('Clear TimerID:' + this.timerInterval);\n            // clearInterval(this.timerInterval);\n            this.ResetListenerData()\n            this.logger.log('Finish received with processing false (multi)')\n            return resolve({\n              error: undefined,\n              data: payload\n            })\n          }\n          if (this.getBleMsgRx() == enumDataFrameType.BusyFrame) {\n            this.timerIntervalTick = 0;\n            this.setBleMsgRx(enumDataFrameType.unknowFrame);\n          }\n\n          if (this.getBleMsgRx() == enumDataFrameType.StartMultiData) {\n            this.timerIntervalTick = 0;\n            this.setBleMsgRx(enumDataFrameType.unknowFrame);\n          }\n          if (this.getBleMsgRx() == enumDataFrameType.LogDataofMultiData) {\n            // this.logger.log('Clear TimerID:' + this.timerInterval);\n            this.timerIntervalTick = 0;\n          //  payload.push(this.respData);\n            this.logger.log('Data Logging package number:' + this.store_multidata.length)\n\n          }\n          if (this.getBleMsgRx() == enumDataFrameType.StopMultiData) {\n            this.timerIntervalTick = 0;\n            this.setBleMsgRx(enumDataFrameType.unknowFrame);\n            !isNullOrUndefined(this.timerInterval) && await clearInterval(this.timerInterval);\n            this.isProcessing = false;\n            this.command = undefined;\n            // this.respData.isvalid = false;\n            this.logger.log('Finish received (Multi)')\n            return resolve({\n              error: undefined,\n              data: this.store_multidata\n            })\n          }\n\n\n          if(this.timerIntervalTick >= this.command.timeout)\n          {\n            num_retry++;\n            //this.logger.log(\"time-clock:\"+this.timerIntervalTick)\n            this.logger.log(\"time-setup:\"+this.command.timeout)\n            this.logger.log('timeout')\n            if(num_retry >= this.command.nretry)\n            {\n            //   this.command = undefined;\n            //   this.timerIntervalTick=0;\n            //   // this.logger.log('TimerID:' + this.timerInterval);\n            //  !isNullOrUndefined(this.timerInterval) && await clearInterval(this.timerInterval);\n            //  this.isProcessing = false\n             this.ResetListenerData()\n             this.ResetResponse()\n              return resolve({\n                error: { message: 'Time Out , No Response' },\n                data: undefined\n              })\n            }\n            else {\n              await this.commService.writeHex([...datacmd, cs])\n              this.timerIntervalTick = 0;\n            }\n\n\n          }\n        }, 10)\n      }\n      catch (errsend) {\n        return resolve({\n          error: { message: 'sendGetMultiData error ' + errsend.message },\n          data: undefined\n        })\n      }\n    })\n  }\n  public sendData(cmdinfo):Promise<{data,error}> {\n    return new Promise(async resolve => {\n      try {\n        // if(this.isFastCancel)\n        // {\n        //   this.logger.log('fast cancel, please reset fast cancel')\n        //   return resolve( {\n        //     data:undefined,\n        //     error: { message: 'enable fast cancel, please reset fast cancel'},\n        //   })\n        // }\n        if(this.isProcessing)\n          {\n            this.logger.log('linking busy')\n            return resolve( {\n            data:undefined,\n            error: { message: 'Linking is busy , need wait to complete'},\n          })\n        }\n        this.ResetListenerData()\n        this.ResetResponse()\n          //this.timerInterval =null;\n        this.command = {\n          data: cmdinfo.data || [],\n          id: cmdinfo.id,\n          timeout: cmdinfo.timeout || 3000,\n          nretry: cmdinfo.nretry || 3\n        }\n        let num_retry = 0;\n        // const __clearTimeout = ()=>{\n        //   this.logger.log('clear timeout')\n        //   if(!!this.timerTimeout)\n        //   {\n        //   clearTimeout(this.timerTimeout)\n        //   this.timerTimeout=null;\n        //   }\n        // }\n        // const ftimeout = () => {\n        //   this.logger.log('start timeout '+this.command.timeout)\n        //   this.timerTimeout = setTimeout(() => {\n        //     this.logger.log('timeout !!!')\n        //     this.isProcessing = false;\n        //     resolve({\n        //       error: { message: 'Time Out , No Response' },\n        //       data: undefined\n        //     })\n        //   }, this.command.timeout)\n        // }\n\n        let lencmd = [this.command.data.length];\n        if (this.command.data.length > 0x7f) {\n          lencmd = DataParser.numberToBytes(this.command.data.length, 2)\n          lencmd[0] |= 0x80;\n        }\n        const datacmd = [0xAD, this.command.id, ...lencmd, ...this.command.data]\n        let cs = this.sumdata(datacmd)\n        this.isProcessing = true\n        //this.timerIntervalTick = 0\n        this.respData = null\n        this.setBleMsgRx(enumDataFrameType.unknowFrame)\n        this.timerIntervalTick = 0;\n        //this.respData.isvalid = false;\n        await this.commService.writeHex([...datacmd, cs])\n        if (this.commService.getSerialType() === EnumSerialType.Bluetooth) {\n          // this.command.nretry=this.command.nretry*2;\n          this.command.timeout = this.command.timeout * 2;\n        }\n        // const fGetData = async function():Promise<any>{\n        //   this.timerIntervalTick +=10;\n        //   if(this.getBleMsgRx() == enumDataFrameType.BusyFrame)\n        //   {\n        //     this.timerIntervalTick=0;\n        //     this.setBleMsgRx(enumDataFrameType.unknowFrame);\n        //   }\n        //   if(!isNullOrUndefined(this.respData) && this.respData.isvalid)\n        //   {\n        //     // !isNullOrUndefined(this.timerInterval) && clearInterval(this.timerInterval);\n        //     const {payload } = this.respData\n        //     this.isProcessing = false;\n        //     this.command = undefined;\n        //     // this.respData.isvalid = false;\n        //     this.logger.log('Finish received')\n        //     return {\n        //       error: undefined,\n        //       data: payload\n        //     }\n        //   }\n        //   if(this.timerIntervalTick >= this.command.timeout)\n        //   {\n        //     num_retry++;\n        //     //this.logger.log(\"time-clock:\"+this.timerIntervalTick)\n        //     this.logger.log(\"time-setup:\"+this.command.timeout)\n        //     this.logger.log('timeout')\n        //     if(num_retry == this.command.nretry)\n        //     {\n        //       this.command = undefined;\n        //       this.timerIntervalTick=0;\n        //      // !isNullOrUndefined(this.timerInterval) && clearInterval(this.timerInterval);\n        //      this.isProcessing = false\n        //       return {\n        //         error: { message: 'Time Out , No Response' },\n        //         data: undefined\n        //       }\n        //     }\n        //     else\n        //     {\n        //       await this.commService.writeHex([...datacmd, cs])\n        //       this.timerIntervalTick=0;\n        //     }\n        //\n        //\n        //   }\n        //   setTimeout(fGetData,10);\n        // }\n        // const data =await fGetData();\n        // return resolve(data);\n        this.timerInterval && clearInterval(this.timerInterval);\n        this.timerInterval =  setInterval(async ()=>{\n          // this.logger.log('TimerID:' + this.timerInterval);\n          this.timerIntervalTick +=10\n          if(this.isProcessing == false)\n          {\n            const {payload=null } = this.respData;\n            // this.command = undefined;\n            // this.logger.log('Clear TimerID:' + this.timerInterval);\n            // clearInterval(this.timerInterval);\n            this.ResetListenerData()\n            this.logger.log('Finish received with processing false')\n            return resolve({\n              error: undefined,\n              data: payload\n            })\n          }\n          if (this.getBleMsgRx() == enumDataFrameType.BusyFrame) {\n            this.timerIntervalTick = 0;\n            this.setBleMsgRx(enumDataFrameType.unknowFrame);\n          }\n          if (!isNullOrUndefined(this.respData) && this.respData.isvalid) {\n            // this.logger.log('Clear TimerID:' + this.timerInterval);\n            // !isNullOrUndefined(this.timerInterval) && await clearInterval(this.timerInterval);\n            const {payload } = this.respData\n            // this.isProcessing = false;\n            // this.command = undefined;\n            // this.respData.isvalid = false;\n            this.ResetListenerData()\n            this.logger.log('Finish received')\n            return resolve({\n              error: undefined,\n              data: payload\n            })\n          }\n          // if(this.isConfirmNormal)\n          // {\n          //   !isNullOrUndefined(this.timerInterval) && clearInterval(this.timerInterval);\n          //   //const {payload } = this.respData\n          //   this.isProcessing = false;\n          //   this.command = undefined;\n          //   this.isConfirmNormal = false;\n          //   this.logger.log('Return Normal Status')\n          //   return resolve({\n          //     error: undefined,\n          //     data: []\n          //   })\n          // }\n\n          if(this.timerIntervalTick >= this.command.timeout)\n          {\n            // var isOpenPort = await this.commService.blIsCheckOpenPort();\n            // if(isOpenPort)\n            // {\n            //   await this.commService.CloseConnection().then(async ()=>{\n            //     await this.commService.reinitlialize();\n            //   })\n            // }\n            num_retry++;\n            //this.logger.log(\"time-clock:\"+this.timerIntervalTick)\n            this.logger.log(\"time-setup:\"+this.command.timeout)\n            this.logger.log('timeout commandId='+JSON.stringify(cmdinfo));\n            if(num_retry >= this.command.nretry)\n            {\n            //   this.command = undefined;\n            //   this.timerIntervalTick=0;\n            //   // this.logger.log('TimerID:' + this.timerInterval);\n            //  !isNullOrUndefined(this.timerInterval) && clearInterval(this.timerInterval);\n            //  this.isProcessing = false\n              this.ResetListenerData()\n              this.ResetResponse()\n              return resolve({\n                error: { message: 'Time Out , No Response' },\n                data: undefined\n              })\n            }\n            else {\n              await this.commService.writeHex([...datacmd, cs])\n              this.timerIntervalTick = 0;\n            }\n\n\n          }\n        },10)\n        // // ftimeout()\n\n        // this.vciEvents.subscribe((respdata) => {\n\n        //   if(!isObject(respdata))\n        //     return;\n\n        //   let {isLinkVCI, isstarttimeout, payload } = respdata\n        //   if(!!!isLinkVCI)\n        //     return;\n        //   __clearTimeout();\n        //   if (!!isstarttimeout) {\n        //     // __clearTimeout();\n        //     ftimeout()\n        //     return;\n        //   }\n        //   this.logger.log(JSON.stringify(respdata))\n        //   this.isProcessing = false\n        //   return resolve({\n        //     data: payload,\n        //     error:undefined\n        //   })\n        // })\n\n      } catch (errsend) {\n        this.isProcessing = false\n        return resolve({\n          error: { message: 'sendData error ' + errsend.message },\n          data: undefined\n        })\n      }\n    })\n  }\n\n  public async testWrite(): Promise<boolean> {\n    await this.sendData({ id: 0xE1, timeout: 100, nretry: 0 })\n    return true\n  }\n\n  private isConfirmNormalStatus(bytes) {\n    if (isNullOrUndefined(this.command)) {\n      return false;\n    }\n    const { id = 1 } = this.command;\n    return (\n      (bytes[0] === 0xda || bytes[0] === 0xdd) &&\n      bytes[1] === id + 1 &&\n      bytes[2] === 7 &&\n      bytes[3] === 0 &&\n      bytes[4] === 2 &&\n      bytes[5] === 0 &&\n      bytes[6] === 0 &&\n      bytes[7] === 0 &&\n      bytes[8] === 0xaa &&\n      bytes[9] === 0 &&\n      bytes[10] === 0 &&\n      bytes[11] === 14\n\n    );\n  }\n  private isFrameACK(bytes) {\n    // const { command = {} } = this;\n    if (isNullOrUndefined(this.command)) {\n      return false;\n    }\n    const { id = 1 } = this.command;\n    return (\n      (bytes[0] === 0xda || bytes[0] === 0xdd) &&\n      bytes[1] === id + 1 &&\n      bytes[2] === 4 && /*Hung Vo fix wrong frame ACK*/\n      bytes[3] === 0 &&\n      bytes[4] === 0xc4 &&\n      bytes[5] === 0 &&\n      bytes[6] <= 48 &&\n      bytes[7] === 0\n    );\n  }\n\n\n  private isFrameBusy(bytes) {\n    const busyFrame = [0xdd, 0xc3, 0x02, 0x00, 0x00, 0x00, 0xa2];\n    const busyFrame2 = [0xda, 0xc3, 0x02, 0x00, 0x00, 0x00, 0x9f];\n    if (bytes.length > 7) {\n      return (_.isEqual(bytes.slice(0, 6), busyFrame) || _.isEqual(bytes.slice(0, 6), busyFrame2));\n    }\n    else if (bytes.length == 7) {\n      return (_.isEqual(bytes, busyFrame) || _.isEqual(bytes, busyFrame2));\n    }\n\n  }\n\n\n  private isRequestACK(bytes) {\n    const { command = {} } = this;\n    const { id = 1 } = command;\n    return bytes.length === 7 && (bytes[0] === 0xda || bytes[0] === 0xdd) && bytes[1] === id + 1 && bytes[4] === 0xc5;\n  }\n\n  private isStartMultiData(bytes) {\n    const { command = {} } = this;\n    return (bytes[0] === 0xda || bytes[0] === 0xdd) && (bytes[1] === 0x5B) && bytes[4] === 0x01;\n  }\n\n  private isStopMultiData(bytes) {\n    const { command = {} } = this;\n    return (bytes[0] === 0xda || bytes[0] === 0xdd) && (bytes[1] === 0x5B) && bytes[4] === 0x00;\n  }\n\n  private isDataofMulti(bytes) {\n    const { command = {} } = this;\n    return (bytes[0] === 0xda || bytes[0] === 0xdd) && (bytes[1] === 0x5B) && bytes[4] === 0x02;\n  }\n\n\n  private setBleMsgRx(type) {\n    this.BleMsgRx = type; //BLEMsg.unknowFrame;\n  }\n\n  private getBleMsgRx() {\n    return this.BleMsgRx;\n  }\n\n\n  private isNotifyPacket(bytes) {\n    return bytes[0] === 0xda && bytes[1] === 0xc1;\n  }\n\n\n  private isStreamOEMPidData(bytes) {\n    return bytes[0] === 0xda && bytes[1] === 0x76;\n  }\n\n  private __onNotifyEvents(eventId, data) {\n\n    if (this.callbackNotify == undefined)\n      return\n\n    const dataEvent = parserNotifyEvents(eventId, data)\n    this.callbackNotify(eventId, dataEvent)\n  }\n\n  private __resetTimerTimeout() {\n\n    // !!this.timerTimeout && this.vciEvents.emit({isLinkVCI:true, isstarttimeout: true })\n  }\n\n  private async datareceivehandler(dataarray) {\n    try {\n\n      if (isNullOrUndefined(dataarray) || dataarray.length == 0) {\n        return;\n      }\n      //const bytes = [];\n      var bytes_temp = [];\n      (dataarray || []).map(xx => {\n          this.bytes.push(xx)\n          return xx\n      })\n      if (this.bytes[0] != 0xDA) {\n        // not valid response\n        this.logger.log(\"not valid response\")\n        this.bytes =[];\n        return;\n      }\n      let lendata=(this.bytes[2] + (this.bytes[3] << 8)) + 5;\n      //this.logger.log(\"len expect\"+lendata)\n      if((this.bytes.length)< lendata)\n      {\n          // ngoclb: display log in other way\n          this.logger.logComRx(`${DataParser.bytesToHexString(dataarray.slice(0, 22))}${dataarray.length>22?'xxx':''} ...${this.bytes.length}/${lendata}`);\n          return;\n      }\n      else {\n         // this.logger.log(\"len data\"+(this.bytes.length))\n        //  this.logger.log(this.bytes)\n        this.logger.log('Finish getting data');\n          bytes_temp = this.bytes;\n          // ngoclb: display log in other way\n          this.logger.logComRx(`${DataParser.bytesToHexString(this.bytes.slice(-1))} [CS]`);\n          this.logger.logComRx(`${DataParser.bytesToHexString(bytes_temp)} [${bytes_temp.length} bytes]`, true);\n\n\n        this.bytes = [];\n      }\n\n      if (this.isFrameBusy(bytes_temp)) {\n        this.logger.logComRx('Busy')\n        this.timerIntervalTick = 0;\n        if (this.isRegisterCallBack == true && this.isConfirmNormal == true) {\n          await this.events.publish('user:gui_info', { KeepAlive: '' });\n          this.logger.log('KeepAlive GUI');\n        }\n        this.setBleMsgRx(enumDataFrameType.BusyFrame);\n        return;\n      }\n\n      if (this.isFrameACK(bytes_temp)) {\n        this.setBleMsgRx(enumDataFrameType.RespFrameACK);\n        this.logger.logComRx('FrameACK')\n        return;\n      }\n\n      if (this.isStartMultiData(bytes_temp)) {\n        this.setBleMsgRx(enumDataFrameType.StartMultiData);\n        this.store_multidata = [];\n        this.logger.logComRx('StartMultiData')\n        return;\n      }\n\n      if (this.isStopMultiData(bytes_temp)) {\n        this.setBleMsgRx(enumDataFrameType.StopMultiData);\n        this.logger.logComRx('StopMultiData')\n        return;\n      }\n\n\n\n      if (this.isRequestACK(bytes_temp)) {\n        this.setBleMsgRx(enumDataFrameType.ReqFrameACK);\n        this.logger.logComRx('RequestACK')\n        return;\n      }\n      // check for notify packet\n      if (this.isNotifyPacket(bytes_temp)) {\n        const lenNotifyExpected = bytes_temp[2] + (bytes_temp[3] << 8);\n        const _isDone = ((lenNotifyExpected + 5) === bytes_temp.length)\n        this.logger.log('this.isNotifyPacket(bytes_temp)');\n        this.notifyData = {\n          id: bytes_temp[4],\n          expectedLen: lenNotifyExpected,\n          payload: _.slice(bytes_temp, 5, bytes_temp.length - 1),\n          isDone: _isDone,\n          waiting: !_isDone\n        }\n\n      } else if (this.notifyData && this.notifyData.waiting) {\n        this.notifyData.payload = (this.notifyData.payload || []).concat(bytes_temp)\n        this.logger.logComRx('notifyData.payload.length' + this.notifyData.payload.length)\n        this.logger.logComRx('notifyData.expectedLen' + this.notifyData.expectedLen)\n        this.logger.log('this.notifyData && this.notifyData.waiting');\n        if ((this.notifyData.payload.length + 1) >= this.notifyData.expectedLen) {\n          this.notifyData.isDone = true\n        }\n      }\n      // else\n      // {\n      //   this.logger.log('XXXXXXX');\n      // }\n\n      if (this.notifyData && this.notifyData.isDone) {\n        this.logger.log('this.notifyData && this.notifyData.isDone');\n        this.__onNotifyEvents(this.notifyData.id, this.notifyData.payload)\n        this.setBleMsgRx(enumDataFrameType.NotifyFrame);\n        this.__resetTimerTimeout()\n        this.notifyData = null\n        return;\n      }\n      if (this.isConfirmNormalStatus(bytes_temp)) {\n\n        if (this.isConfirmNormal || this.isRegisterCallBack == false) {\n              this.isConfirmNormal = false;\n            }\n            this.logger.log('Confirm Normal Status');\n\n      }\n      this.response.resetResponse()\n      let resp = this.response.parseResponse(bytes_temp, this.command);\n\n      //received response before timeout\n      if (resp) {\n        this.setBleMsgRx(enumDataFrameType.NotifyFrame);\n\n      }\n      else if (this.command) {\n        this.__resetTimerTimeout()\n      }\n      if (resp) {\n        // this.vciEvents.emit({isLinkVCI:true,...resp});\n        if (this.isDataofMulti(bytes_temp)) {\n          this.setBleMsgRx(enumDataFrameType.LogDataofMultiData);\n          this.logger.logComRx('Data of Multi Data with chunk index:' + bytes_temp[5]);\n        //  let resp_multidata =\n          this.store_multidata.push(\n            {\n              index: bytes_temp[5],\n              payload: bytes_temp.slice(6, bytes_temp.length - 1)\n            }\n\n          )\n        }\n        this.logger.log('Got Valid Response')\n        this.respData = { ...resp, isvalid: true }\n        this.response.resetResponse();\n        if (this.isRegisterCallBack == true && this.isConfirmNormal == true) {\n          // if(!isNullOrUndefined(this.EventCallBackFunction))\n          // {\n            //this.isConfirmNormal = false;\n              await this.receivedData(this.respData);\n          // }\n        }\n\n\n      }\n      if (this.isConfirmNormalStatus(bytes_temp)) {\n        if (this.isRegisterCallBack) {\n            this.isConfirmNormal = true;\n          }\n\n          this.logger.log('Confirm Normal');\n          // this.timerIntervalTick =0;\n          // return;\n      }\n    } catch (err) {\n      this.bytes = [];\n      this.logger.log('datareceivehandler ' + err)\n      throw new Error(err);\n    }\n  }\n\n  private async datareceivehandler_bluetooth(dataarray) {\n    try {\n\n      if (isNullOrUndefined(dataarray) || dataarray.length == 0) {\n        return;\n      }\n      //const bytes = [];\n      var bytes_temp = [];\n      (dataarray || []).map(xx => {\n          this.bytes.push(xx)\n          return xx\n      })\n      if (this.bytes.length <= 2) {\n        //this.logger.log(\"received len: \"+this.bytes.length)\n        return;\n      }\n      let lendata = (this.bytes[2] + (this.bytes[3] << 8)) + 5;\n\n      //this.logger.log(\"len expect\"+lendata)\n      if ((this.bytes.length) < lendata) {\n          //this.logger.log(\"len data\"+(this.bytes.length))\n          //this.logger.log(\"waiting enough data\")\n          return;\n      }\n      else {\n        this.logger.log(\"Received Valid:\" + (lendata) + \" bytes\")\n         //this.logger.log(this.bytes)\n          //this.logger.log('Finish getting data');\n        //  this.logger.log('buffer:' + DataParser.bytesToHexString(this.bytes));\n        bytes_temp = this.bytes.slice(0, lendata);\n          this.bytes = this.bytes.slice(lendata);\n          this.logger.log('RX:' + DataParser.bytesToHexString(bytes_temp));\n          //this.logger.log('buf:' + DataParser.bytesToHexString(this.bytes));\n          // if(this.commService.getSerialType() == EnumSerialType.Serial_USB)\n          // {\n          //   this.bytes =[];\n          // }\n\n      }\n\n\n      if (this.isFrameBusy(bytes_temp)) {\n        this.logger.logComRx('Busy')\n        this.logger.log('Busy')\n        this.timerIntervalTick = 0;\n        this.setBleMsgRx(enumDataFrameType.BusyFrame);\n        if (this.isRegisterCallBack == true && this.isConfirmNormal == true) {\n          await this.events.publish('user:gui_info', { KeepAlive: '' });\n          this.logger.log('KeepAlive GUI');\n        }\n        return;\n      }\n\n      if (this.isFrameACK(bytes_temp)) {\n        this.setBleMsgRx(enumDataFrameType.RespFrameACK);\n        this.logger.logComRx('FrameACK')\n        return;\n      }\n\n      if (this.isRequestACK(bytes_temp)) {\n        this.setBleMsgRx(enumDataFrameType.ReqFrameACK);\n        this.logger.logComRx('RequestACK')\n        return;\n      }\n      // check for notify packet\n      if (this.isNotifyPacket(bytes_temp)) {\n        const lenNotifyExpected = bytes_temp[2] + (bytes_temp[3] << 8);\n        const _isDone = ((lenNotifyExpected + 5) === bytes_temp.length)\n        this.logger.log('this.isNotifyPacket(bytes_temp)');\n        this.notifyData = {\n          id: bytes_temp[4],\n          expectedLen: lenNotifyExpected,\n          payload: _.slice(bytes_temp, 5, bytes_temp.length - 1),\n          isDone: _isDone,\n          waiting: !_isDone\n        }\n\n      } else if (this.notifyData && this.notifyData.waiting) {\n        this.notifyData.payload = (this.notifyData.payload || []).concat(bytes_temp)\n        this.logger.logComRx('notifyData.payload.length' + this.notifyData.payload.length)\n        this.logger.logComRx('notifyData.expectedLen' + this.notifyData.expectedLen)\n        this.logger.log('this.notifyData && this.notifyData.waiting');\n        if ((this.notifyData.payload.length + 1) >= this.notifyData.expectedLen) {\n          this.notifyData.isDone = true\n        }\n      }\n      // else\n      // {\n      //   this.logger.log('XXXXXXX');\n      // }\n\n      if (this.notifyData && this.notifyData.isDone) {\n        this.logger.log('this.notifyData && this.notifyData.isDone');\n        this.__onNotifyEvents(this.notifyData.id, this.notifyData.payload)\n        this.setBleMsgRx(enumDataFrameType.NotifyFrame);\n        this.__resetTimerTimeout()\n        this.notifyData = null\n        return;\n      }\n      if (this.isConfirmNormalStatus(bytes_temp)) {\n\n        if (this.isConfirmNormal || this.isRegisterCallBack == false) {\n              this.isConfirmNormal = false;\n            }\n            this.logger.log(\"Confirm Normal Status\")\n      }\n      this.response.resetResponse()\n      let resp = this.response.parseResponse(bytes_temp, this.command);\n\n      //received response before timeout\n      if (resp) {\n        this.setBleMsgRx(enumDataFrameType.NotifyFrame);\n\n      }\n      else if (this.command) {\n        this.__resetTimerTimeout()\n      }\n      if (resp) {\n        // this.vciEvents.emit({isLinkVCI:true,...resp});\n        //this.logger.log('lenght response'+bytes_temp.length);\n        this.respData = { ...resp, isvalid: true }\n        this.response.resetResponse();\n        if (this.isRegisterCallBack == true && this.isConfirmNormal == true) {\n          // if(!isNullOrUndefined(this.EventCallBackFunction))\n          // {\n            //this.isConfirmNormal = false;\n            await this.receivedData(this.respData);\n          // }\n        }\n\n\n      }\n      if (this.isConfirmNormalStatus(bytes_temp)) {\n        if (this.isRegisterCallBack) {\n            this.isConfirmNormal = true;\n          }\n\n          this.logger.logComRx('Confirm Normal Status');\n          // this.timerIntervalTick =0;\n          // return;\n      }\n    } catch (err) {\n      this.bytes = [];\n      this.logger.log('datareceivehandler ' + err)\n    }\n  }\n\n}\n","import * as _ from 'lodash'\nimport * as DataUtils from './../utilities/dataParser'\nimport { ENUM_EVENTIDTYPES, ENUM_EVENTTYPEDATA } from './../standard/enums';\n\nexport function parserNotifyEvents(eventId, data) {\n  try {\n    const dataRet = []\n    const parseEventData = (bytedatas, isUnsigned = true) => {\n      try {\n        return DataUtils.arrayToNumber(bytedatas, 4, false, isUnsigned) / 100\n      } catch (errorexception) {\n        return 0.0\n      }\n    }\n    // let eventData = { data: undefined, unit: undefined, name: undefined, value: undefined }\n    if (eventId === ENUM_EVENTIDTYPES.Engine_status) {\n      dataRet.push(\n        {\n          eventId,\n          value: data[0],\n          name: ENUM_EVENTTYPEDATA.Ignition,\n          data: `'${data[0] ? 'ON' : 'OFF'}`\n        })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Battery_warning) {\n      dataRet.push(\n        {\n          eventId,\n          value: data[0],\n          name: ENUM_EVENTTYPEDATA.Battery_Warning,\n          data: `{${data[0] ? 'Low' : 'Normal'}}`\n        })\n      return dataRet\n\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Fuel_Economy) {\n      let a = _.slice(data, 0, 4)\n      a = parseEventData(a)\n\n      dataRet.push(\n        {\n          eventId,\n          value: a,\n          name: ENUM_EVENTTYPEDATA.Current_Fuel_Consumption,\n          data: `${a.toFixed(2)}`,\n          unit: 'L/100Km',\n        })\n      a = _.slice(data, 4, 8)\n      a = parseEventData(a)\n      dataRet.push(\n        {\n          eventId,\n          value: a,\n          name: ENUM_EVENTTYPEDATA.Avarage_Fuel_Consumption,\n          data: `${a.toFixed(2)}`,\n          unit: 'L/100Km'\n        })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Fuel_Economy__Other_0c) {\n      //hh:mm:ss\n      /*\n      000024\n      84030000\n      00000000\n      */\n      const timeElapse = _.slice(data, 0, 3)//3\n      const everageSpeed = _.slice(data, 3, 7)//4\n      const distance = _.slice(data, 7, 11)//4\n\n      // let listdata = _.chunk(timeElapse, 1)\n\n      // listdata = listdata.map(t => {\n      //   return DataUtils.arrayToNumber(t, 2, false)\n      // })\n\n      dataRet.push(\n        {\n          eventId,\n          value: timeElapse,\n          data: `${timeElapse[0].toString(16)}:${timeElapse[1].toString(16)}:${timeElapse[2].toString(16)}`,\n          name: ENUM_EVENTTYPEDATA.Time_Elapse\n        })\n\n      dataRet.push(\n        {\n          eventId,\n          value: everageSpeed,\n          data: `${parseEventData(everageSpeed).toFixed(2)}`,\n          name: ENUM_EVENTTYPEDATA.Average_Speed,\n          unit: 'Km/h'\n        })\n\n      dataRet.push(\n        {\n          eventId,\n          value: distance,\n          data: `${parseEventData(distance).toFixed(2)}`,\n          name: ENUM_EVENTTYPEDATA.Distance,\n          unit: 'Km'\n        })\n      return dataRet;\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Fuel_Economy__Other_0d) {\n      let a = _.slice(data, 0, 4)\n      a = parseEventData(a)\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Fuel_Usage,\n        data: `${a.toFixed(2)}`,\n        unit: 'L'\n      })\n\n      a = _.slice(data, 4, 8)\n      a = parseEventData(a)\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Fuel_Trip,\n        data: `${a.toFixed(2)}`,\n        unit: 'L/100Km',\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Fuel_Economy__Other_0e) {\n      let a = _.slice(data, 0, 4)\n      a = parseEventData(a)\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Fuel_Rate,\n        data: `${a.toFixed(2)}`,\n        unit: 'L/h'\n      })\n\n      a = _.slice(data, 4, 8)\n      a = parseEventData(a)\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Distance_to_Empty,\n        data: `${a.toFixed(2)}`,\n        unit: 'Km',\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Fuel_Economy__Other_0f) {\n\n      const fuelStatusParser = (xxx) => {\n\n        if (xxx === 1) {\n          return 'ECO';\n        }\n\n        if (xxx === 0) {\n          return 'NON-ECO';\n        }\n\n        return 'Not Supported'\n      }\n      dataRet.push({\n        eventId,\n        value: data[0],\n        name: ENUM_EVENTTYPEDATA.Current_Fuel_Consumption_Status,\n        data: `${fuelStatusParser(data[0])}`\n      })\n      dataRet.push({\n        eventId,\n        value: data[1],\n        name: ENUM_EVENTTYPEDATA.Average_Fuel_Consumption_Status,\n        data: `${fuelStatusParser(data[1])}`\n      })\n\n      let a = _.slice(data, 2, 6)\n      a = parseEventData(a)\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Fuel_Tank_Size,\n        data: `${a.toFixed(2)}`,\n        unit: 'L'\n      })\n\n      a = _.slice(data, 6, 10)\n      a = parseEventData(a)\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Fuel_Volume_Remaining,\n        data: `${a.toFixed(2)}`,\n        unit: 'L',\n      })\n      return dataRet\n    }\n\n    else if (eventId === ENUM_EVENTIDTYPES.Acceleration) {\n      let a = _.slice(data, 0, 4)\n      a = parseEventData(a, false)\n\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Acceleration,\n        data: `${a.toFixed(2)}`,\n        unit: 'm/s2'\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Cooling_water_temperature_high) {\n\n      dataRet.push({\n        eventId,\n        value: data[0],\n        name: ENUM_EVENTTYPEDATA.Cooling_Water_Temperature_High,\n        data: `${data[0] ? 'High' : 'Normal'}`\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Battery_Health) {\n      const getBatteryHealthStatus = (a) => {\n        if (a === 0) { return 'GOOD' }\n        if (a === 1) { return 'NORMAL' }\n        if (a === 2) { return 'WARNING' }\n        if (a === 3) { return 'BAD' }\n        if (a === 4) { return 'NOT DETECT' }\n        if (a === 4) { return 'LOW VOLTAGE' }\n        return 'Unknow'\n\n      }\n      dataRet.push({\n        eventId,\n        value: data[0],\n        name: ENUM_EVENTTYPEDATA.Battery_Health,\n        data: getBatteryHealthStatus(data[0])\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Distance_Since_start) {\n      // eventData.name :  'Distance Since Start'\n      let a = _.slice(data, 0, 4)\n      a = parseEventData(a)\n      dataRet.push({\n        eventId,\n        value: a,\n        data: `${a.toFixed(2)}`,\n        unit: 'km',\n        name: ENUM_EVENTTYPEDATA.Distance_Since_Start\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.OEMPidNotify) {\n\n      const numberPid = data.shift()\n      const listPids = _.chunk(data, 10)\n      // const retPidVal = { data: null, raw: [{ pid: activePid, buff: null }] }\n      const pidRetVal = []\n      listPids.forEach(oemPiddata => {\n        pidRetVal.push({\n          pid: (oemPiddata[0] + (oemPiddata[1] << 8)),\n          buff: oemPiddata.slice(2)\n        })\n      })\n      dataRet.push({\n        eventId,\n        value: data,\n        data: {\n          data: null, raw: pidRetVal,\n          unit: '',\n          name: ENUM_EVENTTYPEDATA.OemPidData\n        }\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Fuel_Level_Low) {\n      dataRet.push({\n        eventId,\n        value: data[0],\n        name: ENUM_EVENTTYPEDATA.Fuel_Level_Low,\n        data: `${data[0] ? 'Low' : 'Normal'}`\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.Average_Speed) {\n      // 1.1.toFixed(1)\n      let a = _.slice(data, 0, 4)\n      a = parseEventData(a)\n\n\n      dataRet.push({\n        eventId,\n        value: a,\n        name: ENUM_EVENTTYPEDATA.Average_Speed,\n        data: `${a.toFixed(2)}`,\n        unit: 'km/h'\n      })\n      return dataRet\n    }\n    else if (eventId === ENUM_EVENTIDTYPES.NetworkScan_Data) {\n      data.pop()\n      dataRet.push({\n        eventId,\n        value: data,\n        name: ENUM_EVENTTYPEDATA.NetworkScan_Data\n      })\n      return dataRet\n    }\n\n    return [{\n      eventId,\n      value: data,\n      name: ENUM_EVENTTYPEDATA.Event_Unknow,\n      data: DataUtils.bytesToString(data)\n    }]\n  } catch (err) {\n    console.log('parserNotifyEvents ERROR', err)\n    return undefined\n  }\n}\n\n","/**\n * @Author: quocdo-macbook\n * @Date:   2020-11-06T22:46:24+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2022-01-26T15:24:01+07:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport * as ENUMs from '../standard/enums'\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as OBDUtil from './obdUtils'\nimport { isNullOrUndefined, isObject, debuglog } from 'util';\nimport * as DataParser from '../utilities/dataParser'\nimport { enumProtocol } from '../standard/enums';\nimport { ICOMMANDS, VCI_Data_Logging } from './vcistd';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class OBDSystem extends OBDx {\n\n\n    public async getECUVoltage() {\n\n        let ret = {BatteryVoltage:undefined,Unit:'V'}\n        const usbData = [0, 0]\n        try {\n      const batvol = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.tool,\n        stateid: ENUMVCIs.VCICmd_tool.getecuvoltage, usbData, nretry: 0, timeout: 300 //chang by ngoclb\n            })\n            let j = DataParser.bytesToString(batvol)\n      if (j.search(\"Battery Voltage\") > 0) {\n                var temp = JSON.parse(j.replace(\"Battery Voltage\", \"BatteryVoltage\"));\n                return temp as string;\n            }\n            let v = new Float32Array(new Uint8Array(batvol).buffer)[0];\n            if (!isNullOrUndefined(v)) {\n                return {BatteryVoltage:v.toFixed(2),Unit:'V'};\n            }\n        } catch (error) {\n          this.logdebug(\"getECUVoltage error:\" + error)\n        }\n        return ret\n    }\n\n    public async settingUnitType(unit_type) {\n      this.logdebug(\"Unit Selection:\" + unit_type)\n      const usbData = [...DataParser.numberToBytes(unit_type, 1)];\n      try {\n      const val = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.tool,\n          stateid: ENUMVCIs.VCICmd_tool.setting_unit, usbData\n        })\n      if (isNullOrUndefined(val)) {\n          return false;\n        }\n      else {\n          return true;\n        }\n      } catch (error) {\n      }\n      return true;\n    }\n\n    public async SettingLanguage(lang_id) {\n      this.logdebug(\"Language Selection:\" + lang_id)\n      const usbData = [...DataParser.numberToBytes(lang_id, 1)];\n      try {\n      const val = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.tool,\n          stateid: ENUMVCIs.VCICmd_tool.setting_language, usbData\n        })\n      if (isNullOrUndefined(val)) {\n          return false;\n        }\n      else {\n          return true;\n        }\n      } catch (error) {\n      }\n      return true;\n    }\n\n  public async Cancel_VCI_Process() {\n      try{\n        this.logdebug(\"Cancel Process...\")\n\n      }\n    catch (err) {\n\n      }\n    }\n\n    /**\n     * [SetLogFunction Set function id for data logging]\n     * @param  func_id [func_id based on VCI_Data_Logging]\n     * @return         [boolean]\n     */\n  public async SetLogFunction(func_id) {\n      try{\n        const usbData = [...DataParser.numberToBytes(ICOMMANDS.LogData.setfuncid.id, 1),...DataParser.numberToBytes(func_id, 1)];\n        this.logdebug(\"Set Function Log:\" + func_id)\n        const func = ICOMMANDS.LogData.setfuncid.options.find(o => o.value===func_id);\n        this.logdebug(\"Set Function Log:\" + func.text)\n        const { data } = await this.Link(\n          {\n            id:ICOMMANDS.LogData.id,\n            data: usbData\n          }\n          );\n        return true;\n      }\n    catch (err) {\n        this.logdebug(\"Set Function Log err:\" + err)\n        return false;\n      }\n    }\n\n    /**\n     * [StartLog Start Data Log]\n     * @return [boolean]\n     */\n  public async StartLog() {\n      try{\n        this.logdebug(\"Start Log\")\n        const usbData = [...DataParser.numberToBytes(ICOMMANDS.LogData.startlog.id, 1)];\n        await this.Link(\n          {\n            id:ICOMMANDS.LogData.id,\n            data: usbData\n          }\n          );\n        return true;\n      }\n      catch(err){\n        this.logdebug(\"Start Log err:\" + err)\n        return false;\n      }\n    }\n\n    /**\n     * [StopLog Stop data logging]\n     * @return [boolean]\n     */\n  public async StopLog() {\n      try{\n        this.logdebug(\"Stop Log\")\n        const usbData = [...DataParser.numberToBytes(ICOMMANDS.LogData.stoplog.id, 1)];\n        await this.Link(\n          {\n            id:ICOMMANDS.LogData.id,\n            data: usbData\n          }\n          );\n        return true;\n      }\n      catch(err){\n        this.logdebug(\"Stop Log err:\" + err)\n        return false;\n      }\n    }\n    /**\n     * [GetLog Get Log Data]\n     * @return [Logging data]\n     */\n  public async GetLog() {\n      try{\n        this.logdebug(\"Get Log\")\n        const usbData = [...DataParser.numberToBytes(ICOMMANDS.LogData.getlog_encrypt.id, 1)];\n        const { data } = await this.LinkMultiData(\n          {\n            id:ICOMMANDS.LogData.id,\n            data: usbData\n          }\n          );\n        return data;\n      }\n      catch(err){\n        this.logdebug(\"Get Log err:\" + err)\n        return null;\n      }\n    }\n\n\n\n    guidToBytes(guid) {\n      var bytes = [];\n      guid.split('-').map((number, index) => {\n        var bytesInChar = index < 3 ? number.match(/.{1,2}/g).reverse() :  number.match(/.{1,2}/g);\n        bytesInChar.map((byte) => { bytes.push(parseInt(byte, 16));})\n      });\n      return bytes;\n    }\n    /**\n     * [readGUID Function to read GUID]\n     * @return [string of GUID]\n     */\n    public async readGUID(){\n      try{\n        const { data } = await this.Link(ICOMMANDS.getGuid);\n        const guid = data.slice(0, 4).reverse().concat(data.slice(4,6).reverse()).concat(data.slice(6,8).reverse()).concat(data.slice(8))\n\n        let new_x= Array.from(guid, function (byte:any) {\n              return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n          }).join('').replace(/(.{8})(.{4})(.{4})(.{4})(.{12})/, \"$1-$2-$3-$4-$5\").toUpperCase();\n        this.logdebug('GUIID:' + new_x)\n        return new_x;\n      }\n      catch(err){\n        this.logdebug('Error when reading GUIID:' + err)\n        return null;\n      }\n    }\n    /**\n     * [writeGUID Function to write GUID]\n     * @param  guiid [string of guid]\n     * @return       [boolean]\n     */\n  public async writeGUID(guiid) {\n      try{\n        this.logdebug('Writing GUID:' + guiid)\n\n        const { data } = await this.Link(\n          {\n            id:ICOMMANDS.setGuid.id,\n            data: this.guidToBytes(guiid)\n          }\n          );\n\n        return true;\n      }\n    catch (err) {\n        this.logdebug('Error when writing GUIID:' + err)\n        return false;\n      }\n    }\n\n\n}\n","/**\n * @Author: quocdo-macbook\n * @Date:   2020-11-06T22:46:24+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2021-09-08T08:43:42+07:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as DataParser from './../utilities/dataParser'\nimport { enumInnovagroup } from '../standard/enums';\nimport { isNullOrUndefined } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GUI extends OBDx {\n  private gui_call_func = function(data:string){};\n  private that =null;\n  async gui_notice_disp()\n  {\n    try{\n      const data = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.gui,\n        stateid: ENUMVCIs.VCICmd_GUI.gui_lcd_display,\n      });\n\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n  }\n  async proc_enter_proc(proc_id, cmd_id)\n  {\n    try{\n      const usbData = [...DataParser.numberToBytes(proc_id, 2), ...DataParser.numberToBytes(cmd_id, 2)];\n      this.logdebug(\"Enter Process:\" + proc_id + \",cmd_id\"+ cmd_id);\n      const data = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.gui,\n        stateid: ENUMVCIs.VCICmd_GUI.gui_proc_enter,\n        usbData, nretry: 1, timeout: 1000\n      });\n      if(isNullOrUndefined(data))\n      {\n        return false;\n      }\n      else\n      {\n        return true;\n      }\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n  }\n\n  async proc_leave_proc()\n  {\n    try{\n\n      await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.gui,\n        stateid: ENUMVCIs.VCICmd_GUI.gui_proc_leave\n      });\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n  }\n\n  async proc_terminate_proc()\n  {\n    try{\n      await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.gui,\n        stateid: ENUMVCIs.VCICmd_GUI.gui_proc_terminate,\n        nretry: 0,\n        timeout: 500 // ngoclb: set timeout for this command\n      });\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n  }\n\n  async gui_set_key_code(keycode:number)\n  {\n    try{\n      const usbData = [...DataParser.numberToBytes(keycode, 2)];\n      this.logdebug('Set Keycode:'+keycode)\n      await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.gui,\n        stateid: ENUMVCIs.VCICmd_GUI.gui_set_key,\n          usbData,nretry:3\n      });\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n\n  }\n\n  async gui_set_key_code_with_index(keycode:number, index:number)\n  {\n    try{\n      const usbData = [...DataParser.numberToBytes(keycode, 2),\n      ...DataParser.numberToBytes(index, 4)];\n      this.logdebug('Set Keycode:'+keycode)\n      this.logdebug('Set Keyindex:'+index)\n      await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.gui,\n        stateid: ENUMVCIs.VCICmd_GUI.gui_set_key_with_index,\n          usbData,nretry:3\n      });\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n  }\n\n  async gui_proc_sf_at_set_active_module(system, subsystem)\n  {\n    const usbData = [...DataParser.numberToBytes(system, 2) ,\n      ...DataParser.numberToBytes(subsystem, 2) ] ;\n    this.logdebug('Set system:'+ system + ' ' + 'SubSystem:' + subsystem)\n    const data = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.gui,\n      stateid: ENUMVCIs.VCICmd_GUI.gui_set_special_at_module,\n      usbData, nretry: 1, timeout: 5000\n    });\n      if(isNullOrUndefined(data))\n      {\n      return false;\n    }\n      else\n      {\n      return true;\n    }\n  }\n\n  async gui_proc_enter_specialFunction_feature(group_id)\n  {\n    const usbData = [...DataParser.numberToBytes(ENUMVCIs.SYS_PROC_ID.PROC_SPECIAL_FUNCTION, 2),\n    ...DataParser.numberToBytes(ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC, 2),\n    ...DataParser.numberToBytes(group_id, 1)];\n    const data = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.gui,\n      stateid: ENUMVCIs.VCICmd_GUI.gui_proc_enter,\n      usbData, nretry: 1, timeout: 5000\n    });\n      if(isNullOrUndefined(data))\n      {\n      return false;\n    }\n      else\n      {\n      return true;\n    }\n  }\n  async gui_set_special_function_group(group_id)\n  {\n    return new Promise(async resolve =>{\n      try{\n        const usbData = [...DataParser.numberToBytes(group_id, 1)];\n        this.logdebug('Set Special Function Group:'+ group_id)\n        const data= await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.gui,\n          stateid: ENUMVCIs.VCICmd_GUI.gui_set_special_function_group,\n            usbData, timeout:1000\n        });\n        if(isNullOrUndefined(data))\n        {\n          return resolve(false);\n        }\n        else\n        {\n          return resolve(true);;\n        }\n      }\n      catch(err){\n        this.logdebug(err)\n        return resolve(false);\n      }\n    })\n\n\n\n  }\n\n  async set_param(type,param)\n  {\n    // { return new Promise( async (resolve,reject)=>{\n    //   let stt= false;\n    //   try{\n    //     await this.logdebug('Set Param:'+ param);\n    //     //this.logdebug('Type Param:'+ (typeof param));\n    //     let usbData=[]\n    //\n    //     switch(typeof param)\n    //     {\n    //       case 'number':\n    //         usbData = [...DataParser.numberToBytes(type, 1), ...DataParser.numberToBytes(param, 4)];\n    //       break;\n    //       case 'string':\n    //         usbData = [...DataParser.numberToBytes(type, 1), ...DataParser.stringToBytes(param)];\n    //       break;\n    //       default:\n    //       break;\n    //     }\n    //\n    //     await this.LinkVciCmd({\n    //         Procid: ENUMVCIs.VCIProg.gui,\n    //         stateid: ENUMVCIs.VCICmd_GUI.gui_set_param,\n    //         usbData,nretry:3\n    //     }).then(async (data)=>{\n    //       if(data== undefined||data==null)\n    //       {\n    //         await this.logdebug('set Param false')\n    //         stt=false;\n    //       }\n    //       else\n    //       {\n    //         await this.logdebug('set Param true')\n    //         stt = true;\n    //       }\n    //     })\n    //     await this.logdebug('Finish set option')\n    //\n    //     //return resolve(true);\n    //   }\n    //   catch(err)\n    //   {\n    //     this.logdebug(err);\n    //     return reject(Error('Error message'));\n    //     //return resolve(false);\n    //   }\n    //   return await resolve(stt);\n    // })\n  let stt= false;\n  try{\n    await this.logdebug('Set Param:'+ param);\n      //this.logdebug('Type Param:'+ (typeof param));\n    let usbData=[]\n\n    switch(typeof param)\n    {\n        case 'number':\n          usbData = [...DataParser.numberToBytes(type, 1), ...DataParser.numberToBytes(param, 4)];\n          break;\n        case 'string':\n          usbData = [...DataParser.numberToBytes(type, 1), ...DataParser.stringToBytes(param)];\n          break;\n        default:\n          break;\n      }\n\n      await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.gui,\n        stateid: ENUMVCIs.VCICmd_GUI.gui_set_param,\n        usbData,nretry:3\n    }).then(async (data)=>{\n      if(data== undefined||data==null)\n      {\n          await this.logdebug('set Param false')\n        stt=false;\n        }\n      else\n      {\n          await this.logdebug('set Param true')\n          stt = true;\n        }\n      })\n      await this.logdebug('Finish set option')\n\n      //return resolve(true);\n    }\n  catch(err)\n  {\n      this.logdebug(err);\n      //return reject(Error('Error message'));\n      //return resolve(false);\n    }\n    return stt;\n  }\n\n\n\n}\n","/**\n * @Author: quocdo-macbook\n * @Date:   2021-03-04T10:51:23+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2021-03-17T13:26:10+07:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as DataParser from './../utilities/dataParser'\nimport { enumInnovagroup } from '../standard/enums';\nimport { isNullOrUndefined } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Livedata extends OBDx {\n  async getOBD2_LiveDataListPIDsupport()\n  {\n    return await this.getlivedatapidsupport_group(enumInnovagroup.einnovagroup_GROUP_OBDII);\n\n  }\n\n  async getOBD2_LiveDataItem_Val(itemid)\n  {\n    return await this.getlivedata_itemval(enumInnovagroup.einnovagroup_GROUP_OBDII, itemid);\n  }\n\n  async getABS_LiveDataListPIDsupport()\n  {\n    return await this.getlivedatapidsupport_group_v2(enumInnovagroup.einnovagroup_GROUP_ABS);\n\n  }\n\n  async getABS_LiveDataItem_Val(itemid)\n  {\n    return await this.getlivedata_itemval_v2(enumInnovagroup.einnovagroup_GROUP_ABS, itemid);\n  }\n\n  async getECM_LiveDataListPIDsupport()\n  {\n    return await this.getlivedatapidsupport_group_v2(enumInnovagroup.einnovagroup_GROUP_ENH_ECM);\n\n  }\n\n  async getECM_LiveDataItem_Val(itemid)\n  {\n    return await this.getlivedata_itemval_v2(enumInnovagroup.einnovagroup_GROUP_ENH_ECM, itemid);\n  }\n\n  async getOther_LiveDataItem_Val(itemid)\n  {\n    return await this.getlivedata_itemval_v2(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW, itemid);\n  }\n\n  async getSRS_LiveDataListPIDsupport()\n  {\n    return await this.getlivedatapidsupport_group_v2(enumInnovagroup.einnovagroup_GROUP_SRS);\n\n  }\n\n  async getSRS_LiveDataItem_Val(itemid)\n  {\n    return await this.getlivedata_itemval_v2(enumInnovagroup.einnovagroup_GROUP_SRS, itemid);\n  }\n\n  async getECM_LiveDataNumberItemSupport()\n  {\n    return await this.getlivedata_numberpidsuppport_group_v2(enumInnovagroup.einnovagroup_GROUP_ENH_ECM);\n  }\n\n  async getSRS_LiveDataNumberItemSupport()\n  {\n    return await this.getlivedata_numberpidsuppport_group_v2(enumInnovagroup.einnovagroup_GROUP_SRS);\n  }\n\n  async getABS_LiveDataNumberItemSupport()\n  {\n    return await this.getlivedata_numberpidsuppport_group_v2(enumInnovagroup.einnovagroup_GROUP_ABS);\n  }\n\n  async getlivedatapidsupport_group(innovagroup){return new Promise(async resolve =>{\n    try {\n      const usbData = [...DataParser.numberToBytes(innovagroup, 1)];\n\n      this.logdebug('Checking item support ' + innovagroup);\n      const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.read_itemlist,\n        usbData, nretry: 1, timeout:30000\n      });\n      let j = DataParser.bytesToString(data)\n      this.logdebug(j);\n      return resolve(JSON.parse(j));\n    } catch (err) {\n      this.logdebug(err);\n      return resolve({});\n    }\n  });\n\n}\nasync getlivedata_itemval(innovagroup, itemid){\n  return new Promise(async resolve =>{\n    try {\n      const usbData = [...DataParser.numberToBytes(innovagroup, 1),...DataParser.numberToBytes(itemid, 2)];\n\n      this.logdebug('Checking item support '+ itemid);\n      const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.read_itemval,\n        usbData, nretry: 1, timeout:20000\n      });\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      //this.logdebug('item string:'+j);\n      return resolve(JSON.parse(j));\n    }\n    catch (err) {\n      this.logdebug(err);\n      return resolve({});\n    }\n  });\n\n}\n\nasync getlivedata_itemval_v2(innovagroup, itemid){\n  return new Promise(async resolve =>{\n    try {\n      const usbData = [...DataParser.numberToBytes(innovagroup, 1),...DataParser.numberToBytes(itemid, 2)];\n\n      this.logdebug('Checking item support '+ itemid);\n      const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.get_itemval_v2,\n        usbData, nretry: 1, timeout:20000\n      });\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      this.logdebug('item string:'+j);\n      return resolve(JSON.parse(j));\n    }\n    catch (err) {\n      this.logdebug(err);\n      return resolve({});\n    }\n  });\n\n}\n\ngetlivedata_list_itemval(innovagroup, start_idx, end_idx){\n    return new Promise(async resolve =>{\n      try {\n      //  let list_bytes = (new Uint8Array(list)).map(xx=>{return xx})\n        const usbData = [...DataParser.numberToBytes(innovagroup, 1),\n        ...DataParser.numberToBytes(start_idx, 1), ...DataParser.numberToBytes(end_idx, 1)];\n\n        this.logdebug('Checking item support list');\n        const data= await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.livedata,\n          stateid: ENUMVCIs.VCICmd_livedata.read_list_item_val,\n          usbData, nretry: 1, timeout:10000\n        });\n        let j = DataParser.bytesToString(data).split('\\n').join('-');\n        this.logdebug(start_idx+'-'+end_idx+':'+j);\n        return resolve(JSON.parse(j));\n      }\n      catch(err)\n      {\n        this.logdebug(err);\n        return resolve({});\n      }\n    })\n}\n\nasync getlivedata_list_itemval_v2(innovagroup, start_idx, end_idx){\n  return new Promise(async resolve =>{\n    try {\n      //  let list_bytes = (new Uint8Array(list)).map(xx=>{return xx})\n      const usbData = [...DataParser.numberToBytes(innovagroup, 1),\n      ...DataParser.numberToBytes(start_idx, 2), ...DataParser.numberToBytes(end_idx, 2)];\n\n      this.logdebug('Checking item support list');\n      const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.get_listitemval,\n        usbData, nretry: 1, timeout:10000\n      });\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      this.logdebug(start_idx+'-'+end_idx+':'+j);\n      return resolve(JSON.parse(j));\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return resolve({});\n    }\n  })\n}\n\ngetlivedata_hybrid()\n{\n  return new Promise(async resolve =>{\n    try{\n      const usbData = [];\n        //this.logdebug('Checking item info of:'+ itemid);\n        const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.start_hybrid_ld,\n        usbData, nretry: 1, timeout:5000\n      });\n\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n    //  this.logdebug('Checking item info of:' +itemid);\n      this.logdebug('Response info:' + j);\n      return resolve(JSON.parse(j));\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return resolve({});\n  }\n  })\n}\n\nasync getlivedata_listinfo(innovagroup, startid, stopid)\n{\n  return new Promise(async resolve =>{\n    try{\n      const usbData = [...DataParser.numberToBytes(innovagroup, 1),\n        ...DataParser.numberToBytes(startid, 2), ...DataParser.numberToBytes(stopid, 2)];\n        //this.logdebug('Checking item info of:'+ itemid);\n        const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.get_listiteminfo,\n        usbData, nretry: 1, timeout:10000\n      });\n\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      this.logdebug('Checking item info from:' +startid + 'to ' + stopid);\n      this.logdebug('Response info:' + j);\n      return resolve(JSON.parse(j));\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return resolve({});\n    }\n  })\n}\ngetlivedata_iteminfo(innovagroup, itemid){\n  return new Promise(async resolve =>{\n    try{\n      const usbData = [...DataParser.numberToBytes(innovagroup, 1),\n      ...DataParser.numberToBytes(itemid, 2)];\n      //this.logdebug('Checking item info of:'+ itemid);\n      const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.read_item_info,\n        usbData, nretry: 1, timeout:5000\n      });\n\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      this.logdebug('Checking item info of:' +itemid);\n      this.logdebug('Response info:' + j);\n      return resolve(JSON.parse(j));\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return resolve({});\n    }\n  })\n}\n\ngetlivedata_hybrid_info()\n{\n  return new Promise(async resolve =>{\n    try{\n      const usbData = [];\n        //this.logdebug('Checking item info of:'+ itemid);\n        const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.start_hybrid_ld,\n        usbData, nretry: 1, timeout:5000\n      });\n\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      //this.logdebug('Checking item info of:' +itemid);\n      this.logdebug('Response info:' + j);\n      return resolve(JSON.parse(j));\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return resolve({});\n    }\n  })\n}\n\nenable_dtc_trigger()\n{\n  return new Promise(async resolve =>{\n    try{\n      const usbData = [];\n        //this.logdebug('Checking item info of:'+ itemid);\n        const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.set_record_dtc_trigger,\n        usbData, nretry: 1, timeout:5000\n      });\n\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      //this.logdebug('Checking item info of:' +itemid);\n      this.logdebug('Response info:' + j);\n      return resolve(JSON.parse(j));\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return resolve({});\n    }\n  })\n}\n\ndisable_dtc_trigger()\n{\n  return new Promise(async resolve =>{\n    try{\n      const usbData = [];\n        //this.logdebug('Checking item info of:'+ itemid);\n        const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.reset_record_dtc_trigger,\n        usbData, nretry: 1, timeout:5000\n      });\n\n      let j = DataParser.bytesToString(data).split('\\n').join('-');\n      //this.logdebug('Checking item info of:' +itemid);\n      this.logdebug('Response info:' + j);\n      return resolve(JSON.parse(j));\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return resolve({});\n    }\n  })\n}\n\n/*Live Data Version 2 support over 200 Pids*/\nasync getlivedata_numberpidsuppport_other(system,subsystem)\n{\n  return new Promise(async resolve =>{\n    try {\n      const usbData = [...DataParser.numberToBytes(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW, 1),\n        ...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subsystem, 2)];\n\n      this.logdebug('Checking item of system ' + system + ' and subSystem ' + subsystem);\n      const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.check_getnumpid_group,\n        usbData, nretry: 1, timeout:30000\n      });\n      let j = DataParser.bytesToString(data)\n      this.logdebug(j);\n      const res = JSON.parse(j);\n\n      return resolve(res);\n    } catch (err) {\n      this.logdebug(err);\n      return resolve({});\n    }\n  });\n}\n\n\nasync getlivedata_numberpidsuppport_group_v2(innovagroup)\n{\n  return new Promise(async resolve =>{\n    try {\n      const usbData = [...DataParser.numberToBytes(innovagroup, 1)];\n\n      this.logdebug('Checking item support ' + innovagroup);\n      const data= await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.livedata,\n        stateid: ENUMVCIs.VCICmd_livedata.check_getnumpid_group,\n        usbData, nretry: 1, timeout:30000\n      });\n      let j = DataParser.bytesToString(data)\n      this.logdebug(j);\n      let res = JSON.parse(j);\n      if(isNullOrUndefined(res))\n      {\n        res = { Number:0};\n      }\n      return resolve(res);\n    } catch (err) {\n      this.logdebug(err);\n      return resolve({});\n    }\n  });\n}\n\nasync getlivedatapidsupport_group_v2(innovagroup){return new Promise(async resolve =>{\n  try {\n    const usbData = [...DataParser.numberToBytes(innovagroup, 1)];\n\n    this.logdebug('Checking item support ' + innovagroup);\n    const data= await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.livedata,\n      stateid: ENUMVCIs.VCICmd_livedata.check_getnumpid_group,\n      usbData, nretry: 1, timeout:30000\n    });\n    let j = DataParser.bytesToString(data)\n    this.logdebug(j);\n    const ls_pid = JSON.parse(j);\n    let ls_item = ls_pid[\"Number\"];\n    let new_list_info = [];\n    for (let id=0; id< ls_item;id+=15)\n    {\n      const ls_info = await this.getlivedata_listinfo(innovagroup, id, id+14>ls_item?ls_item-1:id+14)\n      new_list_info.push(...ls_info[\"ListItem\"]);\n    }\n    // for(const item of ls_item)\n    // {\n    //   const info = await this.getlivedata_iteminfo(innovagroup, item);\n    //   new_list_info.push(info[\"ListItem\"][0]);\n    // }\n    let res = {\n      Group: innovagroup,\n      ListItem: new_list_info\n    }\n    return resolve(res);\n  } catch (err) {\n    this.logdebug(err);\n    return resolve({});\n  }\n});\n\n}\n\n// getlivedata_list_itemval(innovagroup, ...list: number[]){\n//   return new Promise(async resolve =>{\n//     try {\n//     //  let list_bytes = (new Uint8Array(list)).map(xx=>{return xx})\n//       const usbData = [...DataParser.numberToBytes(innovagroup, 1),...list];\n//\n//       this.logdebug('Checking item support list');\n//       const data= await this.LinkVciCmd({\n//         Procid: ENUMVCIs.VCIProg.livedata,\n//         stateid: ENUMVCIs.VCICmd_livedata.read_itemval,\n//         usbData, nretry: 1, timeout:10000\n//       });\n//       let j = DataParser.bytesToString(data).split('\\n').join('-');\n//       this.logdebug('item string:'+j);\n//       return resolve(JSON.parse(j));\n//     }\n//     catch(err)\n//     {\n//       this.logdebug(err);\n//       return resolve({});\n//     }\n//   })\n// }\n}\n","/**\n * @Author: quocdo-macbook\n * @Date:   2020-11-06T22:46:24+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2022-01-26T15:03:18+07:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport * as ENUMs from './../standard/enums'\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as OBDUtil from './obdUtils'\nimport { isNullOrUndefined, isObject } from 'util';\nimport * as DataParser from './../utilities/dataParser'\nimport { enumProtocol } from './../standard/enums';\n// import * from './../standard/enums';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class NWSCAN extends OBDx {\n\n    async setVinString(VinString) {\n        try {\n      this.logdebug(\"Input VIN:\" + VinString);\n            if (_.isEmpty(VinString) || VinString.length != 0x11) { return false; }\n            const usbData = DataParser.stringToBytes(VinString) || []\n            await this.LinkVciCmd({\n                Procid: ENUMVCIs.VCIProg.systemdata,\n                stateid: ENUMVCIs.VCICmd_system.setvin,\n                usbData: [0x11, 0x00, ...usbData],\n                nretry: 2, timeout: 3000\n            });\n            return true;\n        } catch (err) {\n            return false;\n        }\n    }\n\n\n    async setYmmeProfile(ymmeprofile = {\n        manufacture_enum: undefined,\n        year_enum: undefined,\n        make_enum: undefined,\n        model_enum: undefined,\n        engine_enum: undefined,\n        trim_enum: undefined,\n        option_enum: undefined,\n        transmission_enum: undefined\n    }) {\n        // const usbArgs = [ENUMVCIs.VCICmd_system.setymme];\n        const usbData = [\n            ...DataParser.numberToBytes(512, 2),\n            ...DataParser.numberToBytes(0xaa, 1),//1\n            ...DataParser.numberToBytes(ymmeprofile.manufacture_enum, 2),\n            ...DataParser.numberToBytes(ymmeprofile.year_enum, 2),\n            ...DataParser.numberToBytes(ymmeprofile.make_enum, 2),\n            ...DataParser.numberToBytes(ymmeprofile.model_enum, 2),\n            ...DataParser.numberToBytes(ymmeprofile.trim_enum || 0xffff, 2),\n            ...DataParser.numberToBytes(ymmeprofile.option_enum || 0xffff, 2),\n            ...DataParser.numberToBytes(ymmeprofile.engine_enum || 0xff, 2),\n            ...DataParser.numberToBytes(ymmeprofile.transmission_enum || 0xffff, 2),\n        ]\n        try {\n            const result = await this.LinkVciCmd({\n                Procid: ENUMVCIs.VCIProg.systemdata,\n                stateid: ENUMVCIs.VCICmd_system.setymme,\n                usbData,\n                nretry: 1\n            });\n            const [status] = result;\n            return (status === 0xaa)\n        } catch (error) {\n            return false\n        }\n    }\n\n    async getYMMEProfile() {\n        // const usbArgs = [];\n        const usbData = [0, 0]\n        try {\n            const result = await this.LinkVciCmd({\n                Procid: ENUMVCIs.VCIProg.systemdata,\n                stateid: ENUMVCIs.VCICmd_system.getymme,\n                usbData,\n                nretry: 2\n            });\n            this.logdebug(result)\n            return result\n        } catch (error) {\n            return undefined\n        }\n    }\n\n    getSupportedOEMModules() {\n        return new Promise(async resolve => {\n            try {\n                //const progID = [0x04, 0x00];\n                // const usbArgs = [0x03, 0xee];\n                //const usbArgs = [0x03];//Version firmware from .12\n                // const usbData = [];\n                const modules = [];\n\n                this.logdebug('Reading supported OEM modules');\n\n                const data = await this.LinkVciCmd({\n                    Procid: ENUMVCIs.VCIProg.oem,\n                    stateid: 3, usbData: [0xee],\n                    nretry: 1, timeout: 10000\n                });\n                const getGroupName = a => {\n                    try {\n                        return ENUMVCIs.EnumInnovaGroups[a];\n                    } catch (ex) {\n                        return `Unknown Group : ${a}`;\n                    }\n                };\n                const getInspecGroupName = a => {\n                    try {\n                        return ENUMVCIs.EnumInspectionGroups[a];\n                    } catch (ex) {\n                        return `Unknown Group : ${a}`;\n                    }\n                };\n                let temp = DataParser.bytesToString(data);\n                //this.logdebug(temp);\n                const objSystem = JSON.parse(temp);\n        this.logdebug(\"OEM Modules:\" + DataParser.ObjtoStringBeauty(objSystem.data));\n                if (_.isObject(objSystem)) {\n                    if (objSystem && objSystem.data.length > 0) {\n\n                        objSystem.data.forEach(obj => {\n                            //const { System: system, SubSystem: subsystem, ModuleName: modulename, InnovaGroup: group } = obj;\n\n              modules.push({ System: obj[0] as number, SubSystem: obj[1] as number, ModuleName: obj[2] as string, InnovaGroup: obj[3] as number, groupName: getGroupName(obj[3] as number), inspecGroup: getInspecGroupName(obj[4] as number) });\n                        });\n                        return resolve({ raw: null, data: modules });\n                    }\n                }\n\n                // parse data to get the list of suppurted system and subsystem\n                let index = 0;\n                const nSystem = data[index++];\n                for (let sysIndex = 0; sysIndex < nSystem; sysIndex++) {\n                    const systemId = DataParser.bytesToInt([data[index++], data[index++]], 2, 0);\n                    const nSubSystem = data[index++];\n\n                    for (let subIndex = 0; subIndex < nSubSystem; subIndex++) {\n                        const LB = data[index++];\n                        const HB = data[index++];\n                        // const bInnovaGroup = data[index++];\n                        const bInnovaGroup = 0xFF;\n                        const subSystemId = DataParser.bytesToInt([LB, HB], 2, 0);\n                        modules.push({\n                            system: systemId,\n                            subsystem: subSystemId,\n                            innovagroup: bInnovaGroup,\n                            groupName: getGroupName(bInnovaGroup),\n                        });\n                    }\n                }\n\n                return resolve({ raw: modules, data: null });\n            } catch (err) {\n                return resolve({});\n            }\n        });\n    }\n\n  eraseOEMSystem({ system, subSystem }) {\n        return new Promise(async resolve => {\n            try {\n                // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n                const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2)];\n\n                this.logdebug(`Erasing oem module ${system} ${subSystem}`);\n                const data = await this.LinkVciCmd({\n                    Procid: ENUMVCIs.VCIProg.oem,\n                    stateid: ENUMVCIs.VCICmd_nwscan.erasedtcsystem,\n                    usbData\n                });\n\n        if (data === undefined) {\n          return resolve({ Erase_Dtc: \"Sent\" })\n                }\n        else {\n          return resolve({ Erase_Dtc: \"OK\" })\n                }\n      } catch (err) {\n                return resolve({});\n            }\n        })\n    }\n\n  async QueryOEMSystem({ system, subSystem }) {\n        return new Promise(async resolve => {\n            try {\n                // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n                const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2)];\n\n                this.logdebug(`query oem module ${system} ${subSystem}`);\n                const data = await this.LinkVciCmd({\n                    Procid: ENUMVCIs.VCIProg.oem,\n                    stateid: ENUMVCIs.VCICmd_nwscan.querysystem,\n                    usbData\n                });\n\n        if (data === undefined) {\n          return resolve({ Status: \"Fail\" })\n                }\n        else {\n          return resolve({ Status: \"OK\" })\n                }\n      } catch (err) {\n                return resolve({});\n            }\n        })\n    }\n\n  async ExitOEMSystem({ system, subSystem }) {\n        return new Promise(async resolve => {\n            try {\n                // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n                const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2)];\n\n                this.logdebug(`exit oem module ${system} ${subSystem}`);\n                const data = await this.LinkVciCmd({\n                    Procid: ENUMVCIs.VCIProg.oem,\n                    stateid: ENUMVCIs.VCICmd_nwscan.exitsystem,\n                    usbData\n                });\n\n        if (data === undefined) {\n          return resolve({ Status: \"Fail\" })\n                }\n        else {\n          return resolve({ Status: \"OK\" })\n                }\n      } catch (err) {\n                return resolve({});\n            }\n        })\n    }\n\n\n\n  async getOEMSystem_quick({ system, subSystem }) {\n      return new Promise(async resolve => {\n          try {\n              // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n              const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2)];\n              const modules = [];\n        const getInspecGroup = a => {\n                  try {\n                      return ENUMVCIs.EnumInspectionGroups[a];\n                  } catch (ex) {\n                      return `Unknown Group : ${a}`;\n                  }\n              };\n              this.logdebug(`Reading oem module ${system} ${subSystem} quickly`);\n              const rawbuff = await this.LinkVciCmd({\n                  Procid: ENUMVCIs.VCIProg.oem,\n                  stateid: ENUMVCIs.VCICmd_nwscan.quick_readsystem,\n                  usbData, nretry: 3, timeout: 10000\n              });\n        if (isNullOrUndefined(rawbuff)) {\n                return resolve(null);\n              }\n              const objSystem = DataParser.readbleToJSON(rawbuff)\n              await this.logdebug(objSystem);\n        if (_.isObject(objSystem)) {\n\n          if (Object.keys(objSystem).includes(\"Dtcs\")) {\n            const { ModuleName: modulename, InspecGroup: inspec_gr, Dtcs, InvalidDTC } = objSystem;\n            await Dtcs.forEach(obj => {\n              const { 0: DTCCode, 1: type } = obj;\n                    modules.push(\n                      {\n                  code: DTCCode, type: type\n                      }\n                    )\n                  })\n                  return resolve({\n                      data: {\n                          system, subSystem,\n                          modulename,\n                InspecGroup: getInspecGroup(inspec_gr),\n                          Dtcs: modules,\n                          IsInvalidDTC: InvalidDTC\n                      }\n                  });\n                }\n          else if (Object.keys(objSystem).includes(\"Status\")) {\n            const { ModuleName: modulename, Status: status } = objSystem;\n                  return resolve({\n                      error: {\n                          system, subSystem,\n                          modulename,\n                Status: ENUMVCIs.Enum_Nws_Link_Status[status]\n                      }\n                  });\n                }\n\n              }\n              return resolve({ raw: rawbuff })\n          } catch (err) {\n        this.logdebug(`Reading oem module ${system} ${subSystem}:` + err);\n              return resolve({});\n          }\n      });\n    }\n\n  getDtc_listInspecGroup({ system, subSystem, id }) {\n      return new Promise(async resolve => {\n          try {\n              // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n\n        const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2), ...DataParser.numberToBytes(id, 2)];\n              const modules = [];\n              this.logdebug(`Getting dtc def ${system} ${subSystem} id: ${id} `);\n              const rawbuff = await this.LinkVciCmd({\n                  Procid: ENUMVCIs.VCIProg.oem,\n                  stateid: ENUMVCIs.VCICmd_nwscan.get_dtc_listinspec,\n                  usbData, nretry: 3, timeout: 10000\n              });\n\n              const objSystem = DataParser.readbleToJSON(rawbuff)\n\n              //this.logdebug(objSystem);\n        if (_.isObject(objSystem)) {\n          const { 0: dtc, 1: type, 2: list } = objSystem;\n                  this.logdebug('response of getting dtc group' + DataParser.getStringOfObj(objSystem))\n                  return resolve({\n                      code: dtc,\n                      type: type,\n                      list: list\n                  });\n              }\n\n              return resolve({ raw: rawbuff })\n          } catch (err) {\n              return resolve({});\n          }\n      });\n    }\n\n  getDtcdef_withgroup({ system, subSystem, id, group }) {\n      return new Promise(async resolve => {\n          try {\n              // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n              const groupid = Object.keys(ENUMVCIs.EnumInspectionGroups).find(key => ENUMVCIs.EnumInspectionGroups[key] === group);\n        const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2), ...DataParser.numberToBytes(id, 2), ...DataParser.numberToBytes(groupid, 1)];\n              const modules = [];\n              this.logdebug(`Getting dtc def ${system} ${subSystem} id: ${id} group: ${group} `);\n              const rawbuff = await this.LinkVciCmd({\n                  Procid: ENUMVCIs.VCIProg.oem,\n                  stateid: ENUMVCIs.VCICmd_nwscan.get_dtc_def,\n                  usbData, nretry: 3, timeout: 5000\n              });\n\n              const objSystem = DataParser.readbleToJSON(rawbuff)\n              //this.logdebug(objSystem);\n        if (_.isObject(objSystem)) {\n          const { 0: dtc, 1: type, 2: def } = objSystem;\n\n                  return resolve({\n                      code: dtc,\n                      type: type,\n            def: def\n                  });\n              }\n\n              return resolve({ raw: rawbuff })\n          } catch (err) {\n              return resolve({});\n          }\n      });\n    }\n\n  getDtcdef({ system, subSystem, id }) {\n      return new Promise(async resolve => {\n          try {\n              // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n        const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2), ...DataParser.numberToBytes(id, 2), ...DataParser.numberToBytes(255, 1)];\n              const modules = [];\n              this.logdebug(`Getting dtc def ${system} ${subSystem} id: ${id} `);\n              const rawbuff = await this.LinkVciCmd({\n                  Procid: ENUMVCIs.VCIProg.oem,\n                  stateid: ENUMVCIs.VCICmd_nwscan.get_dtc_def,\n                  usbData, nretry: 3, timeout: 5000\n              });\n\n              const objSystem = DataParser.readbleToJSON(rawbuff)\n              //this.logdebug(objSystem);\n        if (_.isObject(objSystem)) {\n          const { 0: dtc, 1: type, 2: def } = objSystem;\n\n                  return resolve({\n                      code: dtc,\n                      type: type,\n            def: def\n                  });\n              }\n\n              return resolve({ raw: rawbuff })\n          } catch (err) {\n              this.logdebug('Get def issue')\n              return resolve({});\n          }\n      });\n    }\n  getOEMSystem({ system, subSystem }) {\n        return new Promise(async resolve => {\n            try {\n                // const usbArgs = [0x05].concat(DataParser.numberToBytes(system, 2), DataParser.numberToBytes(subSystem, 2));\n                const usbData = [...DataParser.numberToBytes(system, 2), ...DataParser.numberToBytes(subSystem, 2)];\n                const modules = [];\n                this.logdebug(`Reading oem module ${system} ${subSystem}`);\n                const rawbuff = await this.LinkVciCmd({\n                    Procid: ENUMVCIs.VCIProg.oem,\n                    stateid: ENUMVCIs.VCICmd_nwscan.readdtsystem,\n                    usbData, nretry: 1, timeout: 20000\n                });\n\n                const objSystem = DataParser.readbleToJSON(rawbuff)\n                this.logdebug(objSystem);\n        if (_.isObject(objSystem)) {\n                    const { System: system, SubSystem: subsystem, ModuleName: modulename, Dtcs, InvalidDTC, BodyInfo } = objSystem;\n                    objSystem.Dtcs.forEach(obj => {\n            const { 0: DTCCode, 1: type, 2: def } = obj;\n                        modules.push(\n                            {\n                code: DTCCode, type: type, definition: def\n                            }\n                        )\n                    })\n                    return resolve({\n                        data: {\n                            system, subsystem,\n                            modulename,\n                            Dtcs: modules,\n                            InvalidDTC: !!InvalidDTC\n                        }\n                    });\n                }\n\n                /*\n                if (_.isObject(objSystem)) {\n                    const { System: system, SubSystem: subsystem, ModuleName: modulename, Dtcs, InvalidDTC, BodyInfo } = objSystem;\n                    let MapInfo = BodyInfo\n                    if (BodyInfo) {\n                        MapInfo = BodyInfo.sort((x, y) => {\n                            try {\n                                return x.Option - y.Option\n                            } catch (err) {\n                                return 0\n                            }\n                        }).map(optionx => {\n                            const dtcMap = (optionx.Dtcs || []).map(r => {\n                                return {\n                                    ...r,\n                                    definition: _.get(r, 'def'),\n                                };\n                            })\n                            return {\n                                ...optionx,\n                                Dtcs: dtcMap\n                            }\n                        })\n                    }\n                    const mapDtcs = (Dtcs || []).map(r => {\n                        return {\n                            ...r,\n                            definition: _.get(r, 'def'),\n                        };\n                    });\n                    return resolve({\n                        data: {\n                            system, subsystem,\n                            modulename,\n                            Dtcs: mapDtcs,\n                            InvalidDTC: !!InvalidDTC,\n                            BodyInfo: MapInfo\n                        }\n                    });\n                }*/\n\n                return resolve({ raw: rawbuff })\n            } catch (err) {\n                return resolve({});\n            }\n        });\n    }\n\n    configJsonReport(isEnable = true) {\n        return new Promise(async resolve => {\n            const usbArgs = [0x00];\n            const usbData = [];\n            try {\n                await this.LinkVciCmd(\n                    {\n                        Procid: (isEnable ? ENUMVCIs.VCIProg.enable_jsonfmt : ENUMVCIs.VCIProg.disable_jsonfmt),\n                        stateid: 0,\n                        usbData,\n                        nretry: 1\n                    }\n                );\n                return resolve(true);\n            } catch (error) {\n                console.log(error);\n                return resolve(false);\n            }\n        });\n    }\n\n    async configJsonDTCDef(isEnable = true) {\n        try {\n            const usbArgs = [0x00];\n            const usbData = [];\n            return await this.LinkVciCmd(\n                {\n                    Procid: (isEnable ? ENUMVCIs.VCIProg.enable_jsonfmt_def : ENUMVCIs.VCIProg.disable_jsonfmt_def),\n                    stateid: 0,\n                    usbData,\n                    nretry: 1\n                }\n            );\n        } catch (err) {\n            return false;\n        }\n    }\n  getInnovaGroupDtc(group: ENUMs.enumInnovagroup) {\n        return new Promise(async resolve => {\n            try {\n                const usbData = [...DataParser.numberToBytes(group, 1)];\n                const getGroupName = a => {\n                    try {\n                        return ENUMVCIs.EnumInnovaGroups[a];\n                    } catch (ex) {\n                        return `Unknown Group : ${a}`;\n                    }\n                };\n                this.logdebug('Reading dtc of ' + getGroupName(group));\n        const data = await this.LinkVciCmd({\n                    Procid: ENUMVCIs.VCIProg.oem,\n                    stateid: ENUMVCIs.VCICmd_nwscan.readdtcgroup,\n                    usbData,\n                    nretry: 2, timeout: 3000\n                });\n                return resolve(DataParser.bytesToString(data));\n      } catch (err) {\n                this.logdebug(err);\n                return resolve({});\n            }\n        })\n    }\n    parser(data) {\n        this.logdebug(data)\n    }\n\n\n}\n\nexport { enumProtocol }\n","import { CommandService } from './../command/command.service'\nimport { NotifyService } from './../utilities/notify.service'\nimport * as DataParser from './../utilities/dataParser'\nimport { isArray, isString, isNullOrUndefined } from 'util';\nimport { Injectable } from '@angular/core';\nimport * as ENUMVCIs from './vcistd'\nimport * as ENUMs from './../standard/enums'\nimport { VCIProg, EnumVCIProcStates, VCICmd_obd2, VCICmd_nwscan, VCICmd_system,VCICmd_Unsolicited_msg, ICOMMANDS, USBHIDCommand_64 } from './vcistd'\nimport * as _ from 'lodash';\n@Injectable({\n    providedIn: 'root'\n})\n\n\nexport abstract class OBDx {\n    private is_initializing = false;\n    constructor(private VCICmd: CommandService, private notifier: NotifyService) {\n\n    }\n\n    // modified by ngoclb, force return boolean for this function\n    public async initialize(sleepMs = 0) {\n      if (this.is_initializing) return false;\n      this.is_initializing = true;\n      this.VCICmd.ResetListenerData();\n      try {\n        if (sleepMs) {\n            await this.sleep(sleepMs);\n        }\n        // await this.getInfo()\n        await this.setReableFormat(true)\n      } catch (err) {\n        this.logdebug(\"setReableFormat error:\" + err.message);\n        this.is_initializing = false;\n        return false;\n      }\n      this.is_initializing = false;\n      return true;\n    }\n\n    public async cancel_vci_process()\n    {\n      try{\n        this.logdebug(\"cancel vci process\")\n        const data = await this.LinkVciCmd({\n            Procid: VCIProg.unsolicited_msg,\n            stateid: VCICmd_Unsolicited_msg.msg_cancel,\n            nretry: 0,\n            timeout: 200 // ngoclb: change timeout\n        });\n        await this.EnableFastCancel();\n        return data;\n      }\n      catch(err)\n      {\n        this.logdebug(\"cancel vci process:\" + err);\n      }\n    }\n\n    // modified by ngoclb, also get tooid in this function\n    public async getInfo() {\n        let ret = { productid: -1, main: '', boot: '', db: '' }\n\n        const { data, error } = await this.Link(ICOMMANDS.getUsbProductId);\n        if (!data) {\n          ret = _.set(ret, \"error\", error.message ? error.message : error)\n        } else {\n          const pid = DataParser.bytesToInt(data, 2, 0)\n          ret = _.set(ret, \"productid\", pid)\n        }\n        //main:xxx , boot:xxx\n        let v = await this.LinkVciCmd({ Procid: VCIProg.systemdata, stateid: VCICmd_system.getversion });\n        v = (_.chunk(v, 16) || []);\n        const [_m, _b,_d] = v\n        if (!isNullOrUndefined(_m)) {\n            ret = _.set(ret, \"main\", DataParser.bytesToString(_m))\n        }\n        if (!isNullOrUndefined(_b)) {\n            ret = _.set(ret, \"boot\", DataParser.bytesToString(_b))\n        }\n        if (!isNullOrUndefined(_d)) {\n            ret = _.set(ret, \"db\", DataParser.bytesToString(_d))\n        }\n        return ret;\n    }\n    async setReableFormat(status) {\n        const { data, error } = await this.Link({\n            // ...ICOMMANDS.setResponseFormat,\n            id: ICOMMANDS.setResponseFormat.id,\n            data: [status ? 1 : 0],\n            nretry: 0, timeout: 300 });\n        if (error) {\n          throw new Error(error.message);\n        }\n        if (status) {\n            await this.LinkVciCmd({ Procid: VCIProg.enable_jsonfmt, stateid: 0 })\n            await this.LinkVciCmd({ Procid: VCIProg.enable_jsonfmt_def, stateid: 0 })\n        }\n        else {\n            await this.LinkVciCmd({ Procid: VCIProg.disable_jsonfmt, stateid: 0 })\n            await this.LinkVciCmd({ Procid: VCIProg.disable_jsonfmt_def, stateid: 0 })\n        }\n    }\n\n    // added by ngoclb\n    private async sleep(ms) {\n      return new Promise(resolve => {\n        setTimeout(resolve, ms)\n      });\n    }\n\n    async LinkVciCmd(cmdInfo: { Procid, stateid, usbData?: Array<Number>, nretry?: Number, timeout?: Number }) {\n        const { Procid, stateid, usbData = [], nretry = 3, timeout = 2000 } = cmdInfo\n\n        let procdata = DataParser.arrayFromNumber(Procid, 2);\n        let statedata = DataParser.arrayFromNumber(stateid, 1);\n        const usbCommandHeader = [0x04, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00];\n        const respdata = await this.Link({\n            id: 0x80,\n            data: [].concat(usbCommandHeader, procdata, statedata, usbData),\n            nretry,\n            timeout\n        })\n        const { data } = respdata\n        // this.logdebug(`vci link res: ${data}`)\n        if (isNullOrUndefined(data)) {\n            return undefined;\n        }\n        const [b0, b1, b2, b3, status, ...vcidata] = data;\n        if (status == 0xAA) return vcidata\n        if (status == 0x11 && stateid == ENUMVCIs.VCICmd_obd2.Erase_Dtc) {\n            const [ERASE_STATUS, ERR_CODE, ...restvcidata] = vcidata\n            const ERASE_ERR_CODE = {\n                0x00: \"OBD2_ERASE_STT_NONE\",\n                0x01: \"OBD2_ERASE_STT_SUCCESS\",\n                0x02: \"OBD2_ERASE_STT_NEGATIVE\",\n                0x03: \"OBD2_ERASE_STT_NO_RESPONSE\",\n                0x04: \"OBD2_ERASE_STT_NEGATIVE_22\",\n                0xFF: \"OBD2_ERASE_STT_UNKNOWN\"\n            }\n            // this.logdebug(`vci link check: ${ERR_CODE}`)\n            // this.logdebug(`vci link check: ${ERASE_ERR_CODE[ERR_CODE]}`)\n            return {\n                status: \"Erase fail\",\n                error: ERASE_ERR_CODE[ERR_CODE]\n            }\n        }\n        return undefined;\n    }\n\n    async LinkHIDUSBCmd(cmdInfo: { cmd: Number, vehicleIdx?: Number, MaxNumBuff: Number, nretry?: Number, timeout?: Number }) {\n        try {\n            const { cmd, vehicleIdx = 0, nretry = 3, timeout = 4000, MaxNumBuff } = cmdInfo\n            const usbData = [cmd, vehicleIdx, 0]\n            const usbCommandHeader = [0x04, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00];\n            let ret = []\n            const __flink = async (idx, MaxNumBuff) => {\n\n                if (idx >= MaxNumBuff)\n                    return ret;\n\n                const t = await this.Link({\n                    id: 0x80,\n                    data: [].concat(usbCommandHeader, [0,cmd], [idx], [0, 0, 0,0,0]),\n                    nretry,\n                    timeout\n                }) || []\n                ret.push({bufferIndex:idx,...t})\n\n                return await __flink(idx + 1, MaxNumBuff)\n            }\n            return await __flink(0, MaxNumBuff)\n        } catch (errorcode) {\n            return []\n        }\n    }\n\n    public async getToolReportBuffer(reportConfig: {\n        isVEHICLE_DATA_YMME_PROFILE?: Boolean,\n        isVEHICLE_DATA_OBD2_LD_SID1_BUFF?: Boolean,\n        isVEHICLE_DATA_OBD2_FF_SID2_BUFF?: Boolean,\n        isVEHICLE_DATA_OBD2_DTC_SID37A_BUFF?: Boolean,\n        isVEHICLE_DATA_OBD2_SPECIALTEST_SID568_BUFF?: Boolean,\n        isVEHICLE_DATA_OBD2_VEHINFO_SID9_BUFF?: Boolean,\n        isVEHICLE_DATA_OBD2_RECORED_LD_BUFF?: Boolean,\n        isVEHICLE_DATA_OEM_MODULE_BUFF?: Boolean,\n    }) {\n        const returndata = {\n            YMME_PROFILE: [],\n            OBD2_LD_SID1_BUFF: [],\n            OBD2_FF_SID2_BUFF: [],\n            OBD2_DTC_SID37A_BUFF: [],\n            OBD2_SPECIALTEST_SID568_BUFF: [],\n            OBD2_VEHINFO_SID9_BUFF: [],\n            OBD2_RECORED_LD_BUFF: [],\n            OEM_MODULE_BUFF: [],\n        };\n\n        if (reportConfig.isVEHICLE_DATA_YMME_PROFILE) {\n            returndata.YMME_PROFILE = await this.getVehReport_YMME_PROFILE();\n        }\n\n        if (reportConfig.isVEHICLE_DATA_OBD2_LD_SID1_BUFF) {\n            returndata.OBD2_LD_SID1_BUFF = await this.getVehReport_OBD2_LD_SID1_BUFF()\n        }\n\n        if (reportConfig.isVEHICLE_DATA_OBD2_FF_SID2_BUFF) {\n            returndata.OBD2_FF_SID2_BUFF = await this.getVehReport_OBD2_FF_SID2_BUFF()\n        }\n\n        if (reportConfig.isVEHICLE_DATA_OBD2_DTC_SID37A_BUFF) {\n            returndata.OBD2_DTC_SID37A_BUFF = await this.getVehReport_OBD2_DTC_SID37A_BUFF()\n        }\n\n        if (reportConfig.isVEHICLE_DATA_OBD2_SPECIALTEST_SID568_BUFF) {\n            returndata.OBD2_SPECIALTEST_SID568_BUFF = await this.getVehReport_OBD2_SPECIALTEST_SID568_BUFF()\n        }\n\n        if (reportConfig.isVEHICLE_DATA_OBD2_VEHINFO_SID9_BUFF) {\n            returndata.OBD2_VEHINFO_SID9_BUFF = await this.getVehReport_OBD2_VEHINFO_SID9_BUFF()\n        }\n\n        if (reportConfig.isVEHICLE_DATA_OBD2_RECORED_LD_BUFF) {\n            returndata.OBD2_RECORED_LD_BUFF = await this.getVehReport_OBD2_RECORED_LD_BUFF()\n        }\n\n        if (reportConfig.isVEHICLE_DATA_OEM_MODULE_BUFF) {\n            returndata.OEM_MODULE_BUFF = await this.getVehReport_OEM_MODULE_BUFF()\n        }\n\n        return returndata;\n    }\n\n    public async getVehReport_YMME_PROFILE() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_YMME_PROFILE); }\n    public async getVehReport_OBD2_LD_SID1_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_LD_SID1_BUFF); }\n    public async getVehReport_OBD2_FF_SID2_BUFF() {\n        return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_FF_SID2_BUFF);\n    }\n    public async getVehReport_OBD2_FF_SID2_BUFF_RAW() {\n        return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_FF_SID2_BUFF_RAW);\n    }\n\n    public async getVehReport_OBD2_DTC_SID37A_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_DTC_SID37A_BUFF); }\n    public async getVehReport_OBD2_SPECIALTEST_SID568_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_SPECIALTEST_SID568_BUFF); }\n    public async getVehReport_OBD2_SPECIALTEST_SID5_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_SPECIALTEST_SID5_BUFF); }\n    public async getVehReport_OBD2_SPECIALTEST_SID6_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_SPECIALTEST_SID6_BUFF); }\n    public async getVehReport_OBD2_SPECIALTEST_SID8_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_SPECIALTEST_SID8_BUFF); }\n    public async getVehReport_OBD2_VEHINFO_SID9_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_VEHINFO_SID9_BUFF); }\n    public async getVehReport_OBD2_RECORED_LD_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_RECORED_LD_BUFF); }\n    public async getVehReport_OEM_MODULE_BUFF() { return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OEM_MODULE_BUFF); }\n\n    public async Link(cmdinfo: { id, data?: any, nretry?: Number, timeout?: Number }) {\n        try {\n            return await this.VCICmd.sendData(cmdinfo)\n        } catch (err) {\n            return {\n                data: undefined,\n                error: err\n            }\n        }\n    }\n\n    public async LinkMultiData(cmdinfo: { id, data?: any, nretry?: Number, timeout?: Number }) {\n        try {\n            return await this.VCICmd.sendGetMultiData(cmdinfo)\n        } catch (err) {\n            return {\n                data: undefined,\n                error: err\n            }\n        }\n    }\n\n    public async EnableFastCancel()\n    {\n      return await this.VCICmd.EnableFastCancel();\n    }\n\n    public async ResetFastCancel()\n    {\n      return await this.VCICmd.ResetFastCancel();\n    }\n\n    public registerReceiveCb(func:(data)=>any)\n    {\n      this.VCICmd.EventCallBackFunction.subscribe(func);\n    }\n\n    // public deregisterReceiveCb()\n    // {\n    //   this.VCICmd.deregisterCallbackFunc();\n    // }\n\n    public logdebug(data) {\n        if (isArray(data)) {\n            this.notifier.log(DataParser.bytesToHexString(data));\n            return\n        }\n\n        if (isString(data)) {\n            this.notifier.log(data);\n            return\n        }\n\n        this.notifier.log(JSON.stringify(data))\n    }\n\n    public async Cancel_VCI_Process()\n    {\n      try{\n        this.logdebug(\"Cancel Process...\")\n\n      }\n      catch(err)\n      {\n\n      }\n    }\n\n}\n","/**\n * @Author: quocdo-macbook\n * @Date:   2020-11-06T22:46:24+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2022-03-01T11:57:14+07:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport * as ENUMs from './../standard/enums'\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as OBDUtil from './obdUtils'\nimport { isNullOrUndefined } from 'util';\nimport * as DataParser from './../utilities/dataParser'\nimport { enumProtocol } from './../standard/enums';\n// import * from './../standard/enums';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class OBD2 extends OBDx {\n\n    // added by NGOCLB\n    private isCancelQuery = false;\n    public stopQuery() {\n      this.isCancelQuery = true;\n    }\n\n    public async Query(cbinfo = null, isNeedCheckVoltage?: boolean): Promise<enumProtocol> {\n        try {\n\n            const notifyInfo = (percent = 0, index = 0, total = 0, message = undefined, isfinish = false) => {\n                cbinfo && cbinfo({ percent, index, total, message, isfinish });\n            }\n\n            //get total process\n            let result = await this.LinkVciCmd({\n                Procid: ENUMVCIs.VCIProg.obd2,\n                stateid: ENUMVCIs.VCICmd_obd2.start_Query,\n                nretry: 0, // added by ngoclb\n                timeout: 200\n            }) || []\n\n            const listProtocol = _.chunk(result, 2)\n            let index = 0\n            const total = listProtocol.length;\n            if (_.isEmpty(listProtocol)) {\n                notifyInfo(100.0, 0, 0, undefined, true)\n                return enumProtocol.eprotocol_PROTOCOL_NO;\n            }\n            const fFuncCheckVoltage = async () => {\n              const usbData = [0, 0]\n        const batvol = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.tool,\n          stateid: ENUMVCIs.VCICmd_tool.getecuvoltage, usbData, nretry: 0, timeout: 1000\n              })\n              let j = DataParser.bytesToString(batvol);\n        if (j.search(\"Battery Voltage\") > 0) {\n                  var temp = JSON.parse(j.replace(\"Battery Voltage\", \"BatteryVoltage\"));\n                  return temp['BatteryVoltage'];\n              }\n              let v = new Float32Array(new Uint8Array(batvol).buffer)[0];\n              if (!isNullOrUndefined(v)) {\n                  return v;\n              }\n            }\n            this.isCancelQuery = false;\n            const fLinkToProtx = async (list) => {\n                try {\n                    index++;\n                    if (_.isEmpty(list) || this.isCancelQuery) {\n                        this.isCancelQuery = false;\n                        return enumProtocol.eprotocol_PROTOCOL_NO;\n                    }\n                    if (isNeedCheckVoltage) {\n                      //14-08-2020 11:56 Quoc Do update here to check voltage\n                      let _ecuvol = await fFuncCheckVoltage();\n                      if(_ecuvol<1)\n                      {\n                        return enumProtocol.eprotocol_UNKNOWN; // changed to UNKNOWN by ngoclb\n                      }\n                    }\n                    let protocolx = list.shift();\n                    // protocolx = [5,0]\n                    const idprotocol = ((protocolx[1] << 8) & 0xff00) + protocolx[0];\n                    // this.logdebug(protocolx)\n                    notifyInfo((100.0 * index / total), index, total, OBDUtil.enumProtocolToString(idprotocol))\n                    this.logdebug('start link ' + protocolx);\n                    const respdata = await this.LinkVciCmd({\n                        Procid: ENUMVCIs.VCIProg.obd2,\n                        stateid: ENUMVCIs.VCICmd_obd2.Link_To_Prot_N, usbData: protocolx\n                    })\n                    //  this.logdebug('finished')\n                    if (!isNullOrUndefined(respdata) && respdata[0] == 0xaa) {\n                        return idprotocol\n                    }\n                    else {\n                        return await fLinkToProtx(list)\n                    }\n\n                } catch (_err) {\n                    this.logdebug('stop query ' + _err)\n                    return enumProtocol.eprotocol_PROTOCOL_NO;\n                }\n            }\n            const linkedProtocol = await fLinkToProtx(listProtocol);\n            this.logdebug('finished ' + linkedProtocol) // added by ngoclb\n            notifyInfo(100.0, total, total, OBDUtil.enumProtocolToString(linkedProtocol), true)\n            return linkedProtocol;\n        } catch (err) {\n            this.logdebug('crash ' + err);\n            return enumProtocol.eprotocol_PROTOCOL_NO;\n}\n}\n\npublic async quick_retreiveData(cb:({message})=>any = null, readFFDtc?: boolean) {\n   // changed by ngoclb\n  const args = readFFDtc ? [\n    {id:ENUMVCIs.VCICmd_obd2.Read_Dtc,message:'Reading DTC',data:[]},\n    {id:ENUMVCIs.VCICmd_obd2.freezeframe,message:'Reading FreezeFrame',data:[]},\n    {id:ENUMVCIs.VCICmd_obd2.ReadService9,message:'Read Service 9',data:[]},\n  ] : [\n    {id:ENUMVCIs.VCICmd_obd2.monitoricon,message:'Reading Monitor Icon',data:[]}, //need read monitor icon first\n    {id:ENUMVCIs.VCICmd_obd2.ReadVin,message:'Reading VIN',data:[]},\n  ]\n\n  const f = async (dd) => {\n    try {\n      if(dd.length == 0)\n      return true;\n      const d = dd.shift();\n\n      cb && cb(d.message)\n\n      await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.obd2,\n        stateid: d.id,\n        usbData: d.data,nretry:3,timeout:10000\n      })\n      return await f(dd);\n    } catch (err) {\n      return false\n    }\n  }\n  return await f(args);\n}\n\npublic async retreiveData(cb:({message})=>any = null) {\n        const args = [\n            {id:ENUMVCIs.VCICmd_obd2.monitoricon,message:'Reading Monitor Icon',data:[]},\n\n            {id:ENUMVCIs.VCICmd_obd2.Read_Dtc,message:'Reading DTC',data:[]},\n            {id:ENUMVCIs.VCICmd_obd2.freezeframe,message:'Reading FreezeFrame',data:[]},\n            {id:ENUMVCIs.VCICmd_obd2.ReadVin,message:'Reading VIN',data:[]},\n            //{id:ENUMVCIs.VCICmd_obd2.ReadService5,message:'Read Service 5',data:[]},\n            //{id:ENUMVCIs.VCICmd_obd2.ReadService6,message:'Read Service 6',data:[]},\n            //{id:ENUMVCIs.VCICmd_obd2.ReadService8,message:'Read Service 8',data:[]},\n            {id:ENUMVCIs.VCICmd_obd2.ReadService9,message:'Read Service 9',data:[]},\n      { id: ENUMVCIs.VCICmd_obd2.GetReport, message: 'Reading Report full', data: [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_full, 1)] }\n    ]\n\n    const f = async (dd) => {\n      try {\n        if (dd.length == 0)\n          return true;\n        const d = dd.shift();\n\n        cb && cb(d.message)\n\n        await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: d.id,\n          usbData: d.data, nretry: 3, timeout: 10000\n        })\n        return await f(dd);\n      } catch (err) {\n        return false\n      }\n    }\n    return await f(args);\n  }\n\n  public async retreiveFFDTCMonData(cb: ({ message }) => any = null) {\n    const args = [\n      { id: ENUMVCIs.VCICmd_obd2.monitoricon, message: 'Reading Monitor Icon', data: [] },\n      { id: ENUMVCIs.VCICmd_obd2.Read_Dtc, message: 'Reading DTC', data: [] },\n      { id: ENUMVCIs.VCICmd_obd2.freezeframe, message: 'Reading FreezeFrame', data: [] },\n    ]\n\n    const f = async (dd) => {\n      try {\n        if (dd.length == 0)\n          return true;\n        const d = dd.shift();\n\n        cb && cb(d.message)\n\n        await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: d.id,\n          usbData: d.data, nretry: 3, timeout: 10000\n        })\n        return await f(dd);\n      } catch (err) {\n        return false\n      }\n    }\n    return await f(args);\n  }\n\n  public async retreiveDTCData(cb: ({ message }) => any = null) {\n    const args = [\n      { id: ENUMVCIs.VCICmd_obd2.Read_Dtc, message: 'Reading DTC', data: [] },\n        ]\n\n        const f = async (dd) => {\n            try {\n                if(dd.length == 0)\n                return true;\n                const d = dd.shift();\n\n                cb && cb(d.message)\n\n                await this.LinkVciCmd({\n                    Procid: ENUMVCIs.VCIProg.obd2,\n                    stateid: d.id,\n                    usbData: d.data,nretry:3,timeout:10000\n                })\n                return await f(dd);\n            } catch (err) {\n                return false\n            }\n        }\n        return await f(args);\n    }\n\n    public async getVehicleProfile() {\n\n        try {\n            await this.LinkVciCmd({\n                Procid: ENUMVCIs.VCIProg.obd2,\n                stateid: ENUMVCIs.VCICmd_obd2.ReadVin\n            })\n\n            const resp = await this.LinkVciCmd({\n                Procid: ENUMVCIs.VCIProg.obd2,\n                stateid: ENUMVCIs.VCICmd_obd2.getymmeprofile\n            })\n\n            return resp;\n        } catch (err) {\n            return undefined\n        }\n    }\n\n    public async QueryProtocolCAN(eProtocol: enumProtocol) {\n        return await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.obd2,\n            stateid: ENUMVCIs.VCICmd_obd2.Link_To_Prot_N, usbData: DataParser.numberToBytes(eProtocol, 2)\n        })\n    }\n\n  public async Erase_OBD2_Dtcs() {\n      const usbData = [];\n        //link sid 05\n        const data= await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.obd2,\n            stateid: ENUMVCIs.VCICmd_obd2.Erase_Dtc,\n            usbData,\n            nretry: 1, timeout:10000\n        })\n    // this.logdebug(`erase res: ${data}`)\n        let result=\"OK\";\n    if (data == undefined) {\n            result=\"sent\";\n    } else if (data.status) {\n      result = data.error ? data.error : \"unknown error\"\n        }\n        return({result: result})\n    }\n\n  public async link_OBD2_SPECIALTEST_SID6() {\n      const usbData = [];\n        //link sid 05\n        const data= await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.obd2,\n            stateid: ENUMVCIs.VCICmd_obd2.ReadService6,\n            usbData,\n            nretry: 1, timeout:4000\n        })\n        let result=\"OK\";\n    if (data == undefined) {\n            result=\"sent\";\n        }\n        return({result: result})\n    }\n\n  public async link_OBD2_SPECIALTEST_SID5() {\n        const usbData = [];\n        const data= await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.obd2,\n            stateid: ENUMVCIs.VCICmd_obd2.ReadService5,\n            usbData,\n            nretry: 1, timeout:4000\n        })\n        let result=\"OK\";\n    if (data == undefined) {\n            result=\"sent\";\n        }\n        return({result: result})\n    }\n\n  public async link_OBD2_SPECIALTEST_SID8() {\n        const usbData = [];\n        const data= await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.obd2,\n            stateid: ENUMVCIs.VCICmd_obd2.ReadService8,\n            usbData,\n            nretry: 1, timeout:4000\n        })\n        let result=\"OK\";\n    if (data == undefined) {\n            result=\"Not support\";\n        }\n    else {\n      switch (data[0]) {\n             case ENUMVCIs.enumEVAPStatus.eEVAPSTATE_NO_SUP:\n              result=\"Not support\";\n             break;\n             case ENUMVCIs.enumEVAPStatus.eEVAPSTATE_SUP_OK:\n              result=\"OK\";\n             break;\n             case ENUMVCIs.enumEVAPStatus.eEVAPSTATE_RES_NEG:\n             case ENUMVCIs.enumEVAPStatus.eEVAPSTATE_RES_NO:\n              result=\"Sent\";\n             break;\n\n\n           }\n        }\n        return({result: result})\n    }\n\n  public async getVehReport_MIL_Status() {\n      let ret = {MilStatus:undefined}\n      const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_mil_stat, 1)];\n      const data= await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData\n      })\n      let j = DataParser.bytesToString(data)\n    if (j.search(\"Mil Status\") > 0) {\n          var temp = JSON.parse(j.replace(\"Mil Status\", \"MilStatus\"));\n          return temp as string;\n      }\n      let v = new Int8Array(new Uint8Array(data).buffer)[0];\n      if (!isNullOrUndefined(v)) {\n      if (v === 0) {\n            return ({MilStatus:\"OFF\"})\n          }\n      else {\n            return ({MilStatus:\"ON\"})\n          }\n      }\n      return ret\n    }\n\n  public async getVehReport_DriveCycle_Mon_List() {\n    return new Promise(async resolve => {\n      {\n        try{\n          const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_drivecycle_mon_list, 1)];\n          const data= await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.obd2,\n            stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n            usbData\n          })\n          let j = DataParser.bytesToString(data)\n          this.logdebug(j)\n          return resolve(JSON.parse(j));\n        }\n        catch(err){\n          this.logdebug(err);\n          return resolve({})\n        }\n\n\n      }\n    })\n  }\n\n  public async getVehReport_DriveCycle_Mon_Text(textid: number) {\n    return new Promise(async resolve => {\n      try{\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_drivecycle_mon_text, 1), ...DataParser.numberToBytes(textid as number, 1)];\n        const data= await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 1, timeout:4000\n        })\n        this.logdebug(\"textid:\"+DataParser.numberToBytes(textid as number, 1));\n        let j = DataParser.bytesToString(data).split('``').join('`')\n        j=j.split('`').join('\\\\n')\n        this.logdebug(j)\n        return resolve(JSON.parse(j));\n      }\n      catch (err) {\n        this.logdebug(err);\n        return resolve({})\n      }\n})\n}\n\n  public async getYMMEString() {\n    return new Promise(async resolve => {\n  try{\n  const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_ymme, 1)]\n  const t = await this.LinkVciCmd({\n    Procid: ENUMVCIs.VCIProg.obd2,\n    stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 3, timeout: 7000\n    })\n  let j = DataParser.bytesToString(t)\n  //this.logdebug(j);\n  return resolve(JSON.parse(j));\n  }\n      catch (err) {\n    this.logdebug('getYMMEString error:' + err);\n    return resolve({});\n  }\n\n})\n}\n\n  public async getMonitorIcon() {\n  return new Promise(async resolve =>{\n    try{\n    const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_mon_stat, 1)]\n    const t = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.obd2,\n      stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n      usbData, nretry: 3, timeout:7000\n    })\n    let j = DataParser.bytesToString(t)\n    //this.logdebug(j);\n    return resolve(JSON.parse(j));\n    }\n      catch (err) {\n      this.logdebug('getMonitorIcon error:' + err);\n      return resolve({});\n    }\n\n  })\n}\n\n  //01-03-2022 11:16 Quoc Do added for get new monitor status using PID 41\n  public async getMonitorIcon_SID41() {\n    return new Promise(async resolve => {\n      try {\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_TDC_monitor, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 3, timeout: 7000\n        })\n        let j = DataParser.bytesToString(t)\n        //this.logdebug(j);\n        return resolve(JSON.parse(j));\n      }\n      catch (err) {\n        this.logdebug('getMonitorIcon_SID41 error:' + err);\n        return resolve({});\n      }\n\n    })\n  }\n\n  //01-03-2022 11:39 Quoc Do added new function read RPM VSS\n  //{\n  //   \"Rpm\": 16383,\n  //   \"Vss\": 10\n  // }\n\n  public async getRPM_VSS() {\n    return new Promise(async resolve => {\n      try {\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_RPM_VSS, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 3, timeout: 7000\n        })\n        let j = DataParser.bytesToString(t)\n        //this.logdebug(j);\n        return resolve(JSON.parse(j));\n      }\n      catch (err) {\n        this.logdebug('getRPM_VSS error:' + err);\n        return resolve({});\n      }\n\n    })\n  }\n\n  public async getVehicleInfo_SID9() {\n  return new Promise(async resolve =>{\n    try{\n    const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_vehicle_info, 1)]\n    const t = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.obd2,\n      stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n      usbData, nretry: 3, timeout:7000\n    })\n    let j = DataParser.bytesToString(t)\n      this.logdebug('Vehicle info res:'+j);\n    return resolve(JSON.parse(j));\n      } catch (err) {\n      this.logdebug('Vehicle info err:'+err);\n      return resolve({});\n    }\n\n  })\n}\n\n\n  public async getFreezeFrameDTCInfo() {\n  return new Promise(async resolve =>{\n    try{\n    const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_ff_info, 1)]\n    const t = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.obd2,\n      stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n      usbData, nretry: 3, timeout:7000\n    })\n      let j = JSON.parse(DataParser.bytesToString(t));\n        if (j.length > 0) {\n        j[3] = j[3]!=undefined?ENUMVCIs.EnumSeverityText[j[3]]:ENUMVCIs.EnumSeverityText[0];\n      }\n\n    //this.logdebug(j);\n      return resolve(j);\n    }\n      catch (err) {\n      this.logdebug('FF Dtc Info err:'+err);\n      return resolve({});\n    }\n\n  })\n}\n\n  public async getFreezeFrameLiveData() {\n  return new Promise(async resolve =>{\n      try {\n\t\t\t\tconst usbData = [\n\t\t\t\t\t...DataParser.numberToBytes(\n\t\t\t\t\t\tENUMVCIs.VCICmd_obd2_reporttype.report_ff_ld,\n\t\t\t\t\t\t1\n\t\t\t\t\t),\n\t\t\t\t];\n    const t = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.obd2,\n      stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n\t\t\t\t\tusbData,\n\t\t\t\t\tnretry: 3,\n\t\t\t\t\ttimeout: 7000,\n\t\t\t\t});\n\t\t\t\tlet j = DataParser.bytesToString(t);\n    return resolve(JSON.parse(j));\n\t\t\t} catch (err) {\n        this.logdebug('FF LD Info err:' + err);\n        return resolve({});\n      }\n  })\n}\n\n  public async getOBD2DTCInfo() {\n  return new Promise(async resolve =>{\n    try{\n    const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_dtcs, 1)]\n    const t = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.obd2,\n      stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n      usbData, nretry: 3, timeout:7000\n    })\n    let j = DataParser.bytesToString(t)\n    //this.logdebug(j);\n    return resolve(JSON.parse(j));\n    }\n      catch (err) {\n      this.logdebug('getOBD2DTCInfo:'+err);\n      return resolve({});\n    }\n\n  })\n}\n\n  public async getOBD2DTCDef(moduleindex: number, dtcindex: number) {\n  return new Promise(async resolve =>{\n    const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_dtc_def, 1),\n      ...DataParser.numberToBytes(moduleindex, 1),...DataParser.numberToBytes(dtcindex, 1)]\n    const t = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.obd2,\n      stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n      usbData, nretry: 3, timeout:7000\n    })\n    let j = DataParser.bytesToString(t)\n    //this.logdebug(j);\n    return resolve(JSON.parse(j));\n  })\n}\n\npublic async getVehReport_YMME_PROFILE() {\n    let ret = []\n    let MaxNumBuff = 1;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n        if (idx >= MaxNumBuff)\n            return ret;\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_vehicle_data_ymme_profile, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 3, timeout:1000 // decrease timeout\n        })\n        ret.push({bufferIndex:idx,data:t})\n        this.logdebug('link buffer:' + idx)\n        return await __flink(idx + 1, MaxNumBuff)\n    }\n    return await __flink(0, MaxNumBuff)\n}\n  public async getVehReport_OBD2_LD_SID1_BUFF_new() {\n    let ret = []\n    let MaxNumBuff = 2;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n        if (idx >= MaxNumBuff)\n            return ret;\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid1, 1),\n          ...DataParser.numberToBytes(idx, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 1, timeout:4000\n        })\n        ret.push({bufferIndex:idx,data:t})\n        this.logdebug('link buffer:' + idx)\n        return await __flink(idx + 1, MaxNumBuff)\n    }\n    return await __flink(0, MaxNumBuff)\n  }\n  // public async getVehReport_OBD2_FF_SID2_BUFF() {\n  //     return await this.LinkHIDUSBCmd(USBHIDCommand_64.eVEHICLE_DATA_OBD2_FF_SID2_BUFF);\n  // }\n  public async getVehReport_OBD2_FF_SID2_BUFF_RAW_new() {\n  let ret = []\n  let MaxNumBuff = 2;\n\n  const __flink = async (idx, MaxNumBuff) => {\n\n    if (idx >= MaxNumBuff)\n    return ret;\n    const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid2, 1),\n    ...DataParser.numberToBytes(idx, 1)]\n    const t = await this.LinkVciCmd({\n      Procid: ENUMVCIs.VCIProg.obd2,\n      stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n      usbData, nretry: 1, timeout:4000\n    })\n    ret.push({bufferIndex:idx,data:t})\n    this.logdebug('link buffer:' + idx)\n    return await __flink(idx + 1, MaxNumBuff)\n  }\n  return await __flink(0, MaxNumBuff)\n}\n  public async getVehReport_OBD2_DTC_SID37A_BUFF_new() {\n    let ret = []\n    let MaxNumBuff = 2;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n        if (idx >= MaxNumBuff)\n            return ret;\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid37A, 1),\n        ...DataParser.numberToBytes(idx, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 1, timeout:4000\n        })\n        ret.push({bufferIndex:idx,data:t})\n        this.logdebug('link buffer:' + idx)\n        return await __flink(idx + 1, MaxNumBuff)\n    }\n    return await __flink(0, MaxNumBuff)\n  }\n\n  public async getVehReport_OBD2_SPECIALTEST_SID5_BUFF_new() {\n    let ret = []\n    let MaxNumBuff = 1;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n        if (idx >= MaxNumBuff)\n            return ret;\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid5, 1),\n        ...DataParser.numberToBytes(idx, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 1, timeout:10000\n        })\n        ret.push({bufferIndex:idx,data:t})\n        this.logdebug('link buffer:' + idx)\n        return await __flink(idx + 1, MaxNumBuff)\n    }\n    return await __flink(0, MaxNumBuff)\n  }\n  public async getVehReport_OBD2_SPECIALTEST_SID6_BUFF_v2(){\n    let ret = []\n    let MaxNumBuff = 1;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n      if (idx >= MaxNumBuff)\n      return ret;\n      let usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid6_tids, 1),\n      ...DataParser.numberToBytes(idx, 1)]\n      const t = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.obd2,\n        stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n        usbData, nretry: 1, timeout:10000\n      })\n      const j = JSON.parse(DataParser.bytesToString(t));\n      this.logdebug(DataParser.bytesToString(t));\n      if (_.isObject(j)) {\n\n        var keys = Object.keys(j);\n        var obj={};\n        for (let item of j) {\n          var keys = Object.keys(item);\n           usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid6_comp_ids, 1),\n            ...DataParser.numberToBytes(item[keys[0]], 1)]\n            this.logdebug('Get CompText of textid:'+item[keys[0]])\n          const m = await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.obd2,\n            stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n            usbData , nretry: 1, timeout:10000\n          })\n          const c = JSON.parse(DataParser.bytesToString(m));\n          if (_.isObject(c)) {\n            obj[keys[0]]=c;\n          }\n          else {\n            obj[keys[0]]='';\n          }\n\n        }\n        //let text = DataParser.getStringOfObj(obj);\n        ret.push({bufferIndex:idx,data:obj});\n      }\n      else {\n        ret.push({bufferIndex:idx,data:t})\n      }\n\n\n      this.logdebug('link buffer:' + idx)\n      return await __flink(idx + 1, MaxNumBuff)\n    }\n  //  const testid = await __flink(0, MaxNumBuff);\n\n    return await __flink(0, MaxNumBuff);\n  }\n  public async getVehReport_OBD2_SPECIALTEST_SID6_BUFF_new() {\n    let ret = []\n    let MaxNumBuff = 1;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n      if (idx >= MaxNumBuff)\n      return ret;\n      const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid6, 1),\n      ...DataParser.numberToBytes(idx, 1)]\n      const t = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.obd2,\n        stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n        usbData, nretry: 1, timeout:10000\n      })\n      ret.push({bufferIndex:idx,data:t})\n      this.logdebug('link buffer:' + idx)\n      return await __flink(idx + 1, MaxNumBuff)\n    }\n    return await __flink(0, MaxNumBuff)\n  }\n  public async getVehReport_OBD2_SPECIALTEST_SID8_BUFF_new() {\n    let ret = []\n    let MaxNumBuff = 1;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n        if (idx >= MaxNumBuff)\n            return ret;\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid8, 1),\n        ...DataParser.numberToBytes(idx, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 1, timeout:4000\n        })\n        ret.push({bufferIndex:idx,data:t})\n        this.logdebug('link buffer:' + idx)\n        return await __flink(idx + 1, MaxNumBuff)\n    }\n    return await __flink(0, MaxNumBuff)\n  }\n\n  public async getVehReport_OBD2_VEHINFO_SID9_BUFF_new() {\n    let ret = []\n    let MaxNumBuff = 2;\n\n    const __flink = async (idx, MaxNumBuff) => {\n\n        if (idx >= MaxNumBuff)\n            return ret;\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2_reporttype.report_sid9, 1),\n        ...DataParser.numberToBytes(idx, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData, nretry: 1, timeout:4000\n        })\n        ret.push({bufferIndex:idx,data:t})\n        this.logdebug('link buffer:' + idx)\n        return await __flink(idx + 1, MaxNumBuff)\n    }\n    return await __flink(0, MaxNumBuff)\n  }\n\n  // 18-06-2022 Nguyen Pham added function for new smog check and LED status\n  public async SetOBD2SmogCheckState(loc) {\n    this.logdebug(\"Set Smog Check Location:\" + loc)\n    const usbData = [...DataParser.numberToBytes(loc, 1)];\n    try {\n      const val = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.obd2,\n        stateid: ENUMVCIs.VCICmd_obd2.SetSmogCheckState, usbData\n      })\n      if (isNullOrUndefined(val)) {\n        return false;\n      }\n      // this.logdebug(\"Smog check val: \"+ JSON.stringify(val))\n      // else {\n      //   return true;\n      // }\n    } catch (error) {\n      return false;\n    }\n        return true;\n      }\n\n  public async SetOBD2SmogCheckCountry(loc) {\n    this.logdebug(\"Set Smog Check Country:\" + loc)\n    const usbData = [...DataParser.numberToBytes(loc, 1)];\n    try {\n      const val = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.obd2,\n        stateid: ENUMVCIs.VCICmd_obd2.SetSmogCheckCountry, usbData\n      })\n      if (isNullOrUndefined(val)) {\n        return false;\n      }\n    } catch (error) {\n      return false;\n    }\n    return true;\n  }\n\n  public async GetOBD2LedStatus() {\n    return new Promise(async resolve => {\n      try {\n        const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCICmd_obd2.GetLedStatus, 1)]\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetReport,\n          usbData\n        })\n        let j = DataParser.bytesToString(t)\n        this.logdebug('Get Led status: '+j);\n        return resolve(JSON.parse(j));\n      }\n      catch (err) {\n        this.logdebug('err GetLedStatus:' + JSON.stringify(err));\n        return resolve({});\n      }\n\n    })\n  }\n\n  public async GetOBD2SmogCheckState() {\n    return new Promise(async resolve => {\n      try {\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetSmogCheckState,\n        })\n        \n        return resolve(t[0]);\n      }\n      catch (err) {\n        this.logdebug('err GetSmogCheck:' + JSON.stringify(err));\n        return resolve({});\n      }\n\n    })\n  }\n\n  public async GetOBD2SmogCheckCountry() {\n    return new Promise(async resolve => {\n      try {\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetSmogCheckCountry,\n        })\n        \n        return resolve(t[0]);\n      }\n      catch (err) {\n        this.logdebug('err GetSmogCheck:' + JSON.stringify(err));\n        return resolve({});\n      }\n\n    })\n  }\n\n  public async SetFuelType(type) {\n    this.logdebug(\"Set Fuel Type: \" + type)\n    const usbData = [...DataParser.numberToBytes(type, 1)];\n    try {\n      const val = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.obd2,\n        stateid: ENUMVCIs.VCICmd_obd2.SetFuelType, usbData\n      })\n      if (isNullOrUndefined(val)) {\n        return false;\n      }\n      // else {\n      //   return true;\n      // }\n    } catch (error) {\n      return false;\n    }\n        return true;\n      }\n\n  public async GetFuelType() {\n    return new Promise(async resolve => {\n      try {\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetFuelType,\n        })\n        const enumFuelType = {\n          0: 'Unknown',\n          1: 'GAS',\n          2: 'DIESEL',\n        }\n        let fuelType = enumFuelType[t[0]];\n        this.logdebug('GetFuelType: '+ fuelType);\n        return resolve({result: fuelType});\n      }\n      catch (err) {\n        this.logdebug('err GetFuelType:' + JSON.stringify(err));\n        return resolve({});\n      }\n    })\n  }\n\n  public async GetVehType() {\n    return new Promise(async resolve => {\n      try {\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.obd2,\n          stateid: ENUMVCIs.VCICmd_obd2.GetVehType,\n        })\n        const enumVehType = {\n          0: 'Unknown',\n          1: 'Normal',\n          2: 'Electric',\n          3: 'Hybrid',\n        }\n        let vehType = enumVehType[t[0]];\n        this.logdebug('GetVehType: '+ vehType);\n        return resolve({result: vehType});\n      }\n      catch (err) {\n        this.logdebug('err GetVehType:' + JSON.stringify(err));\n        return resolve({});\n      }\n    })\n  }\n\n  public async SetVehType(type) {\n    this.logdebug(\"Set Veh Type: \" + type)\n    const usbData = [...DataParser.numberToBytes(type, 1)];\n    try {\n      const val = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.obd2,\n        stateid: ENUMVCIs.VCICmd_obd2.SetVehType, usbData\n      })\n      if (isNullOrUndefined(val)) {\n        return false;\n      }\n    } catch (error) {\n      return false;\n    }\n    return true;\n  }\n\n\n  public async GetBluetoothName(): Promise<string> {\n    return new Promise(async resolve => {\n      try {\n        const t = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.tool,\n          stateid: ENUMVCIs.VCICmd_BT_setting.get_bt_name,\n        })\n        this.logdebug(JSON.stringify(t))\n        let name = DataParser.bytesToString(t);\n        return resolve(name);\n      }\n      catch (err) {\n        this.logdebug('err GetBlueToothName:' + JSON.stringify(err));\n        return resolve(null);\n      }\n\n    })\n  }\n\n  public async SetBluetoothName(newName: string) {\n    // dummy script, need to change when new FW support BT name release\n    let nameString = await DataParser.stringToBytes(newName)\n    let nameLength = nameString.length // change this\n    \n    const usbData = [nameLength, ...nameString];\n    try {\n      const val = await this.LinkVciCmd({\n        Procid: ENUMVCIs.VCIProg.tool,\n        stateid: ENUMVCIs.VCICmd_BT_setting.set_bt_name, usbData\n      })\n      if (isNullOrUndefined(val)) {\n        return false;\n      }\n    } catch (error) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport { enumProtocol }\n","import { Injectable } from '@angular/core';\nimport * as ENUMs from '../standard/enums'\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as OBDUtil from './obdUtils'\nimport { isNullOrUndefined, isObject } from 'util';\nimport * as DataParser from '../utilities/dataParser'\nimport { enumProtocol } from '../standard/enums';\nimport { Languages, Metrics, TransferStatus, VehicleDataTypes, BufferSegmentTypes, FreezeFrameDataTypes } from './vcistd'\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class OBD2FF extends OBDx {\n    theFFBuffer = [];\n    theFFBufferDTC = null;\n    theFFBufferItemName = [];\n    theFFBufferUnit = [];\n    itemFFValuesBuffer = []\n    bNoRecordedItem = 0\n    buffer = {}\n    transferStatus = null\n\n\n    formatBuffer(name, type, buffer) {\n        const bufferType = [type];\n        const segmentType = DataParser.numberToBytes(BufferSegmentTypes[name], 2);\n        const bufferLength = DataParser.numberToBytes(buffer.length, 4);\n        return [...bufferType, ...segmentType, ...bufferLength, ...buffer];\n    }\n    appendBuffer(name, data, type = 0) {\n        const buff = this.buffer[name] || [];\n        let formatedBuffer = this.formatBuffer(name, type, data);\n        this.buffer[name] = buff.concat(formatedBuffer);\n    }\n\n    getFFDataCommand(itemType, pkgIndex = null, language = Languages.ENGLISH, unit = Metrics.USA) {\n        const iCommand = [100, 0, 0, 0];\n        const iReportId = [0, 0, 0, 0];\n        const iVehicleIndex = [0];\n        const reserved = [0];\n\n        const dataType = VehicleDataTypes.OBD2_FF_SID2_BUFF;\n        const enumDataType = [dataType];\n        const dataBufferIndex = [0];\n        const enumItemType = [_.get(FreezeFrameDataTypes, itemType, 1)];\n        let params, iSize;\n\n        params = [0, 0, 0, 0];\n        if (language !== undefined) params.push(language);\n        if (unit !== undefined) params.push(unit);\n\n        // package index\n        if (pkgIndex !== null) {\n            iSize = [pkgIndex, 0, 0, 0];\n        } else {\n            iSize = DataParser.numberToBytes(params.length, 4).reverse();\n        }\n\n        let data = [].concat(iReportId, iCommand, iVehicleIndex, enumDataType, dataBufferIndex, enumItemType, iSize, params);\n\n        return {\n            dataType,\n            bufferIndex: 0,\n            params,\n            data,\n        };\n    }\n\n    getUsbCommand(dataType, bufferIndex = 0, params = []) {\n\n        const iCommand = [100, 0, 0, 0];\n        const iReportId = [0, 0, 0, 0];\n        const iVehicleIndex = [0];\n        const reserved = [0];\n\n        const enumDataType = [_.get(VehicleDataTypes, dataType, 1)];\n        const dataBufferIndex = [bufferIndex];\n        const iSize = DataParser.numberToBytes(params.length, 4).reverse();\n        const data = [].concat(iReportId, iCommand, iVehicleIndex, enumDataType, dataBufferIndex, reserved, iSize, params);\n        return {\n            dataType,\n            bufferIndex,\n            params,\n            data,\n        };\n    }\n\n    public getFFBuffer(language = Languages.ENGLISH, unit = Metrics.USA) {\n        return new Promise(async resolve => {\n            this.logdebug('Getting freezeframe');\n\n            this.theFFBuffer = [];\n            this.theFFBufferDTC = null;\n            this.theFFBufferItemName = [];\n            this.theFFBufferUnit = [];\n\n            const retData = { data: null, raw: null };\n            let isNeedCheckFF = true\n\n            if (isNeedCheckFF && !await this.getFFHeader(language, unit)) isNeedCheckFF = false\n\n            if (isNeedCheckFF && !await this.getFFDTC(language, unit)) isNeedCheckFF = false\n\n            if (isNeedCheckFF && !await this.getFFItemNames(language, unit)) isNeedCheckFF = false\n\n            if (isNeedCheckFF && !await this.getFFItemUnits(language, unit)) isNeedCheckFF = false\n\n            this.itemFFValuesBuffer = [];\n            if (isNeedCheckFF && !await this.getFFItemValues(language, unit)) isNeedCheckFF = false\n\n            const parseItemFF = (datas, lensize = 1) => {\n                //LEN\n                const retdata = [];\n                for (let i = 0; i < datas.length;) {\n                    if (retdata.length >= this.bNoRecordedItem) break;\n                    const j = DataParser.arrayToNumber(datas.slice(i), lensize, false); //datas[i++];\n                    i += lensize;\n                    if (j > 0) retdata.push(datas.slice(i, i + j));\n                    else retdata.push(null);\n                    i += j;\n                }\n                return retdata;\n            };\n\n            const parseFreezeFrameData = () => {\n                const retdatas = [];\n                try {\n                    const listItemNames = parseItemFF(this.theFFBufferItemName, 2);\n\n\n                    const listItemValues = parseItemFF(this.itemFFValuesBuffer, 1);\n\n\n                    const listItemUnits = parseItemFF(this.theFFBufferUnit, 1);\n\n\n                    for (let j = 0; j < this.bNoRecordedItem; j++) {\n                        retdatas.push({\n                            name: DataParser.getStringOfObj(listItemNames[j]),\n                            value: DataParser.getStringOfObj(listItemValues[j]),\n                            unit: DataParser.getStringOfObj(listItemUnits[j]) || '',\n                        });\n                    }\n\n                    return retdatas;\n                } catch (exception) {\n                    this.logdebug(exception);\n                    return null;\n                }\n            };\n\n            retData.data = {\n                dtc: { code: DataParser.getStringOfObj(this.theFFBufferDTC), definition: null },\n                datas: parseFreezeFrameData(),\n            };\n\n            this.parseFFItemValues();\n            // await this.getLDRecordTime(language, unit);\n            this.appendBuffer('FREEZE_FRAME', this.theFFBuffer);\n\n            return resolve(retData);\n        });\n    }\n\n\n    async getFFDTC(language = Languages.ENGLISH, unit = Metrics.USA) {\n        const command = this.getFFDataCommand('DTC_INFO', null, language, unit);\n        let theBuffer = [];\n        try {\n            this.logdebug('FreezeFrame Get DTC');\n            // const result = await this.executor.execAsync({ ...commands.getVehicleV5Data, data: command.data });\n            const { data } = await this.Link({\n                id: 0x80,\n                data: command.data\n            })\n            const result = data\n            this.logdebug(`resule : ${JSON.stringify(result)}`);\n            // parse result\n            if (!_.isEmpty(result)) {\n                let milDtcLen = result[0];\n                theBuffer = theBuffer.concat(_.slice(result, 0, milDtcLen + 1));\n\n                this.logdebug('FreezeFrame ' + JSON.stringify(result));\n\n            } else {\n                theBuffer.push(0);\n                this.logdebug('FreezeFrame : ' + 'NO DTC FF');\n            }\n        } catch (error) {\n            // no FF DTC\n            theBuffer.push(0);\n        }\n        this.theFFBufferDTC = theBuffer;\n        this.theFFBuffer = this.theFFBuffer.concat(theBuffer);\n\n        return Promise.resolve(theBuffer.length > 0);\n    }\n\n\n    async getFFHeader(language = Languages.ENGLISH, unit = Metrics.USA) {\n        const command = this.getFFDataCommand('LD_HEADER', null);\n        try {\n            this.logdebug('FreezeFrame getFFHeader');\n            // const result = await this.executor.execAsync({ ...commands.getVehicleV5Data, data: command.data });\n            const { data } = await this.Link({\n                id: 0x80,\n                data: command.data\n            })\n            const result = data\n            // parse result\n            this.bNoRecordedItem = result[5];\n            this.logdebug('FreezeFrame : Number recorded: ' + this.bNoRecordedItem);\n            // number of items (2 bytes)\n            this.theFFBuffer = this.theFFBuffer.concat([this.bNoRecordedItem, 0]);\n\n            // return Promise.resolve(true);\n            //Hung vo update to ensure number record > 0\n            return Promise.resolve(this.bNoRecordedItem > 0)\n        } catch (error) {\n            //throw error;\n            this.logdebug('FreezeFrame' + JSON.stringify(error));\n\n            return Promise.resolve(false);\n        }\n    }\n\n\n    async getFFItemNames(language = Languages.ENGLISH, unit = Metrics.USA, pkgIndex = 0) {\n        const command = this.getFFDataCommand('LD_ITEM_NAME_STRING', pkgIndex, language, unit);\n\n        this.logdebug('FreezeFrame getFFItemNames :' + `packageIndex ${pkgIndex}`);\n\n        // const result = await this.executor.execAsync({ ...commands.getVehicleV5Data, data: command.data });\n        const { data } = await this.Link({\n            id: 0x80,\n            data: command.data\n        })\n        const result = data\n        this.logdebug('FreezeFrame getFFItemNames' + `length of response ${result ? result.length : 0}`);\n\n        if (result && result.length === 512) {\n            // parse result\n            this.transferStatus = result.length === 512 ? result[510] : TransferStatus.COMPLETED;\n            //names is as [len1 (2 bytes), name1, len2 (2 bytes), name2, ...]\n            //since some last bytes of the buffer with 512 bytes may not use, so we only add meaningful data to the final buffer\n            let namesBufferIndex = 0;\n            for (let i = 0; i < this.bNoRecordedItem; i++) {\n                const itemNameBytes = [result[namesBufferIndex++], result[namesBufferIndex++]];\n                let itemNameLen = DataParser.bytesToInt(itemNameBytes, 2, 0);\n                let itemNameArr = _.slice(result, namesBufferIndex, namesBufferIndex + itemNameLen);\n                namesBufferIndex = namesBufferIndex + itemNameLen;\n\n                this.theFFBufferItemName = this.theFFBufferItemName.concat(itemNameBytes, itemNameArr);\n                this.theFFBuffer = this.theFFBuffer.concat(itemNameBytes, itemNameArr);\n            }\n\n            if (this.transferStatus === TransferStatus.TRANSFERRING) {\n                // more packages are still pending, keep request for data\n                await this.getFFItemNames(language, unit, pkgIndex + 1);\n            }\n            return Promise.resolve(this.transferStatus === TransferStatus.COMPLETED);\n        }\n\n        return Promise.resolve(false);\n    }\n\n\n    async getFFItemUnits(language = Languages.ENGLISH, unit = Metrics.USA, pkgIndex = 0) {\n        return new Promise(async resolve => {\n            const command = this.getFFDataCommand('LD_ITEM_UNIT_STRING', pkgIndex, language, unit);\n            this.logdebug('FreezeFrame getFFItemUnits : ' + `packageIndex ${pkgIndex}`);\n            // const result = await this.executor.execAsync({ ...commands.getVehicleV5Data, data: command.data });\n            const { data } = await this.Link({\n                id: 0x80,\n                data: command.data\n            })\n            const result = data\n            this.logdebug('FreezeFrame getFFItemUnits : ' + `length of response ${result ? result.length : 0}`);\n            if (result && result.length === 512) {\n                // parse result\n                this.transferStatus = result.length === 512 ? result[510] : TransferStatus.COMPLETED;\n                //names is as [len1 (1 byte), unit1, len2 (1 byte), unit2, ...]\n                //since some last bytes of the buffer with 512 bytes may not use, so we only add meaningful data to the final buffer\n                let unitsBufferIndex = 0;\n                for (let i = 0; i < this.bNoRecordedItem; i++) {\n                    const itemUnitBytes = [result[unitsBufferIndex]];\n                    let itemUnitLen = result[unitsBufferIndex++];\n\n                    let itemUnitArr = _.slice(result, unitsBufferIndex, unitsBufferIndex + itemUnitLen);\n                    unitsBufferIndex = unitsBufferIndex + itemUnitLen;\n\n                    this.theFFBufferUnit = this.theFFBufferUnit.concat(itemUnitBytes, itemUnitArr);\n\n                    this.theFFBuffer = this.theFFBuffer.concat(itemUnitBytes, itemUnitArr);\n                }\n\n                if (this.transferStatus === TransferStatus.TRANSFERRING) {\n                    // more packages are still pending, keep request for data\n                    await this.getFFItemUnits(language, unit, pkgIndex + 1);\n                }\n\n                return resolve(this.transferStatus === TransferStatus.COMPLETED);\n            }\n            return resolve(false);\n        });\n    }\n\n\n    async getFFItemValues(language = Languages.ENGLISH, unit = Metrics.USA, pkgIndex = 0) {\n        const command = this.getFFDataCommand('LD_ITEM_VALUE_STRING', pkgIndex, language, unit);\n\n        this.logdebug('FreezeFrame getFFItemValues ' + `packageIndex ${pkgIndex}`);\n\n        // let result = await this.executor.execAsync({ ...commands.getVehicleV5Data, data: command.data });\n        const { data } = await this.Link({\n            id: 0x80,\n            data: command.data\n        })\n        let result = data\n\n        this.logdebug('FreezeFrame getFFItemValues ' + `length of response ${result ? result.length : 0}`);\n        if (result && result.length === 512) {\n            // parse result\n            this.transferStatus = result.length === 512 ? result[510] : TransferStatus.COMPLETED;\n            result = _.take(result, result.length - 2);\n\n            this.itemFFValuesBuffer = this.itemFFValuesBuffer.concat(result);\n\n            if (this.transferStatus === TransferStatus.TRANSFERRING) {\n                // more packages are still pending, keep request for data\n                await this.getFFItemValues(language, unit, pkgIndex + 1);\n            }\n            return Promise.resolve(this.transferStatus === TransferStatus.COMPLETED);\n        }\n        return Promise.resolve(false);\n    }\n\n\n    parseFFItemValues() {\n        let valuesBuffer = this.itemFFValuesBuffer;\n        if (valuesBuffer.length > 0) {\n            let valuesBufferIndex = 0;\n            let theBuffer = [];\n            let itemValueIndex = 0;\n\n            for (let i = 0; i < this.bNoRecordedItem; i++) {\n                const itemValueBytes = [valuesBuffer[itemValueIndex++], valuesBuffer[itemValueIndex++]];\n                let itemValueLen = DataParser.bytesToInt(itemValueBytes, 2, 0);\n                let itemValueArr = _.slice(valuesBuffer, itemValueIndex, itemValueIndex + itemValueLen);\n\n                itemValueIndex = itemValueIndex + itemValueLen;\n\n                theBuffer = theBuffer.concat(itemValueBytes, itemValueArr);\n            }\n            this.theFFBuffer = this.theFFBuffer.concat(theBuffer);\n        }\n    }\n\n\n}","import * as enumGlobal from './../standard/enums_Global'\n\nexport function enumProtocolToString(eprotocol) {\n    switch (eprotocol) {\n        case enumGlobal.enumProtocol.eprotocol_UNKNOWN: return \"UNKNOWN\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_NO: return \"Protocol NO\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_VPW: return \"Protocol VPW\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_PWM: return \"Protocol PWM\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_ISO9141: return \"Protocol ISO9141\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_KW2000: return \"Protocol KW2000\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN500KBAUD: return \"Protocol CAN500KBAUD\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_XCAN500KBAUD: return \"Protocol XCAN500KBAUD\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN250KBAUD: return \"Protocol CAN250KBAUD\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_XCAN250KBAUD: return \"Protocol XCAN250KBAUD\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_BOSCH: return \"Protocol BOSCH\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_10: return \"Protocol RESERVE 10\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_11: return \"Protocol RESERVE 11\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_12: return \"Protocol RESERVE 12\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_13: return \"Protocol RESERVE 13\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_14: return \"Protocol RESERVE 14\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_KW: return \"Protocol KW\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_KW1281: return \"Protocol KW1281\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_MUT: return \"Protocol MUT\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN_C_UDS: return \"Protocol CAN C UDS\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN_I_UDS: return \"Protocol CAN I UDS\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_20: return \"Protocol RESERVE_20\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CCD2: return \"Protocol CCD2\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_SDL: return \"Protocol SDL\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_UBP: return \"Protocol UBP\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_MCAN: return \"Protocol MCAN\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_MCAN_____UDS: return \"Protocol MCAN UDS\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_H99B: return \"Protocol H99B\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_95HM: return \"Protocol 95HM\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_92HM: return \"Protocol 92HM\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN: return \"Protocol CAN\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_30: return \"Protocol RESERVE_30\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_31: return \"Protocol RESERVE 31\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CCD: return \"Protocol CCD\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_SCI: return \"Protocol SCI\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_34: return \"Protocol RESERVE 34\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_35: return \"Protocol RESERVE 35\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_36: return \"Protocol RESERVE 36\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_37: return \"Protocol RESERVE 37\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_38: return \"Protocol RESERVE 38\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_39: return \"Protocol RESERVE 39\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_40: return \"Protocol RESERVE 40\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_41: return \"Protocol RESERVE 41\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_OBD1: return \"Protocol OBD1\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_43: return \"Protocol RESERVE_43\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_44: return \"Protocol RESERVE_44\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_45: return \"Protocol RESERVE_45\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_46: return \"Protocol RESERVE_46\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_47: return \"Protocol RESERVE_47\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_DDL1: return \"Protocol DDL1\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_SWCAN: return \"Protocol SWCAN\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_50: return \"Protocol RESERVE_50\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_MB_ISO: return \"Protocol MB_ISO\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_KWFB: return \"Protocol KWFB\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_BMW_CAN: return \"Protocol BMW_CAN\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_TPCAN_2_0: return \"Protocol TPCAN_2_0\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_TPCAN_1_6_KW1281: return \"Protocol TPCAN 1.6 KW1281\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_TPCAN_1_6_KW2000: return \"Protocol TPCAN 1.6 KW2000\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_KWSSM: return \"Protocol KWSSM\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_DDL2: return \"Protocol DDL2\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_DS2: return \"Protocol DS2\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN_UDS: return \"Protocol CAN UDS\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CANUDS: return \"Protocol CAN UDS\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN_D2: return \"Protocol CAN D2\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN_GGD: return \"Protocol CAN GGD\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_ALDL: return \"Protocol ALDL\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_GMLAN: return \"Protocol GMLAN\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_MAX: return \"Protocol MAX\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_CAN_C: return \"Protocol CAN C\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_TCAN: return \"Protocol TCAN\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_DS1: return \"Protocol DS1\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_DS2_MID: return \"Protocol DS2 MID\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_D2: return \"Protocol D2\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_GGD: return \"Protocol GGD\";\n        case enumGlobal.enumProtocol.eprotocol_Suzuki_SDL: return \"Protocol SDL\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_76: return \"Protocol RESERVE 76\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_77: return \"Protocol RESERVE 77\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_78: return \"Protocol RESERVE 78\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_79: return \"Protocol RESERVE 79\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_RESERVE_80: return \"Protocol RESERVE 80\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_J1708: return \"Protocol J1708\";\n        case enumGlobal.enumProtocol.eprotocol_PROTOCOL_J1939: return \"Protocol J1939\";\n        default:\n            return \"NA\"\n    }\n}","/**\n * @Author: quocdo-macbook\n * @Date:   2020-11-06T22:46:24+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2021-03-13T08:39:56+07:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as DataParser from './../utilities/dataParser'\nimport { isNullOrUndefined } from 'util';\n\n\n// import * from './../standard/enums';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class OFM extends OBDx {\n    public async ofm_getodometer_pidsupport() { return await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_odo); }\n    public async ofm_gettpms_pidsupport() { return await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_tpms); }\n    public async ofm_getwarninglight_pidsupport() { return await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_warninglight); }\n    public async ofm_getservicecheck_pidsupport() { return await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_srv_check); }\n\n    async gettpmspid_val(){return new Promise(async resolve =>{\n        try {\n\n            this.logdebug('Reading TPMS PID Items...');\n            const data = await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_tpms);\n            this.logdebug('Reading TPMS PID Items successfully...');\n            let resultdisplay = DataParser.ObjtoStringBeauty(data)\n            var obj = JSON.parse(resultdisplay);\n            //this.logdebug(resultdisplay);\n            if(_.isObject(obj))\n            {\n            const nPid = obj.num_profile as number;\n            //this.logdebug(\"number pid:\" + nPid);\n            const modules = [];\n            const modules_val = [];\n            for (let pididx = 0; pididx < nPid; pididx++) {\n                const profileid = obj.list[pididx].profileid as number;\n                const ofm_item = obj.list[pididx].ofm_item as number;\n                //this.logdebug(\"ofm_item\"+ ofm_item);\n                //this.logdebug(\"profileid\"+ profileid);\n                //this.logdebug('Reading ofm profile ' + profileid.toString());\n                modules.push({\n                    profileid: profileid , ofm_item: ofm_item\n                });\n                const profile_data = await this.getofmprofileid_value(profileid);\n                //this.logdebug(profile_data);\n                var obj_temp = JSON.parse(profile_data as string);\n                  if(_.isObject(obj_temp))\n                  {\n                modules_val.push({ofm_item:ENUMVCIs.Enum_ofm_Items[ofm_item], pid:obj_temp.itemid, Value:obj_temp.value, Unit:obj_temp.unit});\n                  }\n\n\n            }\n            //this.logdebug(j);\n            this.logdebug({ num_profie:nPid ,list: modules});\n            //return resolve({ num_profie:nPid ,list: modules});\n            return resolve(modules_val);\n            }\n            else\n            {\n              return resolve(null);\n            }\n\n        } catch (err) {\n            this.logdebug(err);\n            return resolve({});\n        }\n    });\n\n}\n\n    async getodogroup_val(){return new Promise(async resolve =>{\n        try {\n\n            this.logdebug('Reading Odometer Items...');\n            const data = await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_odo);\n            this.logdebug('Reading Odometer Items successfully...');\n            let resultdisplay = DataParser.ObjtoStringBeauty(data)\n            var obj = JSON.parse(resultdisplay);\n            //this.logdebug(resultdisplay);\n            if(_.isObject(obj))\n            {\n            const nPid = obj.num_profile as number;\n            //this.logdebug(\"number pid:\" + nPid);\n            const modules = [];\n            const modules_val = [];\n            for (let pididx = 0; pididx < nPid; pididx++) {\n                const profileid = obj.list[pididx].profileid as number;\n                const ofm_item = obj.list[pididx].ofm_item as number;\n                //this.logdebug(\"ofm_item\"+ ofm_item);\n                //this.logdebug(\"profileid\"+ profileid);\n                //this.logdebug('Reading ofm profile ' + profileid.toString());\n                modules.push({\n                    profileid: profileid , ofm_item: ofm_item\n                });\n                const profile_data = await this.getofmprofileid_value(profileid);\n                //this.logdebug(profile_data);\n                var obj_temp = JSON.parse(profile_data as string);\n                  if(_.isObject(obj_temp))\n                  {\n                modules_val.push({ofm_item:ENUMVCIs.Enum_ofm_Items[ofm_item], pid:obj_temp.itemid, Value:obj_temp.value, Unit:obj_temp.unit});\n                  }\n\n            }\n            //this.logdebug(j);\n            this.logdebug({ num_profie:nPid ,list: modules});\n            //return resolve({ num_profie:nPid ,list: modules});\n            return resolve(modules_val);\n            }\n            else\n            {\n              return resolve(null);\n            }\n\n        } catch (err) {\n            this.logdebug(err);\n            return resolve({});\n        }\n    });\n\n}\n\nasync getwarninglight_val(){return new Promise(async resolve =>{\n    try {\n        this.logdebug('Reading warning light status...');\n        const data = await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_warninglight);\n        this.logdebug('Reading warning light status successfully...');\n        let resultdisplay = DataParser.ObjtoStringBeauty(data)\n        var obj = JSON.parse(resultdisplay);\n        //this.logdebug(resultdisplay);\n        if(_.isObject(obj))\n        {\n        const nPid = obj.num_profile as number;\n        //this.logdebug(\"number pid:\" + nPid);\n        const modules = [];\n        const modules_val = [];\n        for (let pididx = 0; pididx < nPid; pididx++) {\n            const profileid = obj.list[pididx].profileid as number;\n            const ofm_item = obj.list[pididx].ofm_item as number;\n            //this.logdebug(\"ofm_item\"+ ofm_item);\n            //this.logdebug(\"profileid\"+ profileid);\n            //this.logdebug('Reading ofm profile ' + profileid.toString());\n            modules.push({\n                profileid: profileid , ofm_item: ofm_item\n            });\n            const profile_data = await this.getofmprofileid_value(profileid);\n            //this.logdebug(profile_data);\n            var obj_temp = JSON.parse(profile_data as string);\n              if(_.isObject(obj_temp))\n              {\n            modules_val.push({ofm_item:ENUMVCIs.Enum_ofm_Items[ofm_item], pid:obj_temp.itemid, Value:obj_temp.value, Unit:obj_temp.unit});\n              }\n\n\n        }\n        this.logdebug({ num_profie:nPid ,list: modules});\n        //return resolve({ num_profie:nPid ,list: modules});\n        return resolve(modules_val);\n        }\n        else\n        {\n          return resolve(null);\n        }\n\n    } catch (err) {\n        this.logdebug(err);\n        return resolve({});\n    }\n});\n\n}\nasync getservicecheck_val(){return new Promise(async resolve =>{\n    try {\n\n        this.logdebug('Reading Service Check Items...');\n        const data = await this.getofmsupportitem(ENUMVCIs.VCI_ofm_group.ofm_group_srv_check);\n        this.logdebug('Reading Service Check Items status successfully...');\n        let resultdisplay = DataParser.ObjtoStringBeauty(data)\n        var obj = JSON.parse(resultdisplay);\n        if(_.isObject(obj))\n        {\n        //this.logdebug(resultdisplay);\n        const nPid = obj.num_profile as number;\n        //this.logdebug(\"number pid:\" + nPid);\n        const modules = [];\n        const modules_val = [];\n        for (let pididx = 0; pididx < nPid; pididx++) {\n            const profileid = obj.list[pididx].profileid as number;\n            const ofm_item = obj.list[pididx].ofm_item as number;\n            //this.logdebug(\"ofm_item\"+ ofm_item);\n            //this.logdebug(\"profileid\"+ profileid);\n            //this.logdebug('Reading ofm profile ' + profileid.toString());\n            modules.push({\n                profileid: profileid , ofm_item: ofm_item\n            });\n            const profile_data = await this.getofmprofileid_value(profileid);\n            //this.logdebug(profile_data);\n            var obj_temp = JSON.parse(profile_data as string);\n              if(_.isObject(obj_temp))\n              {\n            modules_val.push({ofm_item:ENUMVCIs.Enum_ofm_Items[ofm_item], pid:obj_temp.itemid, Value:obj_temp.value, Unit:obj_temp.unit});\n              }\n\n\n        }\n        this.logdebug({ num_profie:nPid ,list: modules});\n        //return resolve({ num_profie:nPid ,list: modules});\n        return resolve(modules_val);\n        }\n        else\n        {\n          return resolve(null);\n        }\n\n    } catch (err) {\n        this.logdebug(err);\n        return resolve({});\n    }\n});\n}\nasync getofmsupportitem(ofm_group) {return new Promise(async resolve =>{\n    try {\n        const usbData = [...DataParser.numberToBytes(ofm_group, 1)];\n        const mod = [];\n        this.logdebug('Checking ofm item support '+ofm_group);\n        const data= await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.ofm,\n            stateid: ENUMVCIs.VCICmd_ofm.getsupport_item,\n            usbData, nretry: 1, timeout:30000\n        });\n        //this.logdebug(data);\n        // if(_.isNullOrUndefined(data))\n        // {\n        //   return resolve(null);\n        // }\n        if(data!=undefined)\n        {\n        let index = 0;\n        const nPid = data[index++];\n        this.logdebug(\"number PID:\"+ nPid);\n        for (let pididx = 0; pididx < nPid; pididx++) {\n            const profileid = DataParser.bytesToInt([data[index++], data[index++]], 2, 0);\n            const ofm_item = DataParser.bytesToInt([data[index++], data[index++]], 2, 0);\n            //this.logdebug(\"ofm_item\"+ ofm_item);\n            //this.logdebug(\"profileid\"+ profileid);\n            mod.push({\n                ofm_item: ofm_item, profileid: profileid\n            });\n        }\n        //this.logdebug(mod);\n\n        return resolve({ num_profile:nPid ,list: mod});\n        }\n        else\n        {\n          return resolve({ num_profile:0 ,list: []});\n        }\n\n    } catch (err) {\n        this.logdebug(err);\n        return resolve(null); // changed by ngoclb\n    }\n});\n\n}\n\nasync getofmprofileid_value(profileid){\n    return new Promise(async resolve => {\n        try{\n            const usbData = [...DataParser.numberToBytes(profileid, 2)];\n            const modules = [];\n            let j= {};\n            this.logdebug('Reading ofm profile ' + profileid.toString());\n            const data= await this.LinkVciCmd({\n                Procid: ENUMVCIs.VCIProg.ofm,\n                stateid: ENUMVCIs.VCICmd_ofm.read_item,\n                usbData, nretry: 3, timeout:10000\n            });\n            if(isNullOrUndefined(data))\n            {\n                j= {pid:profileid, value:\"N/S\", unit:\"null\"}\n            }\n            else\n            {\n                j= JSON.parse(DataParser.bytesToString(data) as string);\n            }\n\n            //this.logdebug(\"read\" + j);\n            return resolve(j);\n        }\n        catch(err)\n        {\n            this.logdebug(err);\n            return resolve({});\n        }\n    });\n}\n}\n","import { Injectable } from '@angular/core';\nimport * as ENUMs from './../standard/enums'\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport { isNullOrUndefined, isObject } from 'util';\nimport * as DataParser from './../utilities/dataParser'\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class Symptom extends OBDx {\n  async initprocess()\n  {\n    try{\n      //this.logdebug(\"initialize Symptom\");\n        await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.symptom,\n            stateid: ENUMVCIs.VCICmd_symptom.symptom_init\n        });\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n  }\n\n  async getScreen_UI()\n  {\n    try{\n      //this.logdebug(\"Getting ui\");\n\n      /*Get Screen Title here*/\n      var usbData = [...DataParser.numberToBytes(ENUMVCIs.VCI_symptom_getui.symptom_get_title, 1)];\n\n      let _title = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.symptom,\n          stateid: ENUMVCIs.VCICmd_symptom.symptom_getui,\n          usbData, nretry:1,timeout:4000\n      });\n      let _title_str = DataParser.bytesToString(_title);\n      //this.logdebug(_title_str);\n      /*Get Body screen here*/\n      usbData = [...DataParser.numberToBytes(ENUMVCIs.VCI_symptom_getui.symptom_get_body, 1)];\n      let _body = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.symptom,\n          stateid: ENUMVCIs.VCICmd_symptom.symptom_getui,\n          usbData, nretry:1,timeout:4000\n      });\n      let _body_str = DataParser.bytesToString(_body).split('\\n').join('\\\\n');\n      _body_str = _body_str.split('\\r').join('\\\\r');\n      //this.logdebug(_body_str);\n      /*Get Optionlist here*/\n      usbData = [...DataParser.numberToBytes(ENUMVCIs.VCI_symptom_getui.symptom_get_optionlist, 1)];\n      let _optlist = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.symptom,\n          stateid: ENUMVCIs.VCICmd_symptom.symptom_getui,\n          usbData, nretry:1,timeout:4000\n      });\n      let _optlist_str = DataParser.bytesToString(_optlist);\n      //this.logdebug(_optlist_str);\n\n      /*Get Optionlist here*/\n      usbData = [...DataParser.numberToBytes(ENUMVCIs.VCI_symptom_getui.symptom_get_softkey, 1)];\n      let _softkey = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.symptom,\n          stateid: ENUMVCIs.VCICmd_symptom.symptom_getui,\n          usbData, nretry:1,timeout:4000\n      });\n      let _softkey_str = DataParser.bytesToString(_softkey);\n      //this.logdebug(_softkey_str);\n      return {title:(JSON.parse(_title_str).Title),body:(JSON.parse(_body_str).Body),option:_optlist_str,softkey:_softkey_str};\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return ({});\n    }\n  }\n\n  async set_useroptionselection(index){\n    try{\n      const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCI_symptom_selection_type.symptom_normal_selection, 1),...DataParser.numberToBytes(index, 1)];\n      const data = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.symptom,\n          stateid: ENUMVCIs.VCICmd_symptom.symptom_setselection,\n          usbData, nretry:1,timeout:2000});\n      return true;\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n      return false;\n    }\n\n  }\n\n  async set_softkeyselection(index){\n    try{\n      const usbData = [...DataParser.numberToBytes(ENUMVCIs.VCI_symptom_selection_type.symtom_softkey_selection, 1),...DataParser.numberToBytes(index, 1)];\n      const data = await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.symptom,\n          stateid: ENUMVCIs.VCICmd_symptom.symptom_setselection,\n          usbData, nretry:1,timeout:2000});\n      return true;\n    }\n    catch(err)\n    {\n      this.logdebug(err);\n    }\n  }\n}\n","/**\n * @Author: quocdo-macbook\n * @Date:   2020-12-21T08:20:18+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2022-03-01T11:39:56+07:00\n */\n\n\n\nexport const EnumVCIProcStates = {\n  0x11: 'Proc Error',\n  0xaa: 'Proc Normal',\n  0x22: 'Proc Busy',\n  0xbb: 'Proc Not supported',\n  0xff: 'Proc General Fail',\n};\n\nexport const EnumSeverityText = {\n  0x00: \"Not Severity\",\n  0x01: \"Low\",\n  0x02: \"Medium\",\n  0x03: \"High\"\n};\n\nexport const VCIProg = {\n  systemdata: 1 /*related with system data*/,\n\n  tool: 2 /*related tool */,\n\n  obd2: 3 /*start obd2 link*/,\n\n  oem: 4 /*return system , subsystem , group*/,\n\n  read_report: 5,\n\n  ofm: 6,\n\n  enable_jsonfmt: 7 /*ThuyetHN:added for json format*/,\n  disable_jsonfmt: 8 /*ThuyetHN:added for json format*/,\n\n  enable_jsonfmt_def: 9/*ThuyetHN:added for json format def*/,\n  disable_jsonfmt_def: 10 /*ThuyetHN:added for json format def*/,\n  livedata: 11,\n  symptom: 100,\n  gui: 200,\n  ymme: 300,\n  unsolicited_msg: 65000,\n  keepalive_obd2: 65533,\n  keepalive_oem: 65534,\n  max: 65535,\n};\n\nexport const VCICmd_Unsolicited_msg = {\n  msg_cancel: 1,\n  msg_gui_ack: 2,\n  msg_max: 255\n};\n\nexport const VCICmd_BT_setting = {\n  get_bt_name: 0x20,\n  set_bt_name: 0x21,\n}\n\nexport const VCICmd_obd2 = {\n  start_Query: 0, //report list protocol query\n  Link_To_Prot_N: 1, //Link to Protocol x\n  monitoricon: 2,\n  ReadVin: 3,\n  Read_Dtc: 4,\n  freezeframe: 5,\n  Erase_Dtc: 6,\n  Read_all: 7,\n\n  pid: 8 /*\n  arg 1 : 0 , get supported\n  arg 1 : 1 , get pid data , arg 2 : pid id\n  return size + pid val if successful\n  */,\n  ReadService9: 9,\n  ReadService5: 15,\n  ReadService6: 16,\n  ReadService8: 18,\n  GetLedStatus: 0x20,\n  SetSmogCheckState: 0x21,\n  GetSmogCheckState: 0x22,\n  SetSmogCheckCountry: 0x23,\n  GetSmogCheckCountry: 0x24,\n  SetFuelType: 0x25,\n  GetFuelType: 0x26,\n  SetVehType: 0x27,\n  GetVehType: 0x28,\n  getymmeprofile: 0xfd,\n  GetReport: 0xfe,\n  Max: 255,\n};\n\nexport const enumEVAPStatus = {\n  eEVAPSTATE_NONE: 0,\n\n  eEVAPSTATE_NO_SUP: 1,\n  eEVAPSTATE_SUP_OK: 2,\n  eEVAPSTATE_RES_NEG: 3,//Negative Response\n  eEVAPSTATE_RES_NO: 4,//No Response\n\n  eEVAPSTATE_MAX: 0xFF\n}\n\nexport const VCICmd_obd2_reporttype = {\n  report_full: 0, //report list protocol query\n  report_sid1: 1, //Link to Protocol x\n  report_sid2: 2,\n  report_sid3: 3,\n  report_sid4: 4,\n  report_sid5: 5,\n  report_sid6: 6,\n  report_sid7: 7,\n\n  report_sid8: 8,\n  report_sid9: 9,\n  report_sid10: 10,\n  report_sid37A: 11,\n  report_mil_stat: 16,\n  report_drivecycle_mon_list: 0x11,\n  report_drivecycle_mon_text: 0x12,\n  report_sid6_tids: 0x13,\n  report_sid6_comp_ids: 0x14,\n  report_vehicle_data_ymme_profile: 0x21,\n  report_mon_stat: 0x31,\n  report_ff_info: 0x32,\n  report_ff_ld: 0x33,\n  report_dtcs: 0x34,\n  report_dtc_def: 0x35,\n  report_vin: 0x36,\n  report_ymme: 0x37,\n  report_vehicle_info: 0x39,\n  report_TDC_monitor: 0x41,\n  report_RPM_VSS: 0xCD,\n  Max: 255,\n};\n\nexport const VCICmd_nwscan = {\n  start: 0, //get system and subsystem\n  getsystem: 1,\n  getsubsystem: 2,\n  listoemprofileid_old: 3 /*[number system 1byte]{<System id><number subsystem><SubSystem>}*/,\n  querysystem: 4,\n  readdtsystem: 5,\n  erasedtcsystem: 6,\n  exitsystem: 7,\n  getdataofsyste: 8,\n  readdtcgroup: 9,\n  scan_all: 10,\n  quick_readsystem: 105,\n  quick_readgroup: 106,\n  listoemprofileid: 203,\n  report_dtc_system: 205,\n  get_dtc_def: 206,\n  get_dtc_listinspec: 207,\n  max: 0xff,\n};\n\nexport const VCICmd_system = {\n  getversion: 1,\n  getymme: 2,\n  setymme: 3,\n  setvin: 4,\n  resettool: 0xfe,\n};\n\nexport const VCICmd_YMME = {\n  init: 1,\n  get: 2,\n  confirm: 3,\n}\n\nexport const VCICmd_ofm = {\n  getsupport_item: 0,\n  read_item: 1,\n  stream_cfg: 2,\n  max: 0xff,\n};\n\nexport const VCI_ofm_group = {\n  ofm_group_none: 0,\n  ofm_group_odo: 1,\n  ofm_group_srv_check: 2,\n  ofm_group_warninglight: 3,\n  ofm_group_tpms: 4,\n  ofm_group_max: 255\n}\n\nexport const VCICmd_livedata = {\n  read_itemlist: 0,\n  read_itemval: 1,\n  read_list_item_val: 2,\n  set_system_subsystem: 3,\n  start_hybrid_ld: 4,\n  read_item_info: 5,\n  set_record_dtc_trigger: 8,\n  reset_record_dtc_trigger: 9,\n  check_getnumpid_group: 0x14,\n  get_listiteminfo: 0x15,\n  get_listitemval: 0x16,\n  get_itemval_v2: 0x17,\n  max: 0xff\n\n}\n\nexport const VCICmd_symptom = {\n  symptom_init: 0,\n  symptom_getui: 1,\n  symptom_setselection: 2,\n  symptom_max: 255\n}\n\nexport const VCI_symptom_getui = {\n  symptom_get_title: 0,\n  symptom_get_body: 1,\n  symptom_get_optionlist: 2,\n  symptom_get_softkey: 3,\n  symptom_getui_max: 255\n}\n\nexport const VCI_symptom_selection_type = {\n  symptom_normal_selection: 0,\n  symtom_softkey_selection: 1\n}\n\nexport const VCI_symptom_softkey_type = {\n  symptom_left_softkey: 0,\n  symptom_right_softkey: 1\n}\n\nexport const Enum_Nws_Link_Status = {\n  1: 'Not Support',\n  2: 'Success',\n  3: 'Fail',\n  4: 'Special Ford test',\n  5: 'Special Honda test',\n  6: 'Fail Input Data',\n  7: 'Fail User Event',\n  8: 'Need Retry OEM Cable',\n  9: 'Need Recycle Ignition Key',\n}\n\nexport const EnumInnovaGroups = {\n  1: 'OBDII',\n  2: 'ABS',\n  4: 'SRS',\n  8: 'TCM',\n  16: 'PCM',\n  32: 'ODBI',\n  64: 'TPMS',\n  128: 'ADAS',\n  255: 'All',\n}\n\nexport const EnumInspectionGroups = {\n  1: 'Headlight',\n  2: 'Taillight',\n  3: 'Turn Indicator Light',\n  4: 'Stop Light',\n  5: 'Foot Brake',\n  6: 'Emergency/Parking Brake',\n  7: 'Windshield Wiper',\n  8: 'Steering',\n  9: 'Window',\n  10: 'Seat Adjustment',\n  11: 'Door',\n  12: 'Horn',\n  13: 'Odometer',\n  14: 'Bumper And Body Condition',\n  15: 'Muffler And Exhaust System',\n  16: 'Tire',\n  17: 'Mirror',\n  18: 'Safety Belts',\n  254: 'Ispection Group',\n  255: 'Unknown'\n}\n\nexport const Enum_ofm_Items = {\n  0: 'Unknow',\n  1: 'Fuel Sys 1',\n  2: 'Fuel Sys 2',\n  3: 'Calc Load',\n  4: 'ECT',\n  5: 'STFT B1',\n  6: 'STFT B3',\n  7: 'LTFT B1',\n  8: 'LTFT B3',\n  9: 'STFT B2',\n  10: 'STFT B4',\n  11: 'LTFT B2',\n  12: 'LTFT B4',\n  13: 'Fuel Pres',\n  14: 'MAP',\n  15: 'Eng RPM',\n  16: 'Veh Speed',\n  17: 'Spark Adv',\n  18: 'IAT',\n  19: 'MAF',\n  20: 'TPS',\n  21: 'Air Status',\n  22: 'O2SLoc',\n  23: 'O2S B1 S1',\n  24: 'STFT B1 S1',\n  25: 'O2S B1 S2',\n  26: 'STFT B1 S2',\n  27: 'O2S B1 S3',\n  28: 'O2S B2 S1',\n  29: 'STFT B1 S3',\n  30: 'STFT B2 S1',\n  31: 'O2S B1 S4',\n  32: 'O2S B2 S2',\n  33: 'STFT B1 S4',\n  34: 'STFT B2 S2',\n  35: 'O2S B3 S1',\n  36: 'STFT B3 S1',\n  37: 'O2S B3 S2',\n  38: 'STFT B3 S2',\n  39: 'O2S B2 S3',\n  40: 'O2S B4 S1',\n  41: 'STFT B2 S3',\n  42: 'STFT B4 S1',\n  43: 'O2S B2 S4',\n  44: 'O2S B4 S2',\n  45: 'STFT B2 S4',\n  46: 'STFT B4 S2',\n  47: 'OBDSup',\n  48: 'Aux Input Status',\n  49: 'Run Time',\n  50: 'MIL Dis',\n  51: 'LAMBDA B1 S1',\n  52: 'LAMBDA B1 S2',\n  53: 'LAMBDA B1 S3',\n  54: 'LAMBDA B2 S1',\n  55: 'LAMBDA B1 S4',\n  56: 'LAMBDA B2 S2',\n  57: 'LAMBDA B3 S1',\n  58: 'LAMBDA B3 S2',\n  59: 'LAMBDA B2 S3',\n  60: 'LAMBDA B4 S1',\n  61: 'LAMBDA B2 S4',\n  62: 'LAMBDA B4 S2',\n  63: 'Command EGR',\n  64: 'EGR Error',\n  65: 'Command EVAP',\n  66: 'Fuel Level',\n  67: 'Warm-up DTC Clr',\n  68: 'Clr Dist',\n  69: 'EVAP_VP',\n  70: 'BARO',\n  71: 'CAT Te 11',\n  72: 'CAT Te 21',\n  73: 'CAT Te 12',\n  74: 'CAT Te 22',\n  75: 'ECU Volts',\n  76: 'LOAD Value',\n  77: 'EQ Ratio',\n  78: 'Rel TPS',\n  79: 'Ambient',\n  80: 'TPS B',\n  81: 'TPS C',\n  82: 'ACC Pedal D',\n  83: 'ACC Pedal E',\n  84: 'ACC Pedal F',\n  85: 'Command TAC',\n  86: 'MIL Time',\n  87: 'Clr Time',\n  88: 'FUEL_TYP',\n  89: 'ALCH_PCT',\n  90: 'EVAP_VPA',\n  91: 'STSO2FT1',\n  92: 'STSO2FT3',\n  93: 'LGSO2FT1',\n  94: 'LGSO2FT3',\n  95: 'STSO2FT2',\n  96: 'STSO2FT4',\n  97: 'LGSO2FT2',\n  98: 'LGSO2FT4',\n  99: 'APP_R',\n  100: 'BAT_PWR',\n  101: 'EOT',\n  102: 'FUEL_TIMING',\n  103: 'FUEL_RATE',\n  104: 'EMIS_SUP',\n  105: 'TQ_DD',\n  106: 'TQ_ACT',\n  107: 'TQ_REF',\n  108: 'TQ_MAX1',\n  109: 'TQ_MAX2',\n  110: 'TQ_MAX3',\n  111: 'TQ_MAX4',\n  112: 'TQ_MAX5',\n  113: 'N/D_STAT',\n  114: 'N/G_STAT',\n  115: 'GPL_STAT',\n  116: 'MAFA',\n  117: 'MAFB',\n  118: 'ECT 1',\n  119: 'ECT 2',\n  120: 'IAT 11',\n  121: 'IAT 12',\n  122: 'IAT 13',\n  123: 'IAT 21',\n  124: 'IAT 22',\n  125: 'IAT 23',\n  126: 'EGR_A_CMD',\n  127: 'EGR_A_ACT',\n  128: 'EGR_A_ERR',\n  129: 'EGR_B_CMD',\n  130: 'EGR_B_ACT',\n  131: 'EGR_B_ERR',\n  132: 'IAF_A_CMD',\n  133: 'IAF_A_REL',\n  134: 'IAF_B_CMD',\n  135: 'IAF_B_REL',\n  136: 'EGRTA',\n  137: 'EGRTB',\n  138: 'EGRTD',\n  139: 'TAC_A_CMD',\n  140: 'TP_A_REL',\n  141: 'TAC_B_CMD',\n  142: 'TP_B_REL',\n  143: 'FRP_A_CMD',\n  144: 'FRP_A',\n  145: 'FRT_A',\n  146: 'FRP_B_CMD',\n  147: 'FRP_B',\n  148: 'FRT_B',\n  149: 'ICP_A_CMD',\n  150: 'ICP_A',\n  151: 'ICP_B_CMD',\n  152: 'ICP_B',\n  153: 'TCA_CINP',\n  154: 'TCB_CINP',\n  155: 'BP_A_CMD',\n  156: 'BP_A_ACT',\n  157: 'BP_B_CMD',\n  158: 'BP_B_ACT',\n  159: 'BP_A',\n  160: 'BP_B',\n  161: 'VGT_A_CMD',\n  162: 'VGT_A_ACT',\n  163: 'VGT_B_CMD',\n  164: 'VGT_B_ACT',\n  165: 'VGT_A',\n  166: 'VGT_B',\n  167: 'WG_A_CMD',\n  168: 'WG_A_ACT',\n  169: 'WG_ B_CMD',\n  170: 'WG_B_ACT',\n  171: 'EP_1',\n  172: 'EP_2',\n  173: 'TCA_RPM',\n  174: 'TCB_RPM',\n  175: 'TCA_CINT',\n  176: 'TCA_COUTT',\n  177: 'TCA_TINT',\n  178: 'TCA_TOUTT',\n  179: 'TCB_CINT',\n  180: 'TCB_COUTT',\n  181: 'TCB_TINT',\n  182: 'TCB_TOUTT',\n  183: 'CACT 11',\n  184: 'CACT 12',\n  185: 'CACT 21',\n  186: 'CACT 22',\n  187: 'EGT11',\n  188: 'EGT12',\n  189: 'EGT13',\n  190: 'EGT14',\n  191: 'EGT21',\n  192: 'EGT22',\n  193: 'EGT23',\n  194: 'EGT24',\n  195: 'DPF1_DP',\n  196: 'DPF1_INP',\n  197: 'DPF1_OUTP',\n  198: 'DPF2_DP',\n  199: 'DPF2_INP',\n  200: 'DPF2_OUTP',\n  201: 'DPF1_INT',\n  202: 'DPF1_OUTT',\n  203: 'DPF2_INT',\n  204: 'DPF2_OUTT',\n  205: 'NNTE',\n  206: 'PNTE',\n  207: 'RUN_TIME',\n  208: 'IDLE_TIME',\n  209: 'PTO_TIME',\n  210: 'AECD1_TIME1',\n  211: 'AECD1_TIME2',\n  212: 'AECD2_TIME1',\n  213: 'AECD2_TIME2',\n  214: 'AECD3_TIME1',\n  215: 'AECD3_TIME2',\n  216: 'AECD4_TIME1',\n  217: 'AECD4_TIME2',\n  218: 'AECD5_TIME1',\n  219: 'AECD5_TIME2',\n  220: 'AECD6_TIME1',\n  221: 'AECD6_TIME2',\n  222: 'AECD7_TIME1',\n  223: 'AECD7_TIME2',\n  224: 'AECD8_TIME1',\n  225: 'AECD8_TIME2',\n  226: 'AECD9_TIME1',\n  227: 'AECD9_TIME2',\n  228: 'AECD10_TIME1',\n  229: 'AECD10_TIME2',\n  230: 'NOX11',\n  231: 'NOX12',\n  232: 'NOX21',\n  233: 'NOX22',\n  234: 'MST',\n  235: 'REAG_RATE',\n  236: 'REAG_DEMD',\n  237: 'REAG_LVL',\n  238: 'NWI_TIME',\n  239: 'PM11',\n  240: 'PM21',\n  241: 'MAP_A',\n  242: 'MAP_B',\n  243: 'SCR_INDUCE_SYSTEM',\n  244: 'SCR_INDUCE_SYSTEM_HIST1',\n  245: 'SCR_INDUCE_SYSTEM_HIST2',\n  246: 'SCR_INDUCE_SYSTEM_HIST3',\n  247: 'SCR_INDUCE_SYSTEM_HIST4',\n  248: 'SCR_IND_DIST_1N',\n  249: 'SCR_IND_DIST_1D',\n  250: 'SCR_IND_DIST_2N',\n  251: 'SCR_IND_DIST_3N',\n  252: 'SCR_IND_DIST_4N',\n  253: 'AECD11_TIME1',\n  254: 'AECD11_TIME2',\n  255: 'AECD12_TIME1',\n  256: 'AECD12_TIME2',\n  257: 'AECD13_TIME1',\n  258: 'AECD13_TIME2',\n  259: 'AECD14_TIME1',\n  260: 'AECD14_TIME2',\n  261: 'AECD15_TIME1',\n  262: 'AECD15_TIME2',\n  263: 'AECD16_TIME1',\n  264: 'AECD16_TIME2',\n  265: 'AECD17_TIME1',\n  266: 'AECD17_TIME2',\n  267: 'AECD18_TIME1',\n  268: 'AECD18_TIME2',\n  269: 'AECD19_TIME1',\n  270: 'AECD19_TIME2',\n  271: 'AECD20_TIME1',\n  272: 'AECD20_TIME2',\n  273: 'DPF_REGEN',\n  274: 'NOX_ADS_REGEN',\n  275: 'NOX_ADS_DESULF',\n  276: 'DPF_REGEN_PCT',\n  277: 'DPF_REGEN_AVGT',\n  278: 'DPF_REGEN_AVGD',\n  279: 'O2S11_PCT',\n  280: 'O2S12_PCT',\n  281: 'O2S21_PCT',\n  282: 'O2S22_PCT',\n  283: 'TP_G',\n  284: 'TQ_FR',\n  285: 'PM11_ACTIVE',\n  286: 'PM11_REGEN',\n  287: 'PM21_ACTIVE',\n  288: 'PM21_REGEN',\n  289: 'MI_DISP_VOBD',\n  290: 'MI_MODE_VOBD',\n  291: 'VOBD_RDY',\n  292: 'VOBD_MI_TIME',\n  293: 'MI_MODE_ECU',\n  294: 'OBD_MI_TIME',\n  295: 'OBD_B1_TIME',\n  296: 'FP1',\n  297: 'FIQ1',\n  298: 'FIT1',\n  299: 'IFB1',\n  300: 'FP2',\n  301: 'FIQ2',\n  302: 'FIT2',\n  303: 'IFB2',\n  304: 'MI_TIME_CUM',\n  305: 'NOX_WARN_ACT',\n  306: 'INDUC_L1',\n  307: 'INDUC_L2',\n  308: 'INDUC_L3',\n  309: 'REAG_QUAL_TIME',\n  310: 'REAG_CON_TIME',\n  311: 'REAG_DOSE_TIME',\n  312: 'EGR_TIME',\n  313: 'NOX_DTC_TIME',\n  314: 'EGT15',\n  315: 'EGT16',\n  316: 'EGT17',\n  317: 'EGT18',\n  318: 'EGT25',\n  319: 'EGT26',\n  320: 'EGT27',\n  321: 'EGT28',\n  322: 'O2S13_PCT',\n  323: 'O2S14_PCT',\n  324: 'O2S23_PCT',\n  325: 'O2S24_PCT',\n  326: 'ENG_FUEL_RATE',\n  327: 'VEH_FUEL_RATE',\n  328: 'EXH_RATE',\n  329: 'FUELSYSA_B1',\n  330: 'FUELSYSB_B1',\n  331: 'FUELSYSA_B2',\n  332: 'FUELSYSB_B2',\n  333: 'FUELSYSA_B3',\n  334: 'FUELSYSB_B3',\n  335: 'FUELSYSA_B4',\n  336: 'FUELSYSB_B4',\n  337: 'NOXC11',\n  338: 'NOXC12',\n  339: 'NOXC21',\n  340: 'NOXC22',\n  341: 'CYL_RATE',\n  342: 'HEV_MODE',\n  343: 'HEV_BATT_V',\n  344: 'HEV_BATT_A',\n  345: 'DEF Type',\n  346: 'DEF_CON',\n  347: 'DEF_T',\n  348: 'DEF_LVL',\n  349: 'GEAR_RCMD',\n  350: 'Current Fuel Consumption',\n  351: 'Average Fuel Consumption',\n  352: 'Elapsed Time',\n  353: 'Distance (Miles)',\n  354: 'Fuel Used',\n  355: 'Average Speed',\n  1024: 'Coolant Hot Light',\n  1025: 'Cruise Control Status',\n  1026: 'Fuel Level(milliliters)',\n  1027: 'Odometer',\n  1028: 'Oil Pressure Lamp',\n  1029: 'Seatbelt Fastened',\n  1030: 'Service Interval Distance (distance still next service)',\n  1031: 'Service Interval Day (time still next service)',\n  1032: 'Turn Signal Status',\n  1033: 'Brake Switch Status',\n  1034: 'Parking Brake Indicator Light',\n  1035: 'ABS Dash Indicator',\n  1036: 'Airbag Dash Indicator',\n  1037: 'Fuel Usage',\n  1038: 'Fuel Level(%)',\n  1039: 'Maintenance Required',\n  1040: 'Transmission Gear',\n  1041: 'Turn Left Signal Status',\n  1042: 'Turn Right Signal Status',\n  65535: 'Max',\n  1043: 'Calculated Odometer',\n  1044: 'Fuel Trip',\n  1045: 'Derived Engine State',\n  1046: 'Service Interval_Remain Distance',\n  1047: 'Airbag DTC',\n  1048: 'ABS DTC',\n  1049: 'Brake Pad Check',\n  1050: 'Brake Pedal Switch Status',\n  1051: 'Harsh Braking',\n  1052: 'Harsh Accelerate',\n  1053: 'Oil Life Remaining',\n  1054: 'Engine Run time (Hours)',\n  1055: 'Change Oil Lamp',\n  1056: 'Engine Oil Temp',\n  1057: 'Service Interval_Remain Time',\n  1058: 'Driver Door Status',\n  1059: 'Passenger Door Status',\n  1060: 'Rear Brake Pad Check',\n  1061: 'Front Brake Pad Check',\n  1062: 'Calculated Fuel Usage',\n  1063: 'Low Tire Pressure',\n  1064: 'A/C System Refrigerant Monitor',\n  1065: 'Ambient Air Temperature',\n  1066: 'Tire Pressure (Actual Tire Pressure)',\n  1067: 'Transmission Fluid Temperature',\n  1068: 'Charging system status',\n  1069: 'Trip Distance',\n  1070: 'OEM DTC',\n  1071: 'Left Front Tire Pressure',\n  1072: 'Left Rear Tire Pressure',\n  1073: 'Right Front Tire Pressure',\n  1074: 'Right Rear Tire Pressure',\n  1075: 'Brake Fluid Level',\n  1076: 'Brake Fluid Pressure',\n  1077: 'Brake Fluid Temperature',\n  1078: 'Brake Disc Temperature',\n  1079: 'Engine Oil Level',\n  1080: 'Engine Oil Pressure',\n  1081: 'Door Lock',\n  1082: 'Door Unlock',\n  1083: 'Starter Disable',\n  1084: 'Starter Enable',\n  1085: 'Remote Start',\n  1086: 'Horn Honk On',\n  1087: 'Horn Honk Off',\n  1088: 'Light Flashing On',\n  1089: 'Light Flashing Off',\n  1090: 'Service Interval',\n  1091: 'ABS Active Lamp',\n  1092: 'Fuel Rate',\n  1093: 'Coolant Level Switch',\n  1094: 'MIL Status',\n  1095: 'Tire 1 Position',\n  1096: 'Tire 2 Position',\n  1097: 'Tire 3 Position',\n  1098: 'Tire 4 Position',\n  1099: 'Left Front Tire Pressure Status',\n  1100: 'Left Rear Tire Pressure Status',\n  1101: 'Right Front Tire Pressure Status',\n  1102: 'Right Rear Tire Pressure Status',\n  1103: 'Spare Tire Pressure',\n  1104: 'Tire 1 Pressure',\n  1105: 'Tire 2 Pressure',\n  1106: 'Tire 3 Pressure',\n  1107: 'Tire 4 Pressure',\n  1108: 'Tire 1 Pressure Threshold',\n  1109: 'Tire 2 Pressure Threshold',\n  1110: 'Tire 3 Pressure Threshold',\n  1111: 'Tire 4 Pressure Threshold',\n  1112: 'Tire 5 Pressure Threshold',\n  1113: 'Tire 5 Position',\n  1114: 'Tire 5 Pressure',\n  1115: 'Left Front Tire Pressure Threshold',\n  1116: 'Right Front Tire Pressure Threshold',\n  1117: 'Right Rear Tire Pressure Threshold',\n  1118: 'Left Rear Tire Pressure Threshold',\n  1119: 'Spare Tire Pressure Threshold',\n  1120: 'Spare Tire Pressure Status',\n  1121: 'Tire Pressure Threshold',\n  1122: 'Tire 1 Pressure Status',\n  1123: 'Tire 2 Pressure Status',\n  1124: 'Tire 3 Pressure Status',\n  1125: 'Tire 4 Pressure Status',\n  1126: 'Engine Oil Temperature',\n  1127: 'Transmission Oil Temperature',\n  1128: 'Day Since Last Oil Change',\n  1129: 'Distance Since Last Oil Change',\n  1130: 'Service Interval Distance (distance since last oil change)',\n  1131: 'Engine Coolant Level',\n  1132: 'TPMS warning light',\n  1133: 'Left Front Sensor Battery',\n  1134: 'Left Rear Sensor Battery',\n  1135: 'Right Front Sensor Battery',\n  1136: 'Right Rear Sensor Battery',\n  1137: 'Spare Tire Sensor Battery',\n  1138: 'Tire 1 Sensor Battery',\n  1139: 'Tire 2 Sensor Battery',\n  1140: 'Tire 3 Sensor Battery',\n  1141: 'Tire 4 Sensor Battery',\n  1142: 'Tire 5 Sensor Battery',\n  1143: 'Tire Pressure Monitoring System Status',\n  1144: 'Tire Pressure Status',\n  1145: 'Tire 5 Pressure Status',\n  1146: 'Front Tire Pressure Threshold',\n  1147: 'Rear Tire Pressure Threshold',\n  1148: 'Fuel Level Volume',\n  1149: 'Service Interval Day (time since last oil change)',\n  1150: 'Steering Angle Sensor',\n  1151: 'Crash Event Occurred',\n  1152: 'Airbag deployment status',\n  1153: 'Crash Detection',\n  1154: 'Battery Voltage',\n  1155: 'Engine Coolant Temp',\n  1156: 'Engine Speed',\n  1157: 'Throttle Position',\n  1158: 'Vehicle Speed',\n  1159: 'Oil Level',\n  1160: 'ECU Part Number',\n  1161: 'Software Part Number',\n  1162: 'Pedestrian Airbag Trigger Status',\n  1163: 'Fuel Level (%)',\n  1164: 'Brake Light Switch',\n  1165: 'Actual gear',\n  1166: 'Left Front Tire Pressure Standard',\n  1167: 'Right Front Tire Pressure Standard',\n  1168: 'Left Rear Tire Pressure Standard',\n  1169: 'Right Rear Tire Pressure Standard',\n  1170: 'Spare Tire Pressure Standard',\n  1171: 'Tire 1 Pressure Standard',\n  1172: 'Tire 2 Pressure Standard',\n  1173: 'Tire 3 Pressure Standard',\n  1174: 'Tire 4 Pressure Standard',\n  1175: 'Tire 5 Pressure Standard',\n}\nexport const VCICmd_tool = {\n  getecuvoltage: 1,\n  setting_unit: 2,\n  setting_language: 3,\n};\n\nexport const UNIT_ID = {\n  Standard: 0,\n  Metric: 1\n}\n\nexport const GUI_LANGUAGE_ID = {\n  GUI_LANG_ENGLISH: 0,\n  GUI_LANG_SPANISH: 1,\n  GUI_LANG_FRENCH: 2\n}\n\nexport const SF_FunctionGroup = {\n  UNKNOWN: 0,\n  Diesel_Injector_Coding: 1,\n  Diesel_Particulate_Filter_Reset: 2,\n  Reset_Electric_Traction_System: 3,\n  Throttle_Body_Relearn: 4,\n  Throttle_Body_Relearn_OBD: 5,\n  Throttle_Body_Relearn_Procedure: 6,\n  TPMS_Relearn_OBD: 7,\n  Transmission_Reset_Adaptation: 8,\n  Idle_Speed_Relearn: 9,\n  Injector_Coding: 10,\n  Idle_Speed_Relearn_OBD: 11,\n  Idle_Speed_Relearn_Procedure: 12,\n  Transmission_Fluid_Level_Check: 13,\n  Transmission_Reset: 14,\n  Headlamp_Calibration: 15,\n  Seat_Occupied_Calibration: 16,\n  Maintenance_Reset: 17,\n  Window_Door_Roof_Reset: 18,\n  Suspension_Calibration: 19,\n  Tire_Size_Reset: 20,\n  ABS_Bleeding: 21,\n};\n\nexport const VCICmd_GUI = {\n  gui_proc_enter: 0,\n  gui_proc_leave: 1,\n  gui_proc_terminate: 2,\n  gui_set_key: 20,\n  gui_set_key_with_index: 21,\n  gui_set_param: 30,\n  gui_lcd_display: 40,\n  gui_set_special_function_group: 50,\n  gui_host_ack: 60,\n  gui_set_special_at_module: 70,//set system subsystem\n  gui_max: 255\n};\n\nexport const VCI_Data_Logging = {\n  EN_NO_LOG: 0x00,\n  EN_OBDII: 0x01,\n  EN_ECM: 0x02,\n  EN_TCM: 0x03,\n  EN_ABS: 0x04,\n  EN_SRS: 0x05,\n  EN_TPMS: 0x06,\n  EN_Allsystems: 0x07,\n  EN_ABSLD: 0x08,\n  EN_SRSLD: 0x09,\n  EN_TCMLD: 0x0A,\n  EN_TPMSLD: 0x0B,\n  EN_ECMAT: 0x0C,\n  EN_ECMSF: 0x0D,\n  EN_OilReset: 0x0E,\n  EN_BatteryReset: 0x0F,\n  EN_SAScalibration: 0x10,\n  EN_EPBreset: 0x11,\n  EN_TPMSRelearn: 0x12,\n  EN_ThrottleBodyRelearn: 0x13,\n  EN_ElectricTractionSystemReset: 0x14,\n  EN_DPFReset: 0x15,\n  EN_MaintenanceReset: 0x16,\n  EN_Tiresizereset: 0x17,\n  EN_SuspensionCalibration: 0x18,\n  EN_HeadlampCalibration: 0x19,\n  EN_WindowDoorRoofReset: 0x1A,\n  EN_SeatOccupiedCalibration: 0x1B,\n  EN_ABSBleeding: 0x1C,\n  EN_TransmissionReset: 0x1D,\n  EN_TransmissionFluidChangeReset: 0x1E,\n  EN_TransmissionFluidLevelCheck: 0x1F,\n  EN_InjectorCoding: 0x20,\n  EN_All: 0xFF,\n}\n\nexport const VCI_GUI_Param_Type = {\n  param_selection: 0,\n  param_input: 1\n}\n\nexport const SYS_PROC_ID = {\n  /*==========================================================================\n                    FIXED AREA DECLARE - DO NOT CHANGE\n    ==========================================================================*/\n  PROC_NONE: 0,\n\n  PROC_CURRENT: 1,\n  PROC_PREVIOUS: 2,\n\n  PROC_TOOL_INIT: 3,\n\n  /*==========================================================================\n                  USER UI PROCESSES - ADD MORE FROM HERE\n  ==========================================================================*/\n  PROC_SERVICE_RESET: 10,\n  PROC_BATTERY_HEALTH_CHECK: 28,\n  PROC_BATTERY_ALTERNATOR_HEALTH_CHECK: 29,\n\n  PROC_OIL_RESET: 45,\n  PROC_OEM_BAT_RESET: 46,\n  PROC_OILRESETSF: 47,\n  PROC_OILRESETSF_LINKING: 48,\n\n  /*-------- Active Test -----------*/\n  PROC_ACTIVE_TEST: 15000,\n  PROC_AT_LINKING: 15001,\n  PROC_AT_LD: 15002,\n  PROC_AT_LIST_FUNCTION: 15003,\n\n\n  /*-------- Special Function -----------*/\n  PROC_SPECIAL_FUNCTION: 15004,\n  PROC_SF_LINKING: 15005,\n  /*2016Nov07 SiT added for Battery reset with Special Function flow*/\n  PROC_BAT_LINKING: 15006,\n  PROC_OEM_BAT_RESET_SF: 15007,\n\n  /*-------- System And Actual Test -----------*/\n  PROC_SYSTEM_AND_ACTUAL_TEST: 15008,\n\n  /*-------- Steering Angle Sensor-------------*/\n  PROC_SAS_LINKING: 15009,\n  PROC_SAS_CALIBRATION: 15010,\n\n  /*-------- EPB-------------*/\n  PROC_EPB_LINKING: 15011,\n  PROC_EPB: 15012,\n  PROC_TPMS_RESET_MENU: 15013,\n  PROC_TPMS_PROCEDURE: 15014,\n  PROC_DPF_RESET: 15015,\n  PROC_DPF_RESET_SF: 15016,\n\n  /* Diagnostic Routine */\n  PROC_DIAGNOSTIC_ROUTINE: 15017,\n  PROC_DIAGNOSTIC_ROUTINE_LINKING: 15018,\n  /* Service Check */\n  // PROC_SERVICE_CHECK                  ,\n  // PROC_HYBRID_BATT_CHECK              ,\n  //\n  //\n  // PROC_SETUP_WIFI_APP     ,\n\n  /*==========================================================================\n          END OF USER UI PROCESSes\n  ==========================================================================*/\n  PROC_ID_MAX: 0xFFFF,\n}\n\nexport const SYS_CMD_ID = {\n  /*==========================================================================\n                    FIXED AREA DECLARE - DO NOT CHANGE\n    ==========================================================================*/\n  CMD_NONE: 0,\n  /*------- BASIC COMMANDs -------------*/\n  CMD_CURRENT: 1,\n  CMD_PREVIOUS: 2,\n  CMD_INIT_PROC: 3,\n  CMD_END_PROC: 4,\n  CMD_EXIT: 5,\n  CMD_DISP: 6,\n  CMD_WAITING: 7,\n\n\n\n  //#warning do not declare command lager than 1000 here\n  /*==========================================================================\n              END OF USER UI COMMANDs\n  ==========================================================================*/\n  CMD_ID_MAX: 0xFFFF\n}\n\nexport const GUI_KEY_CODE =\n{\n  GUI_KEY_NONE: 0,\n  GUI_KEY_ERASE: (1 << 0),\n  GUI_KEY_ENTER: (1 << 1),\n  GUI_KEY_UP: (1 << 2),\n  GUI_KEY_DOWN: (1 << 3),\n  GUI_KEY_POWER_LINK: (1 << 4),\n  GUI_KEY_DTC: (1 << 5),\n  GUI_KEY_MENU: (1 << 6),\n  GUI_KEY_FF: (1 << 7),\n  GUI_KEY_LD: (1 << 8),\n  GUI_KEY_SYSTEM: (1 << 9),\n  GUI_SOFTKEY_1: (1 << 10),/*2016June30 SiT added*/\n  GUI_SOFTKEY_2: (1 << 11),\n  GUI_SOFTKEY_3: (1 << 12),\n  GUI_KEY_RESERVED_13: (1 << 13),\n  GUI_KEY_RESERVED_14: (1 << 14),\n  GUI_KEY_RESERVED_15: (1 << 15),\n\n  GUI_KEY_ALL: (0xFFFF)\n};\n\nexport const enumSmogCheckLoc =\n{\n  Arizona: 0x01,\n  California: 0x02,\n  Colorado: 0x03,\n  Connecticut: 0x04,\n  DC: 0x05,\n  Delaware: 0x06,\n  Georgia: 0x07,\n  Idaho: 0x08,\n  Illinois: 0x09,\n  Indiana: 0x0A,\n  Louisiana: 0x0B,\n  Maine: 0x0C,\n  Maryland: 0x0D,\n  Massachusetts: 0x0E,\n  Missouri: 0x0F,\n  Nevada: 0x10,\n  NewHampshire: 0x11,\n  NewJersey: 0x12,\n  NewMexico: 0x13,\n  NewYork: 0x14,\n  NorthCarolina: 0x15,\n  Ohio: 0x16,\n  Oregon: 0x17,\n  Pennsylvania: 0x18,\n  RhodeIsland: 0x19,\n  Tennessee: 0x1A,\n  Texas: 0x1B,\n  Utah: 0x1C,\n  Vermont: 0x1D,\n  Virginia: 0x1E,\n  Wisconsin: 0x1F,\n  NoIMProg: 0x20,\n\n  // eSmogCheckLoc_NONE: 0,\n  // eSmogCheckLoc_California_CARB: 1,\n  // eSmogCheckLoc_Wisconsin: 2,\n  // eSmogCheckLoc_NewYork: 3,\n  // eSmogCheckLoc_Oregon: 4,\n  // eSmogCheckLoc_Idaho: 5,\n  // eSmogCheckLoc_Utah: 6,\n  // eSmogCheckLoc_Missouri: 7,\n  // eSmogCheckLoc_Indiana: 8,\n  // eSmogCheckLoc_Massachusetts: 9,\n  // eSmogCheckLoc_Others_With_IM_Prog: 0xFE,\n  // eSmogCheckLoc_No_IM_Prog: 0xFF\n};\n\nexport const enumSmogCheckLocCountry = {\n  Cache: 0x01,\n  Davis: 0x02,\n  SaltLake: 0x03,\n  Utah: 0x04,\n  Weber: 0x05,\n  Ada: 0x06,\n  Canyon: 0x07,\n  NoProgram: 0x08,\n};\n\nexport const enumFuelType =\n{\n  eFuelType_UNKNOWN: 0,\n  eFuelType_GAS: 1,\n  eFuelType_DIESEL: 2,\n  eFuelType_MAX_255: 0xFF,\n};\n\n\nexport const ICOMMANDS = {\n  xxx:\n  {\n    id: 0xE3,\n    group: 'Firmware',\n    description: 'Goto Firmware Screen',\n  },\n  getVehicleData:\n  {\n    id: 0x01,\n    description: 'Get Vehicle Data buffer(ID=01)'\n  },\n  getFreezeFrameData:\n  {\n    id: 0x03,\n    description: 'Get FreezeFrame Data(ID=03)',\n    timeout: 0.3 * 60 * 1000\n  },\n  getDtcs:\n  {\n    id: 0x3F,\n    description: 'Get DTC(ID=3F)',\n    timeout: 0.3 * 60 * 1000\n  },\n  getVIN:\n  {\n    id: 0x40,\n    description: 'Get Vehicle Identification Number(ID=40)',\n    timeout: 2000//0.5 * 60 * 1000\n  },\n  getSupportedPIDs:\n  {\n    id: 0x41,\n    description: 'Get supported PID list for OBD2 LD(ID=41)',\n    format: 'bytes'\n  },\n  registerPIDs:\n  {\n    id: 0x42,\n    description:\n      `Register PID list for polling(ID=42)\n    Time(2 byte), Enable/Disable(1 byte), PID1 (1 byte)`,\n    input: { length: 16 },\n    timeout: 0.3 * 60 * 1000\n  },\n  unregisterPIDs:\n  {\n    id: 0x43,\n    description: 'Unregister All Configured PID'\n  },\n  poll:\n  {\n    id: 0x44,\n    description: 'Start/Stop Bus Poll(ID=44)',\n    options: [\n      { text: 'Start Poll', value: [1] },\n      { text: 'Stop Poll', value: [0] }\n    ]\n  },\n  readRegisteredPIDs:\n  {\n    id: 0x45,\n    description: 'Read Result of Registered PID(ID=45)'\n  },\n  stream:\n  {\n    id: 0x46,\n    description: 'Start/Stop Stream PID Result(ID=46)',\n    options: [\n      { text: 'Start Streaming', value: [1] },\n      { text: 'Stop Streaming', value: [0] }\n    ]\n  },\n  clearVehicleDiscovery:\n  {\n    id: 0x47,\n    description: 'Clear Vehicle Discovery Info(ID=47)'\n  },\n  startVehicleDiscovery:\n  {\n    id: 0x48,\n    description: 'Start Vehicle Discovery(ID=48)',\n    timeout: 2 * 60 * 1000\n  },\n  setResponseFormat:\n  {\n    id: 0x49,\n    description: 'Set Raw/Readable response(ID=49)',\n    options: [\n      { text: 'Use Raw', value: [0] },\n      { text: 'Use JSON', value: [1] }\n    ],\n    timeout: 1000\n  },\n  LogData:\n  {\n    id: 0x5A,\n    description: 'Data Logging(ID=5A)',\n    setfuncid:\n    {\n      id: 0x01,\n      description: 'Set Log Function(ID=01)',\n      options: [\n        { text: 'NO_LOG', value: VCI_Data_Logging.EN_NO_LOG },\n        { text: 'OBD II', value: VCI_Data_Logging.EN_OBDII },\n        { text: 'ECM', value: VCI_Data_Logging.EN_ECM },\n        { text: 'TCM', value: VCI_Data_Logging.EN_TCM },\n        { text: 'ABS', value: VCI_Data_Logging.EN_ABS },\n        { text: 'SRS', value: VCI_Data_Logging.EN_SRS },\n        { text: 'TPMS', value: VCI_Data_Logging.EN_TPMS },\n        { text: 'All systems', value: VCI_Data_Logging.EN_Allsystems },\n        { text: 'ABS LD', value: VCI_Data_Logging.EN_ABSLD },\n        { text: 'SRS LD', value: VCI_Data_Logging.EN_SRSLD },\n        { text: 'TCM LD', value: VCI_Data_Logging.EN_TCMLD },\n        { text: 'TPMS LD', value: VCI_Data_Logging.EN_TPMSLD },\n        { text: 'ECM AT', value: VCI_Data_Logging.EN_ECMAT },\n        { text: 'ECM SF', value: VCI_Data_Logging.EN_ECMSF },\n        { text: 'Oil Reset', value: VCI_Data_Logging.EN_OilReset },\n        { text: 'Battery Reset', value: VCI_Data_Logging.EN_BatteryReset },\n        { text: 'SAS calibration', value: VCI_Data_Logging.EN_SAScalibration },\n        { text: 'EPB reset', value: VCI_Data_Logging.EN_EPBreset },\n        { text: 'TPMS Relearn', value: VCI_Data_Logging.EN_TPMSRelearn },\n        { text: 'Throttle Body Relearn', value: VCI_Data_Logging.EN_ThrottleBodyRelearn },\n        { text: 'Electric Traction System Reset', value: VCI_Data_Logging.EN_ElectricTractionSystemReset },\n        { text: 'DPF Reset', value: VCI_Data_Logging.EN_DPFReset },\n        { text: 'Maintenance Reset', value: VCI_Data_Logging.EN_MaintenanceReset },\n        { text: 'Tire size reset', value: VCI_Data_Logging.EN_Tiresizereset },\n        { text: 'Suspension Calibration', value: VCI_Data_Logging.EN_SuspensionCalibration },\n        { text: 'Headlamp Calibration', value: VCI_Data_Logging.EN_HeadlampCalibration },\n        { text: 'Window Door Roof Reset', value: VCI_Data_Logging.EN_WindowDoorRoofReset },\n        { text: 'Seat Occupied Calibration', value: VCI_Data_Logging.EN_SeatOccupiedCalibration },\n        { text: 'ABS Bleeding', value: VCI_Data_Logging.EN_ABSBleeding },\n        { text: 'Transmission Reset', value: VCI_Data_Logging.EN_TransmissionReset },\n        { text: 'Transmission Fluid Change Reset', value: VCI_Data_Logging.EN_TransmissionFluidChangeReset },\n        { text: 'Transmission Fluid Level Check', value: VCI_Data_Logging.EN_TransmissionFluidLevelCheck },\n        { text: 'Injector Coding', value: VCI_Data_Logging.EN_InjectorCoding },\n        { text: 'Enable All', value: VCI_Data_Logging.EN_All },\n        //{text: 'ECM LiveData', value: [VCI_Data_Logging.EN]},\n      ]\n    },\n    startlog: {\n      id: 0x02,\n      description: 'Begin Log(ID=02)',\n      options: []\n    },\n    stoplog: {\n      id: 0x03,\n      description: 'Stop Log(ID=03)',\n      options: []\n    },\n    getlog: {\n      id: 0x04,\n      description: 'Get Log(ID=04)',\n      options: []\n    },\n    getlog_encrypt: {\n      id: 0x05,\n      description: 'Get Log Encrypt(ID=05)',\n      options: []\n    },\n    timeout: 1000\n  },\n  getIMReadiness:\n  {\n    id: 0x4b,\n    description: 'Get IM Readiness(ID=4b)'\n  },\n  getToolSettings:\n  {\n    id: 0xE1,\n    description: 'Get Tool Setting(ID=E1)',\n    timeout: 1000\n  },\n  eraseFirmwareAndJumpToBootloader:\n  {\n    id: 0xE2,\n    description: 'Erase FW/BL then jump to boot loader/FW(ID=E2)'\n  },\n  upgradeFirmware: {\n    id: 0xE3,\n    description: 'Upgrade FW/BL data package(IE=E3)'\n  },\n  reboot:\n  {\n    id: 0xE4,\n    description: 'Reboot Dongle Hardware(ID=E4)'\n  },\n  getGuid:\n  {\n    id: 0xE5,\n    description: 'Get Device GUID(ID=E5)'\n  },\n  setGuid:\n  {\n    id: 0xE6,\n    description: 'Set Device GUID(ID=E6)',\n    dataLength: 2,\n    input: { length: 16 }\n  },\n  getUsbProductId:\n  {\n    id: 0xE7,\n    description: 'Get Device USB PID(ID=E7)',\n    retries: 3,\n    timeout: 1000\n  },\n  getOEMSupportedPIDs:\n  {\n    id: 0x61,\n    timeout: 1 * 60 * 1000,\n    retries: 3,\n    description: 'Get OEM supported PID list (ID=61)'\n  },\n  getOEMPIDData:\n  {\n    id: 0x62,\n    description: 'Get OEM Pid data (ID=62)'\n  },\n  getOEMBuffer:\n  {\n    id: 0x70,\n    description: 'Get OEM Buffer (ID=70)'\n  },\n  getOEMDTC:\n  {\n    id: 0x71,\n    description: 'Get OEM DTC (ID=71)'\n  },\n  eraseOEMDTC:\n  {\n    id: 0x72,\n    description: 'Erase OEM DTC'\n  },\n  registerOEMPIDs:\n  {\n    id: 0x73,\n    description:\n      `Register OEM PID list for polling(ID=73)\n    Time(2 byte), Enable/Disable(1 byte), PID1 (1 byte)`,\n    input: { length: 16 },\n    timeout: 0.3 * 60 * 1000\n  },\n  unregisterOEMPIDs:\n  {\n    id: 0x74,\n    description: 'Unregister All Configured OEM PID(ID=74)'\n  },\n  streamOEM:\n  {\n    id: 0x75,\n    description: 'Start/Stop OEM Live Data Stream(ID=75)',\n    options: [\n      { text: 'Start Streaming', value: [1] },\n      { text: 'Stop Streaming', value: [0] }\n    ]\n  },\n  batteryHealthCheck:\n  {\n    id: 0x80,\n    description: 'Battery health check(ID=80)',\n    timeout: 60 * 1000\n  },\n\n  // for BLE tool\n  getVehicleV5Data:\n  {\n    id: 0x80,\n    retries: 3,\n    description: 'Get Vehicle Data buffer V5(ID=80)'\n  },\n  registerNotifyEvents:\n  {\n    id: 0xCE,\n    retries: 1,\n    description: 'Register Notify Events'\n  },\n  getStoredVehicles:\n  {\n    id: 0x81,\n    description: 'Get vehicle data information (ID=81)'\n  },\n  selectVehicle:\n  {\n    id: 0x82,\n    description: 'Select vehicle data buffer (ID=82)'\n  },\n  batteryCheck:\n  {\n    id: 0x3C,\n    description: 'Battery Check(ID=0x3C)',\n    timeout: 1000\n  },\n};\n\nexport const USBHIDCommand_64 =\n{\n  eVEHICLE_DATA_YMME_PROFILE: { MaxNumBuff: 1, cmd: 1, desc: 'Vehicle YMME profile data' },\n  eVEHICLE_DATA_OBD2_LD_SID1_BUFF: { MaxNumBuff: 2, cmd: 11, desc: ' OBD2 Sid$01 data buffer\t                (2 buffers for ECM and TCM)' },\n  eVEHICLE_DATA_OBD2_FF_SID2_BUFF: { MaxNumBuff: 2, cmd: 12, desc: ' OBD2 FreezeFrame Sid$02 data buffer\t    (2 buffers for ECM and TCM)' },\n  eVEHICLE_DATA_OBD2_DTC_SID37A_BUFF: { MaxNumBuff: 2, cmd: 13, desc: ' OBD2 DTCs buffer Sid$03, Sid$07, Sid$0A\t(2 buffers for ECM and TCM)' },\n  eVEHICLE_DATA_OBD2_SPECIALTEST_SID568_BUFF: { MaxNumBuff: 1, cmd: 14, desc: ' OBD2 Sid$05, Sid$06, Sid$08               (just 1 buffer)' },\n  eVEHICLE_DATA_OBD2_SPECIALTEST_SID5_BUFF: { MaxNumBuff: 1, cmd: 145, desc: ' OBD2 Sid$05               (just 1 buffer)' },\n  eVEHICLE_DATA_OBD2_SPECIALTEST_SID6_BUFF: { MaxNumBuff: 1, cmd: 146, desc: ' OBD2 Sid$06               (just 1 buffer)' },\n  eVEHICLE_DATA_OBD2_SPECIALTEST_SID8_BUFF: { MaxNumBuff: 1, cmd: 148, desc: ' OBD2 Sid$08               (just 1 buffer)' },\n  eVEHICLE_DATA_OBD2_VEHINFO_SID9_BUFF: { MaxNumBuff: 2, cmd: 15, desc: ' OBD2 Sid$09                               (2 buffers for ECM and TCM)' },\n  eVEHICLE_DATA_OBD2_RECORED_LD_BUFF: { MaxNumBuff: 1, cmd: 16, desc: ' OBD2 Recorded Live Data data' },\n  eVEHICLE_DATA_OEM_MODULE_BUFF: { MaxNumBuff: 100, cmd: 51, desc: ' OEM modules DTC (includes Module Info)    (Currently we have 100 buffers)' },\n  eVEHICLE_DATA_OBD2_FF_SID2_BUFF_RAW: { MaxNumBuff: 2, cmd: 0x70, desc: ' OBD2 FreezeFrame Sid$02 raw data buffer\t    (2 buffers for ECM and TCM)' },\n}\n\n\nexport const FreezeFrameDataTypes = {\n  DTC_INFO: 1,\n  LD_HEADER: 2,\n  LD_ITEM_NAME_STRING: 3,\n  LD_ITEM_UNIT_STRING: 4,\n  LD_ITEM_VALUE_STRING: 5,\n};\n\nexport const Metrics = {\n  USA: 0,\n  METRIC: 1,\n};\n\nexport const TransferStatus = {\n  TRANSFERRING: 0xbb,\n  COMPLETED: 0xaa,\n  VALID: 0xaa,\n};\n\nexport const Languages = {\n  ENGLISH: 1,\n  SPANISH: 2,\n  FRENCH: 3,\n};\n\n\n//todo\n\nexport const VehicleDataTypes = {\n  YMME_PROFILE: 1,\n  OBD2_LD_SID1_BUFF: 11,\n  OBD2_FF_SID2_BUFF: 12,\n  OBD2_DTC_SID37A_BUFF: 13,\n  OBD2_SPECIALTEST_SID568_BUFF: 14,\n  OBD2_VEHINFO_SID9_BUFF: 15,\n  OBD2_RECORED_LD_BUFF: 16,\n  OEM_MODULE_BUFF: 51,\n};\n\nexport const BufferSegmentTypes = {\n  VERSION: 0,\n  VIN_PROFILE: 1,\n  MONITOR_ICON: 2,\n  FREEZE_FRAME: 3,\n  DTC: 4,\n  SPECIAL_TEST: 5,\n  VEHICLE_INFO: 6,\n  LIVE_DATA: 7,\n  OEM_DATA: 8,\n};\n","import { Injectable } from '@angular/core';\nimport * as ENUMVCIs from './vcistd'\nimport { OBDx } from './obd'\nimport * as _ from 'lodash'\nimport * as DataParser from './../utilities/dataParser'\nimport { enumInnovagroup } from '../standard/enums';\nimport { isNullOrUndefined } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class YMME extends OBDx {\n  async init(): Promise<boolean>\n  {\n    try{\n      await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.ymme,\n          stateid: ENUMVCIs.VCICmd_YMME.init, usbData: [],\n          nretry: 1, timeout: 10000\n      });\n      return true;\n    }catch(err){\n      this.logdebug('Error initialize YMME Selection:'+err)\n      return false;\n    }\n  }\n\n  async get(sel_id)\n  {\n    return new Promise(async resolve => {\n      try{\n        const usbData = [...DataParser.numberToBytes(sel_id, 1)];\n        const data = await this.LinkVciCmd({\n            Procid: ENUMVCIs.VCIProg.ymme,\n            stateid: ENUMVCIs.VCICmd_YMME.get, usbData,\n            nretry: 1, timeout: 10000\n        });\n        let j ={}\n        if(isNullOrUndefined(data))\n        {\n            j= {}\n        }\n        else\n        {\n            j= JSON.parse(DataParser.bytesToString(data) as string);\n        }\n        return resolve(j);\n      }catch(err){\n        this.logdebug('Error initialize YMME get selection:'+err)\n        return resolve({});\n      }\n    })\n\n  }\n\n  async confirm()\n  {\n    try{\n      await this.LinkVciCmd({\n          Procid: ENUMVCIs.VCIProg.ymme,\n          stateid: ENUMVCIs.VCICmd_YMME.confirm, usbData: [],\n          nretry: 1, timeout: 10000\n      });\n      return true;\n    }catch(err){\n      this.logdebug('Error initialize YMME confirm:'+err)\n      return false;\n    }\n  }\n\n}\n","/**\n * @Author: quocdo-macbook\n * @Date:   2020-12-21T08:20:18+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2021-12-29T11:11:35+07:00\n */\n\n\n\nimport { OBD2FF } from './obd/obd2ff';\nimport { Injectable } from '@angular/core';\nimport { EnumNotify, NotifyDataType, enumProtocol, enumInnovagroup, EnumSerialType } from './standard/enums';\nimport { NotifyService } from './utilities/notify.service'\nimport { CommandService } from './command/command.service'\nimport { OBD2 } from './obd/obd2'\nimport { YMME } from './obd/ymme'\nimport { NWSCAN } from './obd/nwscan';\nimport { Livedata } from './obd/livedata';\nimport { OBDSystem } from './obd/OBDSystem';\nimport { GUI } from './obd/gui';\nimport { Symptom } from './obd/symptom';\nimport { OFM } from './obd/ofm';\nimport * as Dataparser from './utilities/dataParser'\nimport * as ENUMVCIs from './obd/vcistd'\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OBDService {\n\n  isDevConnected: boolean;\n  isBTDevConnected: Subscription;\n  registerCallback: Subscription;\n  toolInfo: string = null;\n  apiVersion: String = '1.16';\n  serial_type: EnumSerialType;\n  constructor(private notifyService: NotifyService,\n    private commService: CommandService,\n    private obd2: OBD2,\n    private nwscan: NWSCAN,\n    private obdsystem: OBDSystem,\n    private obd2ff: OBD2FF,\n    private ofm: OFM,\n    private livedata: Livedata,\n    private symptom: Symptom, private ymme: YMME,\n    private gui: GUI) {\n    this.isDevConnected = false\n  }\n\n\n  /**\n   *\n   *\n   * @param {(NotifyDataType) => any} [cb=null] : register notify process\n   * @returns {Promise<boolean>}\n   * @memberof OBDService\n   */\n  async initialize(cb: (NotifyDataType) => any = null): Promise<boolean> {\n\n    this.isDevConnected = await this.commService.initialize(EnumSerialType.Bluetooth)\n\n    // changed by ngoclb\n    if (this.isDevConnected) {\n      if (this.registerCallback) {\n        this.registerCallback.unsubscribe();\n      }\n      if (cb) {\n        this.registerCallback = this.notifyService.Event.subscribe(t => cb(t))\n      }\n      this.isDevConnected = await this.obd2.initialize();\n    }\n\n    return this.isDevConnected;\n  }\n\n  /**\n   * [initialize_ble function initialize bluetooth]\n   * @param  {(NotifyDataType) => any} [cb=null] : register notify process\n   * @return   {Promise<boolean>}\n   */\n  async initialize_bt(cb: (NotifyDataType) => any = null): Promise<boolean> {\n    const stt = await this.commService.initialize(EnumSerialType.Bluetooth)\n    // added by lbngoc\n    if (stt) {\n      if (this.registerCallback) {\n        this.registerCallback.unsubscribe();\n      }\n      if (cb) {\n        this.registerCallback = this.notifyService.Event.subscribe(t => cb(t));\n        this.isDevConnected = await this.obd2.initialize(1500);\n        if (!this.isDevConnected) {\n          // await this.disconnectBluetoothDevices();\n        }\n      }\n    }\n\n    //this.isDevConnected = false;\n    return stt;\n  }\n\n  async disconnectBluetoothDevices(): Promise<boolean> {\n    if (this.isBTDevConnected) {\n      this.isBTDevConnected.unsubscribe();\n      this.isBTDevConnected = null;\n    }\n    return await this.commService.disconnectBluetoothDevices();\n  }\n\n  BluetoothIsConnected(): any {\n    return this.isBTDevConnected;\n  }\n\n  stopQuery() {\n    return this.obd2.stopQuery();\n  }\n\n  async get_list_bt_devices(): Promise<any> {\n    return await this.commService.getBluetoothDevicesList();\n  }\n\n  async get_list_bt_bondeddevices(): Promise<any> {\n    return await this.commService.getBluetoothBondedDevicesList();\n  }\n\n\n\n  public async connectBlueToothDevice(macAddress: string): Promise<boolean> {\n    console.log('connectBlueToothDevice macAddress: ', macAddress);\n    // modified by NGOCLB\n    return new Promise(async (resolve) => {\n      console.log('resolve: ', resolve);\n      this.isBTDevConnected = await this.commService.connectBlueToothDevice(macAddress, (isSuccess) => {\n        // this.isBTDevConnected.add(() => {\n        //   let isSuccess = !this.isBTDevConnected.closed;\n        if (!isSuccess) {\n          this.isBTDevConnected = null;\n        }\n        resolve(isSuccess);\n        // });\n      });\n    })\n  }\n\n  public async getVehReport_YMME_String() { return await this.obd2.getYMMEString() }\n  public async getVehReport_MonitorIconStatus() { return await this.obd2.getMonitorIcon() }\n  public async getVehReport_MonitorIconStatus_PID41() { return await this.obd2.getMonitorIcon_SID41() }\n  public async getVehReport_RPM_VSS() { return await this.obd2.getRPM_VSS() }\n  public async getVehReport_FreezeFrameDTCInfo() { return await this.obd2.getFreezeFrameDTCInfo() }\n  public async getVehReport_FreezeFrameLDInfo() { return await this.obd2.getFreezeFrameLiveData() }\n  public async getVehReport_OBD2_DTC_Info() { return await this.obd2.getOBD2DTCInfo() }\n  public async getVehReport_OBD2_VehicleInfo_SID9() { return await this.obd2.getVehicleInfo_SID9() }\n  public async getVehReport_OBD2_DTC_Def(moduleindex, index) { return await this.obd2.getOBD2DTCDef(moduleindex, index) }\n  public async getVehReport_YMME_PROFILE() { return await this.obd2.getVehReport_YMME_PROFILE() }\n  public async getVehReport_OBD2_LD_SID1_BUFF() { return await this.obd2.getVehReport_OBD2_LD_SID1_BUFF_new() }\n  public async getVehReport_OBD2_FF_SID2_BUFF() {\n\n    //NXP do not support readble format\n    return await this.obd2.getVehReport_OBD2_FF_SID2_BUFF_RAW_new()\n\n  }\n  public async getVehReport_OBD2_DTC_SID37A_BUFF() { return await this.obd2.getVehReport_OBD2_DTC_SID37A_BUFF_new() }\n  //public async getVehReport_OBD2_SPECIALTEST_SID568_BUFF() { return await this.obd2.getVehReport_OBD2_SPECIALTEST_SID568_BUFF() }\n  public async getVehReport_OBD2_SPECIALTEST_SID5_BUFF() { return await this.obd2.getVehReport_OBD2_SPECIALTEST_SID5_BUFF_new() }\n  public async getVehReport_OBD2_SPECIALTEST_SID6_BUFF() { return await this.obd2.getVehReport_OBD2_SPECIALTEST_SID6_BUFF_v2() }\n  public async getVehReport_OBD2_SPECIALTEST_SID8_BUFF() { return await this.obd2.getVehReport_OBD2_SPECIALTEST_SID8_BUFF_new() }\n  public async getVehReport_OBD2_VEHINFO_SID9_BUFF() { return await this.obd2.getVehReport_OBD2_VEHINFO_SID9_BUFF_new() }\n  public async getVehReport_OBD2_RECORED_LD_BUFF() { return await this.obd2.getVehReport_OBD2_RECORED_LD_BUFF() }\n  public async getVehReport_OEM_MODULE_BUFF() { return await this.obd2.getVehReport_OEM_MODULE_BUFF() }\n  public async linkVehReport_OBD2_SPECIALTEST_SID6() { return this.obd2.link_OBD2_SPECIALTEST_SID6() }\n  public async linkVehReport_OBD2_SPECIALTEST_SID5() { return this.obd2.link_OBD2_SPECIALTEST_SID5() }\n  public async linkVehReport_OBD2_SPECIALTEST_SID8() { return this.obd2.link_OBD2_SPECIALTEST_SID8() }\n  public async OBD2_erase_Dtcs() { return this.obd2.Erase_OBD2_Dtcs() }\n  async getVersion() {\n    return {\n      ...await this.obd2.getInfo(),\n      'apiVersion': this.apiVersion\n    }\n  }\n\n  isConnected() {\n    return this.isDevConnected;\n  }\n\n  async setVINString(vinstring) {\n    return this.nwscan.setVinString(vinstring);\n  }\n  /**\n   * Query OBD2 , trying all basic protocol J1979\n   *\n   * @param {({ percent, index, total, message, isfinish }) => any} [cb=null] use to notify linking info\n   * @returns {Promise<enumProtocol>} linked protocol\n   * @memberof OBDService\n   */\n  async obd2Query(cb: ({ percent, index, total, message, isfinish }) => any = null, isNeedCheckVoltage?: boolean): Promise<enumProtocol> {\n    const resp = await this.obd2.Query((obd2info) => {\n      cb && cb(obd2info)\n    }, isNeedCheckVoltage)\n    return resp\n  }\n\n\n  /**\n   * collect data of full obd2 : Monitor Icon , FF , DTC , VIN and Get Report\n   *\n   * @param {({ message }) => any} [cb=null]\n   * @returns  {Promise<any>} OBD2 Buffer in raw\n   * @memberof OBDService\n   */\n\n  async getBluetoothName(): Promise<string> {\n    return await this.obd2.GetBluetoothName();\n  }\n\n  async setBluetoothName(newName) {\n    const resp = await this.obd2.SetBluetoothName(newName)\n    return resp\n  }\n\n  async obd2RetriveData(cb: ({ message }) => any = null) {\n    const resp = await this.obd2.retreiveData((linkinfo) => {\n      cb && cb(linkinfo)\n    })\n    return resp\n  }\n\n  async obd2FFDTCMonRetriveData(cb: ({ message }) => any = null) {\n    const resp = await this.obd2.retreiveFFDTCMonData((linkinfo) => {\n      cb && cb(linkinfo)\n    })\n    return resp\n  }\n\n  async obd2DTCRetriveData(cb: ({ message }) => any = null) {\n    const resp = await this.obd2.retreiveDTCData((linkinfo) => {\n      cb && cb(linkinfo)\n    })\n    return resp\n  }\n\n  async obd2QuickRetriveData(cb: ({ message }) => any = null, readFFDtc?: boolean) {\n    const resp = await this.obd2.quick_retreiveData((linkinfo) => {\n      cb && cb(linkinfo)\n    }, readFFDtc)\n    return resp\n  }\n\n  delay(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  /**\n   * OBD2 Autolink Process , Trying query  , retreive data then get report data in raw\n   *\n   * @param {({ percent, index, total, message, isfinish }) => any} [cb=null]\n   * @returns {Promise<boolean>} true:success , false : fail\n   * @memberof OBDService\n   */\n  async obd2AutoLink(cb: ({ percent, index, total, message, isfinish }) => any = null) {\n    try {\n      const linkedPro = await this.obd2Query(cb)\n      if (linkedPro == enumProtocol.eprotocol_PROTOCOL_NO)\n        return false\n\n      await this.obd2RetriveData(cb);\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n\n  async obd2FFDTCMonLink(cb: ({ percent, index, total, message, isfinish }) => any = null) {\n    try {\n      const linkedPro = await this.obd2Query(cb)\n      if (linkedPro == enumProtocol.eprotocol_PROTOCOL_NO)\n        return false\n\n      await this.obd2FFDTCMonRetriveData(cb);\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n\n  async obd2DTCLink(cb: ({ percent, index, total, message, isfinish }) => any = null) {\n    try {\n      const linkedPro = await this.obd2Query(cb)\n      if (linkedPro == enumProtocol.eprotocol_PROTOCOL_NO)\n        return false\n\n      await this.obd2DTCRetriveData(cb);\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n\n  async obd2QuickLink(cb: ({ percent, index, total, message, isfinish }) => any = null) {\n    try {\n      const linkedPro = await this.obd2Query(cb)\n      if (linkedPro == enumProtocol.eprotocol_PROTOCOL_NO)\n        return false\n\n      await this.obd2QuickRetriveData(cb);\n      return true\n    } catch (err) {\n      return false\n    }\n  }\n\n  async testdata(eprotocol: enumProtocol) {\n    // return this.commService.testWrite()\n    const resp = await this.obd2.QueryProtocolCAN(eprotocol)\n    this.log('response data :' + JSON.stringify(resp))\n    return resp;\n  }\n\n  log(t): void {\n    this.notifyService.log(t);\n  }\n\n  /**\n   * [setYmmeProfile set ymmeprofile]\n   * @param  manufacture_enum [any]\n   * @param  year_enum                     [any]\n   * @param  make_enum                     [any]\n   * @param  model_enum                    [any]\n   * @param  engine_enum                   [any]\n   * @param  trim_enum                     [any]\n   * @param  option_enum                   [any]\n   * @param  transmission_enum             [any]\n   * @return            Promise<boolean>\n   */\n  async setYmmeProfile(ymmeprofile = {\n    manufacture_enum: undefined,\n    year_enum: undefined,\n    make_enum: undefined,\n    model_enum: undefined,\n    engine_enum: undefined,\n    trim_enum: undefined,\n    option_enum: undefined,\n    transmission_enum: undefined\n  }) {\n    this.log(JSON.stringify(ymmeprofile))\n    return await this.nwscan.setYmmeProfile(ymmeprofile)\n  }\n\n  /**\n   * [getYMMEProfile get the current ymmeprofile]\n   * @return Promise<any>\n   */\n  async getYMMEProfile() {\n    return await this.nwscan.getYMMEProfile();\n  }\n\n  /**\n   * [nwscan_getSupportSystem this function gets the list of supported systems]\n   * @return Promise<{}>\n   */\n  async nwscan_getSupportSystem() {\n    return await this.nwscan.getSupportedOEMModules()\n  }\n\n  /**\n   * [nwscan_eraseSystem Erase system and subSystem]\n   * @param  {system,  subSystem} [system index and subsystem index]\n   * @return            Promise<{}>\n   */\n  async nwscan_eraseSystem({ system, subSystem }) {\n    return await this.nwscan.eraseOEMSystem({ system, subSystem })\n  }\n\n  /**\n   * [nwscan_LinkSystem Link system and subSystem]\n   * @param  {system,  subSystem} [system index and subsystem index]\n   * @return      Promise<{}>\n   */\n  async nwscan_LinkSystem({ system, subSystem }) {\n    return await this.nwscan.getOEMSystem_quick({ system, subSystem })\n  }\n\n  async nwscan_getdtcdef({ system, subSystem, id }) {\n    return await this.nwscan.getDtcdef({ system, subSystem, id })\n  }\n\n  async nwscan_getdtcdef_withgroup({ system, subSystem, id, group }) {\n    return await this.nwscan.getDtcdef_withgroup({ system, subSystem, id, group })\n  }\n\n  async nwscan_getdtc_listgroup({ system, subSystem, id }) {\n    return await this.nwscan.getDtc_listInspecGroup({ system, subSystem, id })\n  }\n\n  async nws_querySystem({ system, subSystem }) {\n    return await this.nwscan.QueryOEMSystem({ system, subSystem })\n  }\n\n  async nws_exitSystem({ system, subSystem }) {\n    return await this.nwscan.ExitOEMSystem({ system, subSystem })\n  }\n  /**\n   * [getBatteryVoltage Get ECU battery voltage]\n   * @return Promise<{BatteryVoltage:any,Unit:string}>\n   */\n  async getBatteryVoltage() {\n    return await this.obdsystem.getECUVoltage()\n  }\n\n  async setting_smogcheckstate(loc) {\n    return await this.obd2.SetOBD2SmogCheckState(loc);\n  }\n\n  async setting_smogcheckcountry(loc) {\n    return await this.obd2.SetOBD2SmogCheckCountry(loc);\n  }\n\n  async getting_smogcheckstate() {\n    return await this.obd2.GetOBD2SmogCheckState();\n  }\n\n  async getting_smogcheckcountry() {\n    return await this.obd2.GetOBD2SmogCheckCountry();\n  }\n\n  async getting_ledstatus() {\n    return await this.obd2.GetOBD2LedStatus();\n  }\n\n  async setting_fueltype(type) {\n    return await this.obd2.SetFuelType(type);\n  }\n\n  async getting_fueltype() {\n    return await this.obd2.GetFuelType();\n  }\n\n  async setting_vehtype(type) {\n    return await this.obd2.SetVehType(type);\n  }\n\n  async getting_vehtype() {\n    return await this.obd2.GetVehType();\n  }\n\n  async setting_getguid() {\n    return await this.obdsystem.readGUID()\n  }\n\n  async setting_setguid(guid) {\n    return await this.obdsystem.writeGUID(guid)\n  }\n\n  async setting_unittype(unittype) {\n    return await this.obdsystem.settingUnitType(unittype);\n  }\n\n  async setting_language(lang_id) {\n    return await this.obdsystem.SettingLanguage(lang_id);\n  }\n\n  async getodometer_pidsupport() {\n    return await this.ofm.ofm_getodometer_pidsupport()\n  }\n  async getservicecheck_pidsupport() {\n    return await this.ofm.ofm_getservicecheck_pidsupport()\n  }\n\n  async getwarninglight_pidsupport() {\n    return await this.ofm.ofm_getwarninglight_pidsupport()\n  }\n\n  async gettpmspid_pidsupport() {\n    return await this.ofm.ofm_gettpms_pidsupport()\n  }\n\n  async getofmprofileid_value(profileid) {\n    return await this.ofm.getofmprofileid_value(profileid);\n  }\n\n  async ofm_getitemname(itemid) { return ENUMVCIs.Enum_ofm_Items[itemid] as string; }\n\n  async nws_getdtcgroup_all() {\n    return await this.nwscan.getInnovaGroupDtc(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW);\n  }\n\n  async ld_abs_get_ListItem_Val(start_idx, end_idx) {\n    return await this.livedata.getlivedata_list_itemval_v2(enumInnovagroup.einnovagroup_GROUP_ABS,\n      start_idx, end_idx);\n  }\n\n  async ld_srs_get_ListItem_Val(start_idx, end_idx) {\n    return await this.livedata.getlivedata_list_itemval_v2(enumInnovagroup.einnovagroup_GROUP_SRS,\n      start_idx, end_idx);\n  }\n\n  async ld_ecm_get_ListItem_Val(start_idx, end_idx) {\n    return await this.livedata.getlivedata_list_itemval_v2(enumInnovagroup.einnovagroup_GROUP_ENH_ECM,\n      start_idx, end_idx);\n  }\n\n  async ld_others_get_ListItem_Val(start_idx, end_idx) {\n    return await this.livedata.getlivedata_list_itemval_v2(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW,\n      start_idx, end_idx);\n  }\n\n  async ld_obd2_get_ListItem_Val(start_idx, end_idx) {\n    return await this.livedata.getlivedata_list_itemval(enumInnovagroup.einnovagroup_GROUP_OBDII,\n      start_idx, end_idx);\n  }\n\n  async ld_hybrid_ld_ListItem_Val(start_idx, end_idx) {\n    return await this.livedata.getlivedata_list_itemval(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW,\n      start_idx, end_idx);\n  }\n\n  async ld_hybrid_ld_get_itemval(itemid) {\n    return await this.livedata.getlivedata_itemval(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW,\n      itemid);\n  }\n  async ld_disable_dtc_trigger() {\n    return await this.livedata.disable_dtc_trigger();\n  }\n\n  async ld_enable_dtc_trigger() {\n    return await this.livedata.enable_dtc_trigger();\n  }\n\n  async ld_hybrid_get_info() {\n    return await this.livedata.getlivedata_hybrid_info();\n  }\n  /**\n   * [getVehReport_MIL_Status get Mil Status report]\n   * @return Promise<{MilStatus:status}> status : ON or OFF\n   */\n  async getVehReport_MIL_Status() {\n    return await this.obd2.getVehReport_MIL_Status();\n  }\n\n  async getVehReport_DriveCycle_Mon_List() {\n    return await this.obd2.getVehReport_DriveCycle_Mon_List();\n  }\n\n  async getVehReport_DriveCycle_Mon_Text(textid) {\n    return await this.obd2.getVehReport_DriveCycle_Mon_Text(textid);\n  }\n\n  //symptom diagnostic here\n  async symptom_init() {\n    return await this.symptom.initprocess();\n  }\n\n  async getsymptom_screenui() {\n    return await this.symptom.getScreen_UI();\n  }\n\n  async setSymptom_SetNormalSelection(index) {\n    return await this.symptom.set_useroptionselection(index);\n  }\n\n  async setSymptom_SetSoftkeySelection(index) {\n    return await this.symptom.set_softkeyselection(index);\n  }\n\n  // Live Data\n  async ld_obd2_get_itemlist() {\n    return await this.livedata.getOBD2_LiveDataListPIDsupport();\n  }\n\n  async ld_obd2_get_itemval(itemid) {\n    return await this.livedata.getOBD2_LiveDataItem_Val(itemid);\n  }\n\n  async ld_abs_get_itemlist() {\n    return await this.livedata.getABS_LiveDataListPIDsupport();\n  }\n\n  async ld_abs_get_itemval(itemid) {\n    return await this.livedata.getABS_LiveDataItem_Val(itemid);\n  }\n\n  async ld_srs_get_itemlist() {\n    return await this.livedata.getSRS_LiveDataListPIDsupport();\n  }\n\n  async ld_srs_get_itemval(itemid) {\n    return await this.livedata.getSRS_LiveDataItem_Val(itemid);\n  }\n\n  async ld_ecm_get_itemlist() {\n    return await this.livedata.getECM_LiveDataListPIDsupport();\n  }\n\n  async ld_ecm_get_itemval(itemid) {\n    return await this.livedata.getECM_LiveDataItem_Val(itemid);\n  }\n\n  async ld_other_get_itemval(itemid) {\n    return await this.livedata.getOther_LiveDataItem_Val(itemid)\n  }\n\n  async ld_obd2_get_iteminfo(itemid) {\n    return await this.livedata.getlivedata_iteminfo(enumInnovagroup.einnovagroup_GROUP_OBDII, itemid);\n  }\n\n  async ld_abs_get_iteminfo(itemid) {\n    return await this.livedata.getlivedata_iteminfo(enumInnovagroup.einnovagroup_GROUP_ABS, itemid);\n  }\n\n  async ld_srs_get_iteminfo(itemid) {\n    return await this.livedata.getlivedata_iteminfo(enumInnovagroup.einnovagroup_GROUP_SRS, itemid);\n  }\n\n  async ld_ecm_get_iteminfo(itemid) {\n    return await this.livedata.getlivedata_iteminfo(enumInnovagroup.einnovagroup_GROUP_ENH_ECM, itemid);\n  }\n\n  async ld_others_get_iteminfo(itemid) {\n    return await this.livedata.getlivedata_iteminfo(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW, itemid);\n  }\n\n  async ld_ecm_get_numbersupporteditem() {\n    return await this.livedata.getECM_LiveDataNumberItemSupport();\n  }\n\n  async ld_abs_get_numbersupporteditem() {\n    return await this.livedata.getABS_LiveDataNumberItemSupport();\n  }\n\n  async ld_system_subsystem_numbersupporteditem(system, subsystem) {\n    return await this.livedata.getlivedata_numberpidsuppport_other(system, subsystem);\n  }\n\n  async ld_srs_get_numbersupporteditem() {\n    return await this.livedata.getSRS_LiveDataNumberItemSupport();\n  }\n\n  async ld_ecm_get_listinfo(start, end) {\n    return await this.livedata.getlivedata_listinfo(enumInnovagroup.einnovagroup_GROUP_ENH_ECM, start, end);\n  }\n\n  async ld_abs_get_listinfo(start, end) {\n    return await this.livedata.getlivedata_listinfo(enumInnovagroup.einnovagroup_GROUP_ABS, start, end);\n  }\n\n  async ld_srs_get_listinfo(start, end) {\n    return await this.livedata.getlivedata_listinfo(enumInnovagroup.einnovagroup_GROUP_SRS, start, end);\n  }\n\n  async ld_others_get_listinfo(start, end) {\n    return await this.livedata.getlivedata_listinfo(enumInnovagroup.einnovagroup_INNOVA_GROUP_UNKNOW, start, end);\n  }\n\n  // Service Reset\n  async power_actual_test_enter_proc() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_SYSTEM_AND_ACTUAL_TEST, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async service_reset_proc_enter() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_SERVICE_RESET, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async oil_reset_enter_proc() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_OIL_RESET, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async battery_reset_enter_proc() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_OEM_BAT_RESET, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async epb_enter_proc() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_EPB, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async sas_enter_proc() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_SAS_CALIBRATION, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n\n  /**\n   * [specfunction_enter_proc enter proc special test]\n   * @return [description]\n   */\n  async spectest_enter_proc() {\n    return await this.gui.gui_proc_enter_specialFunction_feature(ENUMVCIs.SF_FunctionGroup.UNKNOWN);\n    // await this.gui.gui_set_special_function_group(ENUMVCIs.SF_FunctionGroup.UNKNOWN);\n    // return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_SPECIAL_FUNCTION, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async spectest_activetest_set_module(system, subsystem) {\n    return await this.gui.gui_proc_sf_at_set_active_module(system, subsystem);\n  }\n\n  async dpf_enter_proc() {\n    //await this.gui.gui_set_special_function_group(ENUMVCIs.SF_FunctionGroup.UNKNOWN);\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_DPF_RESET, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async actuatortest_enter_proc() {\n    //await this.gui.gui_set_special_function_group(ENUMVCIs.SF_FunctionGroup.UNKNOWN);\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_ACTIVE_TEST, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async tpms_reset_enter_proc() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_TPMS_RESET_MENU, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async battery_health_check_enter_proc() {\n    return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_BATTERY_HEALTH_CHECK, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n  }\n\n  async gui_set_key_option_old(id) {\n    try {\n      await this.gui.set_param(ENUMVCIs.VCI_GUI_Param_Type.param_selection, id);\n      await this.delay(100);\n      await this.gui.gui_set_key_code(ENUMVCIs.GUI_KEY_CODE.GUI_KEY_ENTER);\n    }\n    catch (err) {\n      this.log('set key option issue:' + err);\n    }\n\n\n  }\n\n  //\n  async gui_set_key_option(id) {\n    try {\n      await this.gui.gui_set_key_code_with_index(ENUMVCIs.GUI_KEY_CODE.GUI_KEY_ENTER, id);\n    }\n    catch (err) {\n      this.log('set key option issue:' + err);\n    }\n  }\n\n  async gui_set_softkey(type: string) {\n    if (type === \"left\") {\n      //await this.gui.set_param(ENUMVCIs.VCI_GUI_Param_Type.param_selection, id);\n      return await this.gui.gui_set_key_code(ENUMVCIs.GUI_KEY_CODE.GUI_SOFTKEY_1);\n    }\n    else {\n      //await this.gui.set_param(ENUMVCIs.VCI_GUI_Param_Type.param_selection, id);\n      return await this.gui.gui_set_key_code(ENUMVCIs.GUI_KEY_CODE.GUI_SOFTKEY_2);\n    }\n  }\n  async cancel_process() {\n    return await this.obd2.cancel_vci_process();\n  }\n\n  async reset_fast_cancel() {\n    return await this.obd2.ResetFastCancel();\n  }\n\n  async deregisterReceiveCb() {\n    this.commService.isRegisterCallBack = false;\n  }\n  async initGUIProc() {\n    this.commService.isRegisterCallBack = true;\n    this.commService.isConfirmNormal = false;\n  }\n  async deinitGUIProc() {\n    this.commService.isRegisterCallBack = false;\n    this.log('Terminate proc');\n    await this.gui_terminate_proc();\n  }\n  async gui_register_cb(cbfunc = null) {\n    try {\n      this.commService.isRegisterCallBack = true;\n      this.commService.isConfirmNormal = false;\n      this.commService.EventCallBackFunction.subscribe(\n        {\n          next: data => {\n\n            cbfunc & cbfunc(data);\n\n            // this.logger.log(datau8array.toString())\n          },\n          error: err => {\n            this.log('error' + err)\n          },\n          complete: () => {\n            this.log('done')\n          }\n        });\n    }\n    catch (err) {\n      alert(err)\n      this.log(err)\n    }\n\n  }\n  async gui_set_input_val(input_val: string) {\n    return await this.gui.set_param(ENUMVCIs.VCI_GUI_Param_Type.param_input, input_val);\n  }\n  async gui_exec_disp() {\n    return await this.gui.gui_notice_disp();\n  }\n\n  async gui_terminate_proc() {\n    //await this.gui.gui_set_special_function_group(ENUMVCIs.SF_FunctionGroup.UNKNOWN);\n    return await this.gui.proc_terminate_proc();\n  }\n\n  async ABS_bleeding_enter_proc() {\n    // await this.gui.gui_set_special_function_group(ENUMVCIs.SF_FunctionGroup.ABS_Bleeding);\n    // return await this.gui.proc_enter_proc(ENUMVCIs.SYS_PROC_ID.PROC_SPECIAL_FUNCTION, ENUMVCIs.SYS_CMD_ID.CMD_INIT_PROC);\n    return await this.gui.gui_proc_enter_specialFunction_feature(ENUMVCIs.SF_FunctionGroup.ABS_Bleeding);\n  }\n\n\n  //20-08-2020 10:17 Log Data Function\n  /**\n   * [StartLog start logging data]\n   * @return [true if start logging no issue, otherwise is false]\n   */\n  async StartLog() {\n    await this.obdsystem.SetLogFunction(ENUMVCIs.VCI_Data_Logging.EN_All);\n    return await this.obdsystem.StartLog();\n  }\n\n  /**\n   * [StopLog stop logging data]\n   * @return [true if stop logging no issue, otherwise is false]\n   */\n  async StopLog() {\n    return await this.obdsystem.StopLog();\n  }\n\n  /**\n  * [GetLog get the logging data stored before ]\n  * @return [vehicle data logged in VCI]\n  */\n  async GetLog() {\n    return await this.obdsystem.GetLog();\n  }\n\n  //YMME function 07-09-2020 21:26\n  async ymme_init() {\n    await this.ymme.init();\n    return await this.ymme.get(0);\n  }\n\n  async ymme_get(sel_id) {\n    return await this.ymme.get(sel_id);\n  }\n\n  async ymme_back() {\n    return await this.ymme.get(0xFF);\n  }\n\n  async ymme_confirm() {\n    return await this.ymme.confirm();\n  }\n\n\n\n\n\n}\n\nexport { EnumNotify, Dataparser }\n","/**\n * @Author: quocdo-macbook\n * @Date:   2021-11-22T09:22:51+07:00\n * @Last modified by:   quocdo-macbook\n * @Last modified time: 2021-12-29T13:57:29+07:00\n */\n\n/**\n * Innova VCI Service Wrapper\n * @author Ngoc LB <ngoclb@card.com>\n * @date July 08, 2019\n */\nimport {\n  SLEEP_EACH_VCI_REQUEST,\n  TIMEOUT_GET_VEH_SUMMARY,\n} from 'src/app/configs/app.config';\nimport { Injectable } from '@angular/core';\nimport {\n  OBDService,\n  EnumNotify,\n  Dataparser,\n} from './innova-vci-service/src/obdservice.service';\nimport { bytesToString } from './innova-vci-service/src/utilities/dataParser';\nimport { ConnectivityService } from './innova-vci-service/src/connectivity/connectivity.service';\nimport { interval, Subject, Subscription } from 'rxjs';\nimport { mergeMap, takeWhile } from 'rxjs/operators';\nimport {\n  enumInnovagroup,\n  enumProtocol,\n} from './innova-vci-service/src/standard/enums';\nimport {\n  SLEEP_TIMEOUT,\n  SUPPORTED_BLUETOOTH_DEVICE_NAMES,\n  SLEEP_TIMEOUT_LONG,\n  TIMEOUT_INIT_CONNECTION,\n  AppConfig,\n} from '../configs/app.config';\nimport {\n  VCIResponseData,\n  InnovaVCIEvent,\n  Ofm_Item,\n  InnovaToolFeatures,\n  InnovaToolScreenType,\n  Pid_ItemBase,\n  InnovaToolLiveDataGroup,\n  Oem_Item,\n  InnovaToolModuleStatus,\n} from './innova-tool-models';\nimport * as ENUMVCIs from './innova-vci-service/src/obd/vcistd';\nimport * as _ from 'lodash';\nimport { enumProtocolToString } from './innova-vci-service/src/obd/obdUtils';\nimport { BleData, InfoToolConnected } from '../models/app.model';\nimport {\n  EnumAppDataKey,\n  EnumAppEvent,\n  ScanSettingItem,\n} from '../models/app.enum';\nimport { ValidateMileage, ValidateMileageKm } from '../app.validators';\nimport { InnovaHelper } from './innova-helper.service';\nimport { AppData } from '../models/app.data';\nimport { HelperService } from './helper.service';\nimport { Events } from './events.service';\nimport { AppLogger, AppLoggerService } from './logger';\nimport { AppState } from './state/app.state';\nimport { BLE } from '@ionic-native/ble/ngx';\nimport { getManufactureByMake } from './innova-report-helper/innova-report-data-models';\n\nexport function bytesToBase64(bytes: any) {\n  return btoa(String.fromCharCode.apply(null, bytes));\n}\n\nexport function isEmptyResponse(bytes: number[]) {\n  let count = (bytes || []).reduce(\n    (total, x) => (x === 0x00 ? total + 1 : total),\n    0\n  );\n  return (\n    count === bytes.length || (bytes[0] === 0xaa && count === bytes.length - 1)\n  );\n}\n\nconst DEFAULT_LOG_LEVEL = [\n  EnumNotify.NOTIFY_DEBUG_LOG,\n  EnumNotify.NOTIFY_DEBUG_LOG_COM_TX,\n  EnumNotify.NOTIFY_DEBUG_LOG_COM_RX,\n  EnumNotify.NOTIFY_DEBUG_LOG_COM_RX_RX,\n  EnumNotify.NOTIFY_VCI_DATA_RESPONSE,\n  // EnumNotify.NOTIFY_VCI_COMMAND_REQUEST\n];\n\nexport function includesAny(\n  search: string,\n  haystack: string[],\n  matchCase = false\n) {\n  search = typeof search === 'string' ? search : '';\n  return !!(haystack || []).find((str) =>\n    matchCase\n      ? search.includes(str)\n      : search.toLowerCase().includes(str.toLowerCase())\n  );\n}\n\nexport const VCI_STATIC_TEXTS = {\n  DtcStatus: {\n    store: ['stored', 'almacenado'],\n    pending: ['pending', 'pendiente'],\n    permanent: ['permanent', 'permanente'],\n  },\n  UIProcess: {\n    loading_symbols: ['…', '...'],\n    service_reset: ['service reset', 'reinicio del servicio'],\n    start_process: [\n      'start process..',\n      'iniciar proceso..',\n      'démarrer le processus..',\n    ],\n    retry: ['retry', 'reintentar', 'réessayez'],\n    exit: ['exit', 'salida', 'sortie'],\n    back: ['back', 'atrás', 'arrière'],\n    yes: ['yes'],\n    no: ['no'],\n    one_moment_please: [\n      'one moment please',\n      'espere un momento',\n      'un instant',\n      \"s'il vous plaît\",\n    ],\n    view_procedure: [\n      'view procedure',\n      'ver procedimiento',\n      'voir la procédure',\n    ],\n    successful: ['successful', 'satisfactoriamente', 'succès'],\n    complete: ['complete', 'completo', 'achevée'],\n    completed: ['completed', 'terminado', 'terminé'],\n    command_state: ['Commanded State:', 'Estado mandado:', 'État commandé:'],\n    result: ['Result:', 'Resultado:', 'Résultat:'],\n    is_not_supported: [\n      'is not supported',\n      'no es apoyado',\n      \"n'est pas pris en charge\",\n    ],\n  },\n};\n\nexport class InnovaScreenEventResp {\n  private _type: string;\n  private _body: any;\n  constructor(respdataOrType?: any | string, respBody?: any[]) {\n    if (typeof respdataOrType === 'string') {\n      this._type = respdataOrType;\n      this._body = respBody;\n    } else if (typeof respdataOrType === 'object') {\n      this._type = Object.keys(respdataOrType || {})[0];\n      this._body = respdataOrType[this._type] || null;\n    }\n  }\n\n  get type() {\n    let currenttype = this._type;\n    return {\n      toString() {\n        return currenttype;\n      },\n      isEquals(screentype: InnovaToolScreenType) {\n        return currenttype === screentype;\n      },\n    };\n  }\n\n  get leftKey() {\n    return this._body ? (this._body[0] || '').toString().trim() : null;\n  }\n\n  get rightKey() {\n    return this._body ? (this._body[2] || '').toString().trim() : null;\n  }\n\n  get bodyText() {\n    if (this._body) {\n      if (this._body.str) return this._body.str[2];\n      else if (this._body.hdr) return this._body.hdr[2] || this._body.hdr[4];\n    }\n    return '';\n  }\n\n  get body() {\n    return this._body;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InnovaVCIService {\n  private _vciResponseData: VCIResponseData;\n  private _isConnected: Subscription | boolean = null;\n  private _isVehicleConnected: boolean = false;\n  private _isWatchingConnection: boolean = true;\n  private _connectedDevAddr: string;\n  private _toolName: string;\n  private _totalSleepTimeMs = 0;\n  private supportLogTags = DEFAULT_LOG_LEVEL;\n  private linkedProtocol: {\n    protocolId: enumProtocol;\n    isFullLink?: boolean;\n    isReadFFDtc?: boolean;\n  };\n  private stoCheckConnection: number;\n  private isScreenGuiInitialized: boolean = false;\n  private isSetVciLocale: boolean = false;\n  private logger: AppLogger;\n  private _isToolReady: boolean;\n  constructor(\n    private obdService: OBDService,\n    private eventService: Events,\n    private helper: HelperService,\n    private ble: BLE,\n    private connService: ConnectivityService,\n    appLoggerService: AppLoggerService\n  ) {\n    // this.initVCIResponseHandlers();\n    this.logger = appLoggerService.getLogger('InnovaVCIService') ?? {};\n  }\n\n  get isConnected() {\n    return this._isConnected;\n  }\n\n  get connectedDevAddr() {\n    return this._connectedDevAddr;\n  }\n\n  get toolName() {\n    return this._toolName;\n  }\n\n  get isVehicleConnected() {\n    return this._isVehicleConnected;\n  }\n\n  get isWatchingConnection() {\n    return this._isWatchingConnection;\n  }\n\n  // S16: Show notice for some special Make (BMW)\n  get needCheckResetIgnition() {\n    if (this._vciResponseData && this._vciResponseData.ymme) {\n      let manufacturer = this._vciResponseData.ymme.manufacturer;\n      if (!manufacturer) {\n        manufacturer = getManufactureByMake(this._vciResponseData.ymme.make);\n      }\n      return ['BMW'].includes(manufacturer.toUpperCase());\n    }\n    return false;\n  }\n\n  // T7R-85 Toyota, Lexus, Scion Pop-Up\n  get needUpdateMoreVehicleInfo() {\n    if (this._vciResponseData && this._vciResponseData.ymme) {\n      const ymme = this._vciResponseData.ymme;\n      let manufacturer = ymme.manufacturer;\n      if (!manufacturer) {\n        manufacturer = getManufactureByMake(ymme.make);\n      }\n      return ['TOYOTA'].includes(manufacturer.toUpperCase());\n    }\n    return false;\n  }\n\n  startWatchingConnection() {\n    this._isWatchingConnection = true;\n    this.resumeProcess();\n  }\n\n  stopWatchingConnection() {\n    this._isWatchingConnection = false;\n    clearTimeout(this.stoCheckConnection);\n    this.stoCheckConnection = 0;\n  }\n\n  skipWatchingConnection(isSkip: boolean) {\n    this.stoCheckConnection = isSkip ? -1 : 0;\n  }\n\n  get isToolReady() {\n    return this._isToolReady;\n  }\n\n  async waitToolReady(timeout = 5000) {\n    if (this.isConnected) {\n      const ms = 500;\n      await this.helper.sleep(ms);\n      this.logger.debug(`isToolReady=${this._isToolReady}, timeout=${timeout}`);\n      timeout -= ms;\n      if (!this._isToolReady && timeout > 0) {\n        return this.waitToolReady(timeout);\n      }\n    }\n    return this._isToolReady;\n  }\n  /**\n   * Cancel function by Innova\n   */\n  async cancelProcess(timeoutMs = TIMEOUT_GET_VEH_SUMMARY) {\n    return new Promise(async (resolve) => {\n      const sto = setTimeout(() => {\n        this.logger.debug('cancelProcess timed out');\n        resolve(false);\n      }, timeoutMs);\n      this.obdService.stopQuery();\n      try {\n        await this.screenAction.deinitGUIProc();\n        await this.obdService.cancel_process();\n      } catch (err) {\n        this.logger.debug('cancelProcess failed', err);\n      }\n      this.connService.cancel_process();\n      this.linkedProtocol = null;\n      this.eventService.publish(InnovaVCIEvent.INTERRUPT_PROCESS);\n      await this.waitToolReady();\n      clearTimeout(sto);\n      this.resumeProcess();\n      resolve(true);\n    });\n  }\n\n  // async proc_keepalive() {\n  //   return await this.obdService.gui_keep_alive();\n  // }\n\n  /**\n   * Resume process still has connection\n   */\n  async resumeProcess() {\n    this.connService.resume_process();\n    this._isToolReady = true;\n  }\n\n  /**\n   * Disconnect with tool\n   * @param closePort true: disconnect and close port | false: just unscribe event, keep connection with tool\n   */\n  async disconnect(closePort = false, deviceId: string = null) {\n    await this.cancelProcess();\n    if (closePort) {\n      await this.connService\n        .closePort()\n        // .then(this.logger.debug.bind(null, 'closePort OK'))\n        .catch(this.logger.debug.bind(null, 'closePort failed'));\n    }\n    this._isConnected = false;\n    this._connectedDevAddr = null;\n    this._toolName = null;\n    this.linkedProtocol = null;\n    this.resetVciLocale();\n    if (deviceId) {\n      await this.disconnectBT(deviceId);\n    }\n\n    return true;\n  }\n\n  async disconnectBT(deviceId: string = null) {\n    if (this.isConnected) {\n      this._isConnected = false;\n    }\n    if (deviceId) {\n      await this.obdService\n        .disconnectBluetoothDevices()\n        .catch(\n          this.logger.debug.bind(null, 'disconnectBluetoothDevices failed')\n        );\n    }\n    return true;\n  }\n\n  async initializeBT(timeout = 15000) {\n    if (this.isConnected) return true;\n    console.log('this.isConnected: ', this.isConnected);\n    this.logger.debug('Start scanning PROSCAN/PROSCANLE tools...');\n    const _onDone = (msg = '') => {\n      this.logger.debug('initializeBT result: ', msg);\n    };\n    const isBleEnabled = await this.obdService\n      .initialize_bt()\n      .catch(this.logger.error.bind(null, 'initialize_bt failed'));\n    console.log('isBleEnabled: ', isBleEnabled);\n\n    if (isBleEnabled) {\n      let _btDevices: BleData[] = [],\n        _isStartBtConnect = false;\n      const _connectBT = async (selectedDevice: BleData = null) => {\n        console.log('selectedDevice: ', selectedDevice);\n        if (selectedDevice) {\n          _btDevices = [];\n          _btDevices.push(selectedDevice);\n        }\n        if (this.isConnected || _btDevices.length === 0) {\n          return _onDone(\n            `done: isConnected=${this.isConnected} btDevices length=${_btDevices.length}`\n          );\n        }\n        let device = _btDevices.pop();\n        console.log('device: ', device);\n        this.logger.debug('Connecting...', device);\n        try {\n          this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n            name: 'Connecting to device...',\n            result: device.name + ' found',\n          });\n          // init log\n          // await this.obdService.initialize_bt(this.handleResponse.bind(this));\n          let isBTConnected = await this.obdService.connectBlueToothDevice(\n            device.id\n          );\n          console.log('isBTConnected: ', isBTConnected);\n\n          if (isBTConnected) {\n            if (_scanBtProc) {\n              _scanBtProc.unsubscribe();\n            }\n\n            _btDevices = [];\n            // init log\n            await this.obdService.initialize_bt(this.handleResponse.bind(this));\n            this._isConnected = this.obdService.BluetoothIsConnected();\n            if (this.isConnected) {\n              this.linkedProtocol = null;\n              this.resetVciReponseData();\n              this.resetVciLocale();\n              this._connectedDevAddr = device.id;\n              this._toolName = device.name;\n              this._isToolReady = true;\n              this.eventService.publish(InnovaVCIEvent.CONNECTED, device);\n              return _onDone(`connected to ${device.id}`);\n            }\n            // return _connectBT(device);\n          } else {\n            this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n              name: 'Unable to connect device',\n              result: '',\n            });\n            return _onDone(`Unable to connect device`);\n          }\n        } catch (e) {\n          return _onDone(`error catched ${e}`);\n        }\n      };\n      let pairedDevices: any[] =\n        await this.obdService.get_list_bt_bondeddevices();\n      console.log('*** pairedDevices: ', pairedDevices);\n      if (!_.isEmpty(pairedDevices)) {\n        this.logger.debug('pairedDevices', pairedDevices);\n        _btDevices = pairedDevices\n          .filter((btDevice) =>\n            _.includes(SUPPORTED_BLUETOOTH_DEVICE_NAMES, btDevice['name'])\n          )\n          .reverse();\n      }\n      let _scanBtProc: Subscription = null;\n      if (_btDevices && _btDevices.length > 0) {\n        console.log('_btDevices: ', _btDevices);\n        let btDevice = _btDevices[0];\n        this.logger.debug('Found bluetooth device', btDevice);\n        if (!_isStartBtConnect) {\n          _connectBT();\n          _isStartBtConnect = true;\n        }\n      } else {\n        if (AppState.isOnAndroid) {\n          console.log('Call this.ble.stopScan');\n          this.ble.stopScan().then(async () => {\n            console.log('**** Start this.ble.scan');\n              _scanBtProc = this.ble.startScan([]).subscribe((btDevice) => {\n              console.log('btDevice: ', btDevice);\n              if (btDevice['name'] && btDevice['name'].length > 0) {\n                console.log('btDevice Name: ', btDevice['name']);\n                if (\n                  _.includes(SUPPORTED_BLUETOOTH_DEVICE_NAMES, btDevice['name'])\n                ) {\n                  this.logger.debug('Device found', btDevice);\n                  console.log('Device found', btDevice);\n                  const index = _btDevices.findIndex(\n                    (d) => d.id === btDevice['id']\n                  );\n                  if (index < 0) {\n                    let btName = btDevice['name'];\n                    let isLocalName = false;\n                    const localName = localStorage.getItem(btDevice['id']);\n                    if (localName) {\n                      btName = localName;\n                      isLocalName = true;\n                    }\n                    const pro15Tool = new BleData(\n                      btDevice['id'],\n                      btName,\n                      isLocalName\n                    );\n                    this.eventService.publish(\n                      InnovaVCIEvent.DEVICE_FOUND,\n                      pro15Tool\n                    );\n                    _btDevices.push(pro15Tool);\n                  }\n                }\n              }\n            });\n          });\n\n          this.eventService.subscribe(\n            InnovaVCIEvent.DEVICE_SELECTED,\n            (device: BleData) => {\n              console.log('this.eventService.subscribe device: ', device);\n              this.eventService.unsubscribe(InnovaVCIEvent.DEVICE_SELECTED);\n              if (!_isStartBtConnect) {\n                _connectBT(device);\n                _isStartBtConnect = true;\n              }\n            }\n          );\n        } else {\n          //while(true){\n          let devices = await this.connService.discoverBluetoothDevices2();\n          if (devices && devices.length > 0) {\n            this.eventService.subscribe(\n              InnovaVCIEvent.DEVICE_SELECTED,\n              (device: BleData) => {\n                this.eventService.unsubscribe(InnovaVCIEvent.DEVICE_SELECTED);\n                if (!_isStartBtConnect) {\n                  _connectBT(device);\n                  _isStartBtConnect = true;\n                }\n              }\n            );\n            while (devices.length) {\n              let device = devices.shift();\n              this.logger.debug('Found Pro15 device', device);\n              let btName = device['name'];\n              let isLocalName = false;\n              const localName = localStorage.getItem(device['id']);\n              if (localName) {\n                btName = localName;\n                isLocalName = true;\n              }\n              const pro15Tool = new BleData(device['id'], btName, isLocalName);\n              this.eventService.publish(InnovaVCIEvent.DEVICE_FOUND, pro15Tool);\n              _btDevices.push(pro15Tool);\n            }\n          }\n        }\n      }\n    } else {\n      _onDone('bluetooth is disabled');\n    }\n  }\n\n  /**\n   * Check if user connect with Vehicle or not\n   * batteryVolt > 3.3: connected\n   */\n  async isConnectedVehicle() {\n    return !!this.isConnected;\n  }\n\n  /**\n   * Link protocol and prepare data\n   */\n  async linkProtocols() {\n    if (!this.isConnected) {\n      await this.initializeBT();\n    }\n    /** Since FW 43 (tool cached latest vehicle data), we need  to link protocol when start getting any data */\n    // if (this.linkedProtocol) {\n    //   this.logger.debug(`Already linked protocol ${this.linkedProtocol}, skip process`);\n    //   return true;\n    // };\n    let callbackResult;\n    // const isLinkedProtocol = await this.obdService.obd2AutoLink(info => {\n    //     callbackResult = info;\n    //     this.events.publish(InnovaVCIEvent.LINK_PROTOCOL, callbackResult);\n    //     this.logger.debug(callbackResult);\n    //   });\n    const protocolId = await this.obdService.obd2Query(\n      (info: { percent; index; total; message; isfinish }) => {\n        callbackResult = info;\n        this.logger.debug('callbackResult: ', callbackResult);\n        if (callbackResult.total === 0) {\n          this.disconnect(true, this._connectedDevAddr);\n        } else if (\n          [\n            enumProtocolToString(enumProtocol.eprotocol_UNKNOWN),\n            enumProtocolToString(undefined),\n          ].includes(callbackResult.message)\n        ) {\n          this._isVehicleConnected = false;\n        }\n        // this.events.publish(InnovaVCIEvent.LINK_PROTOCOL, callbackResult);\n      },\n      false\n    );\n\n    // if (!protocolId && !callbackResult.isfinish) {\n    if (!protocolId) {\n      throw new Error(\n        `Link protocols failed: ${JSON.stringify(callbackResult)}`\n      );\n    }\n    this.linkedProtocol = {\n      protocolId,\n    };\n    this.resetVciLocale();\n    if (this.isEmptyVciData) {\n      this.resetVciReponseData();\n    }\n    await this.sleep(SLEEP_EACH_VCI_REQUEST);\n    const startMs = new Date().getTime();\n    // await this.obdService.obd2RetriveData(); /*\n    await this.obdService.obd2QuickRetriveData(); // */\n    const endMs = new Date().getTime();\n    this.logger.debug(\n      `obd2QuickRetrieveData duration: ${\n        Math.round(((endMs - startMs) / 1000) * 100) / 100\n      }s`\n    );\n    return true;\n  }\n\n  get protocolName() {\n    const protocolName = enumProtocolToString(this.linkedProtocol.protocolId);\n    return protocolName.replace('Protocol ', '');\n  }\n\n  /**\n   * Sleep and check connection\n   */\n  private async sleep(ms, checkVehConn = false) {\n    await this.helper.sleep(ms);\n    if (this.isConnected) {\n      if (checkVehConn) {\n        this._isVehicleConnected = await this.isConnectedVehicle();\n        if (this.isVehicleConnected) {\n          return ms;\n        } else {\n          throw new Error('Vehicle is disconnected.');\n        }\n      }\n      if (this._totalSleepTimeMs >= 0) {\n        this._totalSleepTimeMs += ms;\n      }\n      return ms;\n    }\n    this.enableReportSleepTime(false);\n    throw new Error('Disconnected.');\n  }\n\n  get totalSleepTime() {\n    return this._totalSleepTimeMs;\n  }\n\n  enableReportSleepTime(isEnable: boolean) {\n    if (isEnable) {\n      this._totalSleepTimeMs = 0;\n    } else {\n      this._totalSleepTimeMs = -1;\n    }\n  }\n\n  /**\n   * Set Unit and Language for VCI\n   */\n  private async setVciLocale({ setUnit = true, setLang = true } = {}) {\n    this.logger.debug(`setVciLocale setUnit=${setUnit}, setLang=${setLang}`);\n    // Set unit\n    if (setUnit) {\n      let unit_name = AppData.get(EnumAppDataKey.AppRegional);\n      if (unit_name) {\n        const units = [\n          {\n            name: 'Standard',\n            id: ENUMVCIs.UNIT_ID.Standard,\n          },\n          {\n            name: 'Metric',\n            id: ENUMVCIs.UNIT_ID.Metric,\n          },\n        ];\n\n        let selected_unit = units.find((item) => item.name === unit_name);\n        if (selected_unit) {\n          let isOk = await this.obdService.setting_unittype(selected_unit.id);\n          await this.sleep(SLEEP_EACH_VCI_REQUEST);\n          if (isOk) {\n            this._vciResponseData.unitId = selected_unit.id;\n            this.logger.debug('setting_unittype OK', unit_name);\n          }\n        }\n      }\n    }\n    // Set language\n    if (setLang) {\n      let lang = AppData.get(EnumAppDataKey.AppLanguage);\n      if (lang) {\n        const langs = [\n          {\n            name: 'English',\n            code: 'en',\n            id: ENUMVCIs.GUI_LANGUAGE_ID.GUI_LANG_ENGLISH,\n          },\n          {\n            name: 'Spanish',\n            code: 'es',\n            id: ENUMVCIs.GUI_LANGUAGE_ID.GUI_LANG_SPANISH,\n          },\n          {\n            name: 'French',\n            code: 'fr',\n            id: ENUMVCIs.GUI_LANGUAGE_ID.GUI_LANG_FRENCH,\n          },\n        ];\n        let selected_lang = langs.find((item) => item.code === lang);\n        if (selected_lang) {\n          let isOk = await this.obdService.setting_language(selected_lang.id);\n          await this.sleep(SLEEP_EACH_VCI_REQUEST);\n          if (isOk) {\n            this._vciResponseData.langId = selected_lang.id;\n            this.logger.debug('setting_language OK', lang);\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  resetVciLocale() {\n    this.isSetVciLocale = false;\n  }\n\n  async connectAndGetToolInfo(sleepMs = 0) {\n    try {\n      if (!this.isConnected) {\n        await this.initializeBT();\n      }\n      if (sleepMs) {\n        await this.sleep(sleepMs);\n      }\n      let info = await this.obdService.getVersion();\n      if (!info || !info.productid || !info.boot || !info.main) {\n        throw new Error(\n          `obdService.getVersion return invalid data ${JSON.stringify(info)}`\n        );\n      }\n      // let toolGUID = InnovaHelper.generateGuid(); /*\n      let toolGUID = await this.obdService.setting_getguid();\n      if (InnovaHelper.isInvalidOrEmptyGUID(toolGUID)) {\n        const guid = InnovaHelper.generateGuid();\n        // this.logger.debug(`writeGUID ${randomGuid} rs: ${rs}`);\n        const rs = await this.obdService.setting_setguid(guid);\n        if (rs) {\n          toolGUID = guid;\n        }\n      } // */\n      if (_.isEmpty(this.vciResponseData)) {\n        this.resetVciReponseData();\n      }\n      this._vciResponseData.usbProductId = info.productid;\n      this._vciResponseData.bootloaderVersion = info.boot;\n      this._vciResponseData.firmwareVersion = info.main;\n      this._vciResponseData.databaseVersion = info.db;\n      this._vciResponseData.dongleId = toolGUID;\n      let toolInfo: InfoToolConnected = {\n        db: '0.0.1',\n        ...info,\n        guid: toolGUID,\n      };\n      this._connectedDevAddr = toolGUID;\n      this.logger.debug('connectAndGetToolInfo', toolInfo);\n      AppData.set(EnumAppDataKey.InfoToolConnected, toolInfo);\n      this.eventService.publish(EnumAppEvent.InfoToolConnected, toolInfo);\n      return toolInfo;\n    } catch (err) {\n      this.logger.debug('connectAndGetToolInfo failed', err);\n      return null;\n    }\n  }\n\n  async connectAndRequestData() {\n    try {\n      let currentData = _.pick(this.vciResponseData, [\n        'vin',\n        'ymme',\n        'vinProfile',\n        'vehicleInfoEcm',\n        'vehicleInfoTcm',\n        'vehicleInfoData',\n        'mileage',\n        'dongleId',\n        'usbProductId',\n        'unitId',\n        'langId',\n        'bootloaderVersion',\n        'firmwareVersion',\n        'allSupportedModules',\n      ]);\n      this.setVciResponseData(currentData);\n      let startMs, endMs;\n      this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n        name: 'Linking to vehicle...',\n        result: this._toolName + ' has been connected',\n      });\n      if (!this.linkedProtocol) {\n        await this.linkProtocols();\n      }\n      //10-07-2020 15:21 Quoc Do changed here to fix Tab 470. Always retreiveData\n      if (this.linkedProtocol) {\n        this.logger.debug('Run obd2RetriveData...');\n        startMs = new Date().getTime();\n        this.linkedProtocol.isFullLink =\n          await this.obdService.obd2RetriveData();\n        endMs = new Date().getTime();\n        this.logger.debug(\n          `[*] obd2RetriveData time: ${\n            Math.round(((endMs - startMs) / 1000) * 100) / 100\n          } seconds`\n        );\n        await this.sleep(SLEEP_TIMEOUT_LONG);\n      }\n      if (!this.isSetVciLocale) {\n        this.isSetVciLocale = await this.setVciLocale();\n      }\n      if (!this._vciResponseData.dongleId) {\n        await this.connectAndGetToolInfo();\n      }\n\n      //#region Default scan\n      this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n        name: 'Reading Battery Voltage...',\n        result: this.toolName + ' already linked to vehicle.',\n      });\n      let voltage = await this.obdService.getBatteryVoltage();\n      // console.log('getBatteryVoltage', voltage);\n      if (voltage && typeof voltage === 'object') {\n        this._vciResponseData.batteryVoltage =\n          voltage.BatteryVoltage === undefined ? '0' : voltage.BatteryVoltage;\n      }\n      this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n        name: 'Reading Vehicle ECM & TCM...',\n        result: 'Battery Voltage: ' + this._vciResponseData.batteryVoltage,\n      });\n      // 02. vehicle info\n      await this.sleep(SLEEP_EACH_VCI_REQUEST);\n      await this.getVehicleBufferAndInfo(\n        !this._vciResponseData.vehicleInfoEcm,\n        false // read vehicle info in other flow (T7R-15)\n        // !this._vciResponseData.vehicleInfoData\n      );\n      this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n        name: 'Reading Freeze Frame...',\n        result:\n          'Vehicle ECM & TCM: ' +\n          (this._vciResponseData.vehicleInfoEcm ? 'YES' : 'N/A'),\n      });\n\n      // 03. freeframe\n      await this.sleep(SLEEP_EACH_VCI_REQUEST);\n      const ff = await this.obdService.getVehReport_OBD2_FF_SID2_BUFF();\n      this.logger.debug('getVehReport_OBD2_FF_SID2_BUFF', ff);\n      if (ff.length > 0) {\n        this._vciResponseData.freezeFrameEcm = bytesToBase64(ff[0].data);\n        this._vciResponseData.freezeFrameTcm = bytesToBase64(\n          ff[1] ? ff[1].data : ''\n        );\n        /*\n        await this.sleep(SLEEP_EACH_VCI_REQUEST);\n        const freezeFrameDtc = await this.obdService.getVehReport_FreezeFrameDTCInfo();\n        if(freezeFrameDtc){\n          this._vciResponseData.freezeFrameDTCData = freezeFrameDtc as any;\n        } else {\n\n        }\n        await this.sleep(SLEEP_EACH_VCI_REQUEST);\n        const freezeFrameLd = await this.obdService.getVehReport_FreezeFrameLDInfo();\n        if(freezeFrameLd){\n          this._vciResponseData.freezeFrameLDData = freezeFrameLd as any;\n        } else {\n\n        }\n        */\n        this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n          name: 'Reading Monitor Status...',\n          result:\n            'Freeze Frame: ' +\n            (this._vciResponseData.freezeFrameEcm ? 'YES' : 'NO'),\n        });\n      } else {\n        this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n          name: 'Reading Monitor Status...',\n          result: 'Freeze Frame: N/A',\n        });\n      }\n\n      // 04. monitor\n      await this.sleep(SLEEP_EACH_VCI_REQUEST);\n      const monitor = await this.obdService.getVehReport_OBD2_LD_SID1_BUFF();\n      this.logger.debug('getVehReport_OBD2_LD_SID1_BUFF', monitor);\n      if (monitor.length > 0) {\n        this._vciResponseData.monitorEcm = bytesToBase64(monitor[0].data);\n        this._vciResponseData.monitorTcm = bytesToBase64(\n          monitor[1] ? monitor[1].data : ''\n        );\n\n        await this.sleep(SLEEP_EACH_VCI_REQUEST);\n        let dtcs = await this.readDtcsOBDII();\n        this.logger.debug('getVehReport_OBD2_DTC_Info readDtcsOBDII', dtcs);\n        _.set(this._vciResponseData, 'dtcInfoData', dtcs);\n\n        await this.sleep(SLEEP_EACH_VCI_REQUEST);\n        const monitorData =\n          await this.obdService.getVehReport_MonitorIconStatus();\n        this._vciResponseData.monitorData = monitorData as any;\n        this.logger.debug('getVehReport_MonitorIconStatus', monitorData);\n        await this.sleep(SLEEP_EACH_VCI_REQUEST);\n        let milStatus = await this.obdService.getVehReport_MIL_Status();\n        this.logger.debug('getVehReport_MIL_Status', milStatus);\n        if (milStatus && typeof milStatus !== 'string') {\n          milStatus = milStatus.MilStatus || '';\n        }\n        this._vciResponseData.milStatus = milStatus as string;\n        this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n          name: 'Reading ECM & TCM DTCs...',\n          result:\n            'Monitor Status: ' +\n            (this._vciResponseData.monitorEcm ? 'YES' : 'NO'),\n        });\n      } else {\n        this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n          name: 'Reading ECM & TCM DTCs...',\n          result: 'Monitor Status: N/A',\n        });\n      }\n\n      // 05. dtc\n      await this.sleep(SLEEP_EACH_VCI_REQUEST);\n      const dtc = await this.obdService.getVehReport_OBD2_DTC_SID37A_BUFF();\n      this.logger.debug('getVehReport_OBD2_DTC_SID37A_BUFF', dtc);\n      if (dtc.length > 0) {\n        this._vciResponseData.dtcEcm = bytesToBase64(dtc[0].data);\n        this._vciResponseData.dtcTcm = bytesToBase64(dtc[1] ? dtc[1].data : '');\n        this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n          name: 'Reading VIN...',\n          result:\n            'ECM & TCM DTCs: ' + (this._vciResponseData.dtcEcm ? 'YES' : 'NO'),\n        });\n      } else {\n        this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n          name: 'Reading VIN...',\n          result: 'ECM & TCM DTCs: N/A',\n        });\n      }\n\n      // 01. ymme\n      if (!this._vciResponseData.vinProfile) {\n        await this.sleep(SLEEP_EACH_VCI_REQUEST);\n        await this.getYMME();\n      }\n    } catch (err) {\n      // await this.connService.disconnectBluetoothDevices(false);\n    }\n    return true;\n  }\n\n  async scanModules(vin) {\n    console.log('scanModules ßvin: ', vin);\n    this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n      name: 'Reading Supported OEM Modules...',\n      result:\n        'VIN: ' + (this._vciResponseData.vin ? this._vciResponseData.vin : vin),\n    });\n    this._vciResponseData.oemModules = [];\n    if (_.isEmpty(this._vciResponseData.allSupportedModules)) {\n      await this.scanAllSupportedModules();\n    }\n    this.logger.debug(\n      'All Supported Modules',\n      this._vciResponseData.allSupportedModules\n    );\n\n    // Full Scan\n    let allSupportedGroups = this._vciResponseData.allSupportedModules.map(\n      (m) => m.InnovaGroup\n    );\n    this.logger.debug('All Supported Groups', allSupportedGroups);\n    if (allSupportedGroups.length > 0) {\n      this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n        name: 'Preparing to scan modules...',\n        result: 'Total Modules: ' + allSupportedGroups.length,\n      });\n      let supportedModules = await this.readDtc(allSupportedGroups);\n      this.logger.debug('Full network scan results', supportedModules);\n      this._vciResponseData.oemModules = supportedModules.map((oemModule) => {\n        return {\n          system: oemModule.System,\n          subsystem: oemModule.SubSystem,\n          Dtcs: oemModule.Dtcs,\n          group: oemModule['InnovaGroup'],\n          modulename: oemModule.ModuleName,\n          Status: oemModule.Status,\n          Skipped: oemModule.Skipped,\n          InvalidDTC: oemModule.Status === InnovaToolModuleStatus.Valid ? 0 : 1,\n        };\n      });\n    }\n    return true;\n  }\n\n  /**\n   * Connect and YMME, Vin, ODO\n   */\n  async connectAndGetVehicleSummary(\n    readOdo = false,\n    readSupportedModules = false\n  ) {\n    if (!this.isConnected) {\n      const isOK = await this.initializeBT();\n      if (!isOK) {\n        throw new Error('Init failed.');\n      }\n    }\n    await this.linkProtocols();\n    // await this.sleep(SLEEP_EACH_VCI_REQUEST);\n    // await this.obdService.obd2RetriveData();\n    await this.sleep(SLEEP_EACH_VCI_REQUEST, true);\n    const { ymmeRaw, ymmeReadable } = await this.getYMME();\n    let vin = this._vciResponseData.vin;\n    if (ymmeReadable && vin) {\n      // Check Make\n      /*\n      await new Promise((resolve) => {\n        this.eventService.publish(\n          EnumAppEvent.CheckIfNeedResetIgnition,\n          ymmeReadable\n        );\n        this.disposeBag = new DisposeBag(this.eventService);\n        this.disposeBag.add(\n          EnumAppEvent.CheckIfNeedResetIgnitionDone,\n          resolve.bind(null)\n        );\n      });\n      this.disposeBag.unsubscribe();*/\n      /* Read vehicle info (since S41): Tun off since Speed Improvement (04-01-2022) */\n      // const { vehicleinfoStr } = await this.getVehicleBufferAndInfo(\n      //   false,\n      //   true\n      // ).catch((err) => {\n      //   this.logger.debug('getVehicleBufferAndInfo error', err);\n      //   return {} as any;\n      // });\n      // if (!_.isEmpty(vehicleinfoStr)) {\n      //   vehicleinfoStr['CalIDs'] = _.join(vehicleinfoStr['CalID'], ' | ');\n      //   vehicleinfoStr['CVNs'] = _.join(vehicleinfoStr['CVN'], ' | ');\n      //   vehicleinfoStr['Modules'] = _.join(vehicleinfoStr['Module'], ' | ');\n      //   this._vciResponseData.vehicleInfoData = vehicleinfoStr;\n      // }\n      // Read odo\n      if (readOdo) {\n        await this.sleep(SLEEP_EACH_VCI_REQUEST, true);\n        await this.readOdometer();\n      }\n      if (readSupportedModules) {\n        await this.sleep(SLEEP_EACH_VCI_REQUEST, true);\n        await this.scanAllSupportedModules();\n      }\n    }\n  }\n\n  private async getOfmItems(pidsupport: any): Promise<Ofm_Item[]> {\n    let numPID = pidsupport.num_profile as number;\n    let results = [];\n    for (let index = 0; index < numPID; index++) {\n      let itemid = pidsupport.list[index].ofm_item as number;\n      let profile_id = pidsupport.list[index].profileid as number;\n      const val = await this.obdService.getofmprofileid_value(profile_id);\n      const objitem = JSON.parse(Dataparser.ObjtoStringBeauty(val));\n      let itemname = await this.obdService.ofm_getitemname(itemid);\n      let unit_str = objitem.unit as string;\n      let value = objitem.value;\n      results.push({\n        id: itemid,\n        name: itemname,\n        value,\n        unit: unit_str,\n      });\n    }\n    return results;\n  }\n\n  async eraseDtcsOBDII() {\n    if (!this.isConnected) {\n      await this.initializeBT();\n    }\n    let eraseRs = await this.obdService.OBD2_erase_Dtcs();\n    if (this.linkedProtocol) {\n      this.linkedProtocol.isFullLink = false; // Force refresh data after erase\n    }\n    this.logger.debug('eraseDtcsOBDII result', eraseRs);\n    return eraseRs ? eraseRs.result === 'OK' : false;\n  }\n\n  async eraseDTCs(\n    oemModule: Oem_Item | { System?: number; SubSystem?: number },\n    clearCache = true\n  ) {\n    if (!this.isConnected) {\n      await this.initializeBT();\n    }\n    let eraseRs = await this.obdService.nwscan_eraseSystem({\n      system: oemModule.System,\n      subSystem: oemModule.SubSystem,\n    });\n    if (this.linkedProtocol) {\n      this.linkedProtocol.isFullLink = false; // Force refresh data after erase\n    }\n    this.logger.debug('eraseDtcs result', oemModule, eraseRs);\n    // if (clearCache) {\n    //   this.currentVin && this.dbService.deleteCacheData(this.currentVin);\n    // }\n    return eraseRs ? eraseRs['Erase_Dtc'] === 'OK' : false;\n  }\n\n  async eraseDTCsByGroup(\n    innovaGroupIds: enumInnovagroup | enumInnovagroup[],\n    filter?: { System; SubSystem }\n  ) {\n    // this.obdService.nwscan_eraseSystem()\n    if (!Array.isArray(innovaGroupIds)) {\n      innovaGroupIds = [innovaGroupIds];\n    }\n    this.logger.debug('eraseDtc', innovaGroupIds);\n    if (!this.isConnected) {\n      await this.initializeBT();\n    }\n    let oemModules = _.get(\n      this.vciResponseData,\n      'allSupportedModules'\n    ) as Oem_Item[];\n    if (_.isEmpty(oemModules)) {\n      return true;\n    }\n    let isErased = true,\n      idx = 0;\n    oemModules = oemModules.filter((m) => {\n      let isValid = [InnovaToolModuleStatus.Valid, undefined].includes(\n        m.Status\n      );\n      let isModuleInGroup = (innovaGroupIds as any).includes(m.InnovaGroup);\n      if (isValid && isModuleInGroup) {\n        if (filter) {\n          return m.System == filter.System && m.SubSystem == filter.SubSystem;\n        }\n        return true;\n      }\n      return false;\n    });\n    while (idx < oemModules.length) {\n      isErased = await this.eraseDTCs(oemModules[idx++], false);\n      if (!isErased) {\n        break;\n      }\n      await this.sleep(SLEEP_EACH_VCI_REQUEST);\n    }\n    // this.currentVin && this.dbService.deleteCacheData(this.currentVin);\n    return isErased;\n  }\n\n  async readPrimaryDtc() {\n    if (!this.linkedProtocol) {\n      await this.linkProtocols();\n    }\n    await this.obdService.obd2QuickRetriveData(null, true);\n    const freezeFrameDtc =\n      await this.obdService.getVehReport_FreezeFrameDTCInfo();\n    if (_.isEmpty(freezeFrameDtc)) {\n      return [];\n    } else {\n      return [\n        {\n          InvalidDTC: 0,\n          Dtcs: [freezeFrameDtc],\n        },\n      ];\n    }\n  }\n\n  async readDtcsOBDII(): Promise<{ InvalidDTC: number; Dtcs: string[][] }[]> {\n    if (!this.linkedProtocol) {\n      await this.linkProtocols();\n    }\n    const dtcInfoData: any = await this.obdService.getVehReport_OBD2_DTC_Info();\n    if (dtcInfoData.length) {\n      let moduleIndex = 0;\n      do {\n        let moduleDtcs = dtcInfoData[moduleIndex].Dtcs;\n        if (moduleDtcs) {\n          let index = 0;\n          do {\n            await this.sleep(SLEEP_EACH_VCI_REQUEST);\n            const dtcDef = await this.obdService\n              .getVehReport_OBD2_DTC_Def(moduleIndex, index)\n              .catch(this.logger.error);\n            moduleDtcs[index] = dtcDef as any;\n          } while (++index < moduleDtcs.length);\n        }\n      } while (++moduleIndex < dtcInfoData.length);\n      return dtcInfoData;\n    }\n    return null;\n  }\n\n  async readDtc(\n    innovaGroupIds: enumInnovagroup | enumInnovagroup[],\n    filter?: { System; SubSystem }\n  ) {\n    // this.obdService.nwscan_eraseSystem()\n    if (!this.isConnected) {\n      return null;\n    }\n    let oemModules = this.vciResponseData.allSupportedModules;\n    let total = oemModules.length;\n    if (Array.isArray(oemModules)) {\n      oemModules = oemModules.filter((m) => !!m.ModuleName);\n    }\n    if (filter) {\n      oemModules = oemModules.filter(\n        (m) => m.System === filter.System && m.SubSystem === filter.SubSystem\n      );\n    }\n    let res = [],\n      totalFiltered = oemModules.length,\n      index = 0;\n    if (!Array.isArray(innovaGroupIds)) {\n      innovaGroupIds = [innovaGroupIds];\n    }\n    let result = '';\n    while (oemModules.length) {\n      const oemModule = oemModules.shift();\n      if (innovaGroupIds.includes(oemModule.InnovaGroup)) {\n        this.logger.debug(\n          `Start reading module [${++index}/${totalFiltered}/${total}] DTCs`,\n          oemModule\n        );\n        this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n          name:\n            '(' +\n            index +\n            '/' +\n            total +\n            '): ' +\n            oemModule.ModuleName +\n            ' - Scanning...',\n          result: result,\n        });\n        if (!this.linkedProtocol) {\n          this.logger.debug('Try linkprotocol before readDtc');\n          await this.linkProtocols();\n        }\n        await this.sleep(SLEEP_EACH_VCI_REQUEST);\n        let oemItem = await this.obdService.nwscan_LinkSystem({\n          system: oemModule.System,\n          subSystem: oemModule.SubSystem,\n        });\n        this.logger.debug(\n          'nwscan_LinkSystem details',\n          oemItem,\n          this.linkedProtocol\n        );\n        if (oemItem) {\n          let _oemModule = oemModule;\n          if (_.has(oemItem, 'data')) {\n            let dtcs = _.get(oemItem, 'data.Dtcs', []);\n            if (dtcs.length) {\n              let dtcId = 0;\n              while (dtcId < dtcs.length) {\n                await this.sleep(SLEEP_EACH_VCI_REQUEST);\n                let dtcinfo = await this.obdService.nwscan_getdtcdef({\n                  system: oemModule.System,\n                  subSystem: oemModule.SubSystem,\n                  id: dtcId,\n                });\n                dtcinfo['def'] && (dtcs[dtcId]['definition'] = dtcinfo['def']);\n                dtcId++;\n              }\n\n              result = _oemModule.ModuleName + ': ' + dtcs.length + ' DTCs';\n            } else {\n              result = _oemModule.ModuleName + ': Good';\n            }\n            _oemModule.Dtcs = dtcs;\n            _oemModule.Skipped = false;\n            if (oemItem['data']['IsInvalidDTC'] === 1) {\n              _oemModule.Status = InnovaToolModuleStatus.Available;\n            } else {\n              _oemModule.Status = InnovaToolModuleStatus.Valid;\n            }\n          } else {\n            _oemModule.Dtcs = [];\n            _oemModule.Status =\n              _.get(oemItem, 'error.Status') ===\n              InnovaToolModuleStatus.NotSupported\n                ? InnovaToolModuleStatus.NotSupported\n                : InnovaToolModuleStatus.Unknown;\n            result = _oemModule.ModuleName + ': Unresponsive';\n            _oemModule.Skipped = true;\n          }\n          this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n            name:\n              index < oemModules.length\n                ? 'Finish! Preparing to scan next module...'\n                : '',\n            result: result,\n          });\n          res.push(_oemModule);\n        } else {\n          let _oemModule = oemModule;\n          _oemModule.Dtcs = null;\n          _oemModule.Status = InnovaToolModuleStatus.Unknown;\n          _oemModule.Skipped = true;\n          this.eventService.publish(InnovaVCIEvent.SCAN_STATUS, {\n            name:\n              index < oemModules.length\n                ? 'Finish! Preparing to scan next module...'\n                : '',\n            result: result,\n          });\n          res.push(_oemModule);\n        }\n      }\n    }\n    return res;\n  }\n\n  async obdTest(mode: number) {\n    if (!this.isConnected) {\n      const isOK = await this.initializeBT();\n      if (!isOK) {\n        throw new Error('Init failed.');\n      }\n    }\n    let result;\n    switch (mode) {\n      case 5:\n        await this.obdService.linkVehReport_OBD2_SPECIALTEST_SID5();\n        result =\n          await this.obdService.getVehReport_OBD2_SPECIALTEST_SID5_BUFF();\n        return JSON.parse(Dataparser.bytesToString(result[0].data));\n      case 6:\n        await this.obdService.linkVehReport_OBD2_SPECIALTEST_SID6();\n        result =\n          await this.obdService.getVehReport_OBD2_SPECIALTEST_SID6_BUFF();\n        return result[0].data || result;\n      case 8:\n        result = await this.obdService.linkVehReport_OBD2_SPECIALTEST_SID8();\n        // result = await this.obdService.getVehReport_OBD2_SPECIALTEST_SID8_BUFF();\n        return result;\n      default:\n        throw new Error(`This mode test ${mode} is unsupported.`);\n    }\n  }\n\n  async runToolFeature(feature: InnovaToolFeatures) {\n    if (!this.linkedProtocol) {\n      await this.linkProtocols();\n    }\n    await this.sleep(SLEEP_TIMEOUT);\n    switch (feature) {\n      case InnovaToolFeatures.SpecialTest:\n        return this.obdService.spectest_enter_proc();\n      case InnovaToolFeatures.ActuatorTest:\n        return this.obdService.actuatortest_enter_proc();\n      case InnovaToolFeatures.OilReset:\n        return this.obdService.oil_reset_enter_proc();\n      case InnovaToolFeatures.BatteryReset:\n        return this.obdService.battery_reset_enter_proc();\n      case InnovaToolFeatures.EPB:\n        return this.obdService.epb_enter_proc();\n      case InnovaToolFeatures.SASCalib:\n        return this.obdService.sas_enter_proc();\n      case InnovaToolFeatures.ABS_Bleeding:\n        return this.obdService.ABS_bleeding_enter_proc();\n      case InnovaToolFeatures.Battery_Health_Check:\n        return this.obdService.battery_health_check_enter_proc();\n      case InnovaToolFeatures.DPF_Reset:\n        return this.obdService.dpf_enter_proc();\n      case InnovaToolFeatures.TPMS_Reset:\n        return this.obdService.tpms_reset_enter_proc();\n      case InnovaToolFeatures.Service_Reset:\n        return this.obdService.service_reset_proc_enter();\n    }\n  }\n\n  private async initToolScreenGUI(): Promise<boolean> {\n    if (this.isScreenGuiInitialized) return true;\n    this.logger.debug('initToolScreenGUI OK');\n    if (!this.isSetVciLocale) {\n      this.isSetVciLocale = await this.setVciLocale();\n    }\n    this._screenEvents = new Subject();\n    this.eventService.subscribe(InnovaVCIEvent.USER_GUI_INFO, (data) => {\n      if (!data) return;\n      this._screenEvents.next(new InnovaScreenEventResp(data));\n    });\n    this.isScreenGuiInitialized = true;\n    let isOk = await this.sleep(200).catch(() => false);\n    return isOk;\n  }\n\n  private _screenActions = {\n    initGUIProc: async () => {\n      await this.obdService.deinitGUIProc().catch((err) => {});\n      try {\n        await this.obdService.initGUIProc();\n      } catch (err) {\n        return false;\n      }\n      return this.initToolScreenGUI();\n    },\n    deinitGUIProc: (\n      delayMs = SLEEP_TIMEOUT,\n      timeoutMs = TIMEOUT_GET_VEH_SUMMARY\n    ) => {\n      if (this.isScreenGuiInitialized) {\n        this.isScreenGuiInitialized = false;\n        return new Promise(async (resolve) => {\n          const sto = setTimeout(() => {\n            this.logger.debug('deinitGUIProc timed out');\n            resolve(false);\n          }, timeoutMs);\n          if (delayMs) {\n            await this.sleep(delayMs);\n          }\n          await this.obdService\n            .deinitGUIProc()\n            .catch(this.logger.debug.bind(null, 'deinitGUIProc failed'));\n          this.logger.debug('deinitGUIProc OK');\n          clearTimeout(sto);\n          resolve(true);\n        });\n      }\n      return false;\n    },\n    back: () => {\n      this.logger.debug('press left key');\n      return this.obdService.gui_set_softkey('left');\n    },\n    next: () => {\n      this.logger.debug('press right key');\n      return this.obdService.gui_set_softkey('right');\n    },\n    selectOption: (option) => {\n      this.logger.debug('press option key', option);\n      return this.obdService.gui_set_key_option(option);\n    },\n    setInput: (value: string) => {\n      this.logger.debug('set input value', value);\n      return this.obdService.gui_set_input_val(value);\n    },\n  };\n\n  get screenAction() {\n    return this._screenActions;\n  }\n\n  private _screenEvents: Subject<InnovaScreenEventResp>;\n\n  get screenEvents() {\n    return this._screenEvents;\n  }\n\n  async getYMME(readableData = true) {\n    // await this.linkProtocols();\n    let ymmeRaw, ymmeReadable;\n    ymmeRaw = await this.obdService.getVehReport_YMME_PROFILE();\n    this.logger.debug('YMME Profile', ymmeRaw);\n    if (ymmeRaw.length === 0) {\n      throw new Error(\n        'get ymme failed: ' + ymmeRaw[0].error\n          ? ymmeRaw[0].error.message\n          : 'data is empty'\n      );\n    }\n    let isNoYmme = isEmptyResponse(ymmeRaw[0].data);\n    if (isNoYmme) {\n      this._vciResponseData.vin = null;\n    } else {\n      this._vciResponseData.vinProfile = bytesToBase64(ymmeRaw[0].data);\n      let vin = bytesToString(ymmeRaw[0].data).replace(/[^0-9a-zA-Z]/g, '');\n      if (vin && vin.length >= 17) {\n        this._vciResponseData.vin = vin.substr(0, 17);\n      }\n      // readable data\n      if (readableData) {\n        const ymmeInfo = (await this.obdService\n          .ymme_get(254)\n          .catch((err) => null)) as any;\n        this.logger.debug('ymme_get 254', ymmeInfo);\n        ymmeReadable = await this.obdService.getVehReport_YMME_String();\n        this.logger.debug('getVehReport_YMME_String', ymmeReadable);\n        if (ymmeReadable && ymmeInfo && ymmeInfo['vehinfo']) {\n          /*\n           * Update 'year' if not matched (FW: 22)\n           * https://iectech.atlassian.net/browse/ITRD-207\n           */\n          const vehinfo = ymmeInfo['vehinfo'] || '';\n          const year = vehinfo.substr(0, vehinfo.indexOf(' '));\n          if (ymmeReadable.year !== year) {\n            ymmeReadable.year = year;\n          }\n        }\n        this.setYmme(ymmeReadable);\n      }\n    }\n    return { ymmeRaw, ymmeReadable };\n  }\n\n  async getVehicleBufferAndInfo(readBuffer = true, readInfo = true) {\n    let vehicleinfoBuffer, vehicleinfoStr;\n    if (!this.linkedProtocol) {\n      await this.linkProtocols();\n    }\n    if (readBuffer) {\n      vehicleinfoBuffer =\n        await this.obdService.getVehReport_OBD2_VEHINFO_SID9_BUFF();\n      this.logger.debug(\n        'getVehReport_OBD2_VEHINFO_SID9_BUFF',\n        vehicleinfoBuffer\n      );\n      if (vehicleinfoBuffer.length === 0) {\n        throw new Error(\n          'get vehicleinfo failed: ' + vehicleinfoBuffer[0].error\n            ? vehicleinfoBuffer[0].error.message\n            : 'data is empty'\n        );\n      }\n      // It seems error if vehicleInfo empty\n      if (isEmptyResponse(vehicleinfoBuffer[0].data)) {\n        throw new Error('getVehReport_OBD2_VEHINFO_SID9_BUFF response empty');\n      }\n      this._vciResponseData.vehicleInfoEcm = bytesToBase64(\n        vehicleinfoBuffer[0].data\n      );\n      this._vciResponseData.vehicleInfoTcm = bytesToBase64(\n        vehicleinfoBuffer[1] ? vehicleinfoBuffer[1].data : ''\n      );\n    }\n    if (readInfo) {\n      vehicleinfoStr =\n        await this.obdService.getVehReport_OBD2_VehicleInfo_SID9();\n      this.logger.debug('getVehReport_OBD2_VehicleInfo_SID9', vehicleinfoStr);\n      if (!_.isEmpty(vehicleinfoStr)) {\n        this._vciResponseData.vehicleInfoData = vehicleinfoStr;\n      }\n    }\n\n    return { vehicleinfoStr, vehicleinfoBuffer };\n  }\n\n  async readOdometer() {\n    if (!this.isSetVciLocale) {\n      await this.setVciLocale({ setUnit: true, setLang: false });\n    }\n    let odometer = await this.obdService.getodometer_pidsupport();\n    if (odometer) {\n      let ofmitem = await this.getOfmItems(odometer);\n      if (ofmitem.length) {\n        let odo = parseInt(ofmitem.shift().value, 10);\n        // Onlyu set Mileage if it's valid\n        let unitId = this.vciResponseData.unitId,\n          isInvalid;\n        if (unitId === ENUMVCIs.UNIT_ID.Standard) {\n          isInvalid = ValidateMileageKm({ value: odo } as any);\n        } else {\n          isInvalid = ValidateMileage({ value: odo } as any);\n        }\n        if (isInvalid) {\n          this.logger.debug(\n            `Invalid mileage value: ${odo}, skip set to vciResponse`\n          );\n        } else {\n          this._vciResponseData.mileage = odo;\n        }\n        return odo;\n      }\n    }\n    return NaN;\n  }\n\n  //#region Live Data\n  async getSupportedLiveDataPIDs(\n    innovagroup?: InnovaToolLiveDataGroup\n  ): Promise<Pid_ItemBase[]> {\n    if (!this.linkedProtocol) {\n      await this.linkProtocols();\n    }\n    if (!this.isSetVciLocale) {\n      this.isSetVciLocale = await this.setVciLocale();\n    }\n    let getlistfunc;\n    switch (innovagroup as InnovaToolLiveDataGroup) {\n      case InnovaToolLiveDataGroup.ABS:\n        getlistfunc = this.obdService.ld_abs_get_itemlist;\n        break;\n      case InnovaToolLiveDataGroup.SRS:\n        getlistfunc = this.obdService.ld_srs_get_itemlist;\n        break;\n      case InnovaToolLiveDataGroup.ECM:\n      case InnovaToolLiveDataGroup.PCM:\n        getlistfunc = this.obdService.ld_ecm_get_itemlist;\n        break;\n      default:\n        getlistfunc = this.obdService.ld_obd2_get_itemlist;\n        break;\n    }\n    const data = await getlistfunc.call(this.obdService);\n    this.logger.debug('getSupportedLiveDataPIDs data ', data);\n    if (data) {\n      let pids = data['ListItem'] || [];\n      let res: Pid_ItemBase[] = [];\n      while (pids.length) {\n        let pidItemInfo = pids.shift();\n        let pId = Number.parseInt(pidItemInfo[0]);\n        let pIdHex = '0x' + ('00' + pId.toString(16).toUpperCase()).slice(-2);\n        let pidItem = {\n          id: pId,\n          name: pidItemInfo[1],\n          desc: `[${pIdHex}] ${pidItemInfo[1]}`,\n          max: parseFloat(pidItemInfo[2]),\n          min: parseFloat(pidItemInfo[3]),\n          unit: pidItemInfo[4],\n          range: 'N/A',\n        } as Pid_ItemBase;\n        if (!(isNaN(pidItem.min) || isNaN(pidItem.max))) {\n          pidItem.range = `${pidItem.min} to ${pidItem.max}`;\n        }\n        // let iteminfo = await getinteminfofunc.call(this.obdService, pidItem.id).catch(() => null);\n        // if (iteminfo) {\n        //   pidItem = {\n        //     ...pidItem, ...{\n        //       min: parseInt(iteminfo['MinValue']),\n        //       max: parseInt(iteminfo['MaxValue']),\n        //       unit: iteminfo['Unit']\n        //     }\n        //   };\n        // } /** Since v1.6, tool already responses iteminfo in getlist function */\n        res.push(pidItem);\n      }\n      this.logger.debug('getSupportedLiveDataPIDs res ', res);\n      return res;\n    }\n    return null;\n  }\n\n  async getLiveDataPIDsValue(\n    pids: number[],\n    innovagroup?: InnovaToolLiveDataGroup\n  ) {\n    const listPids = Array.from(pids || []);\n    let getitemvalfunc;\n    switch (innovagroup as InnovaToolLiveDataGroup) {\n      case InnovaToolLiveDataGroup.ABS:\n        getitemvalfunc = this.obdService.ld_abs_get_itemval;\n        break;\n      case InnovaToolLiveDataGroup.SRS:\n        getitemvalfunc = this.obdService.ld_srs_get_itemval;\n        break;\n      case InnovaToolLiveDataGroup.ECM:\n      case InnovaToolLiveDataGroup.PCM:\n        getitemvalfunc = this.obdService.ld_ecm_get_itemval;\n        break;\n      default:\n        getitemvalfunc = this.obdService.ld_obd2_get_itemval;\n        break;\n    }\n    let pidsValues = [];\n    while (listPids.length) {\n      let pid = listPids.shift();\n      const data = await getitemvalfunc.call(this.obdService, pid);\n      if (data && data['ListValue']) {\n        const val = data['ListValue'];\n        let value = val[1] || '',\n          unit = '',\n          regex = /(.*) \\((.*)\\)/i,\n          matches = value.match(regex);\n        // this.logger.info('valListVal', data);\n        if (matches) {\n          value = matches[1];\n          unit = matches[2];\n        }\n        pidsValues.push({\n          id: val[0],\n          value,\n          unit,\n        });\n        this.logger.info('getLiveDataPIDsValue data', data, pidsValues);\n      }\n      await this.helper.sleep(pid);\n    }\n    return pidsValues;\n  }\n\n  async getLiveDataPIDsValueByRange(\n    start: number,\n    end: number,\n    innovagroup?: InnovaToolLiveDataGroup\n  ): Promise<{ id; value }[]> {\n    let getitemvalfunc;\n    switch (innovagroup as InnovaToolLiveDataGroup) {\n      case InnovaToolLiveDataGroup.ABS:\n        getitemvalfunc = this.obdService.ld_abs_get_ListItem_Val;\n        break;\n      case InnovaToolLiveDataGroup.SRS:\n        getitemvalfunc = this.obdService.ld_srs_get_ListItem_Val;\n        break;\n      case InnovaToolLiveDataGroup.ECM:\n      case InnovaToolLiveDataGroup.PCM:\n        getitemvalfunc = this.obdService.ld_ecm_get_ListItem_Val;\n        break;\n      default:\n        getitemvalfunc = this.obdService.ld_obd2_get_ListItem_Val;\n        break;\n    }\n    let data = await getitemvalfunc.call(this.obdService, start, end);\n    this.logger.info('getLiveDataPIDsValueByRange data', data);\n    // data = {\"Group\":2,\"ListValue\":[[154,\"1.8 (mph)\"],[156,\"28.7 (mph)\"],[158,\"114.9 (mph)\"],[160,\"217.3 (mph)\"],[147,\"Not Supported\"]]};\n    if (data && data['ListValue']) {\n      return data['ListValue'].map((data) => {\n        let value = data[1] || '',\n          unit = '',\n          regex = /(.*) \\((.*)\\)/i,\n          matches = value.match(regex);\n        if (matches) {\n          value = matches[1];\n          unit = matches[2];\n        }\n        return {\n          id: data[0],\n          value,\n          unit,\n        };\n      });\n    }\n    return null;\n  }\n  //#endregion Live Data\n  get vciResponseData() {\n    let res = {};\n    if (!_.isEmpty(this._vciResponseData)) {\n      res = _.cloneDeep(this._vciResponseData);\n    }\n    return res as VCIResponseData;\n  }\n\n  get isEmptyVciData() {\n    return _.isEmpty(this._vciResponseData);\n  }\n\n  setVciResponseData(data: VCIResponseData) {\n    this._vciResponseData = data;\n  }\n\n  resetVciReponseData() {\n    this.setVciResponseData({} as VCIResponseData);\n  }\n\n  /**\n   * set vin from user input for box-novin\n   * @param vin\n   */\n  async setVin(vin: string, force = false) {\n    if (force || (this._vciResponseData && !this._vciResponseData.vin)) {\n      this._vciResponseData.vin = vin;\n      if (vin === '') {\n        // In case user select vehicle\n        return true;\n      }\n      let isOK = await this.obdService.setVINString(vin);\n      await this.sleep(2000);\n      await this.getYMME();\n      return isOK;\n    } else {\n      this.logger.debug(\n        'Cannot override VIN read from box.',\n        this._vciResponseData.vin\n      );\n      return false;\n    }\n  }\n\n  get currentVin() {\n    return this._vciResponseData ? this._vciResponseData.vin : '';\n  }\n\n  setYmme(ymme: { make; year; model; engine }) {\n    this._vciResponseData.ymme = {\n      make: ymme.make || 'N/A',\n      year: ymme.year || 'N/A',\n      model: ymme.model || 'N/A',\n      engine: ymme.engine || 'N/A',\n    };\n  }\n\n  setMileage(mileage: number) {\n    this._vciResponseData.mileage = mileage;\n  }\n\n  setSupportedModules(modules: Oem_Item[]) {\n    if (_.isArray(modules)) {\n      _.set(this._vciResponseData, 'allSupportedModules', modules);\n    }\n  }\n\n  async getSupportedModules() {\n    let modules = _.get(this.vciResponseData, 'allSupportedModules', []);\n    if (!modules) {\n      modules = await this.scanAllSupportedModules();\n    }\n    return modules;\n  }\n\n  removeSupportedModules() {\n    _.unset(this._vciResponseData, 'allSupportedModules');\n  }\n\n  async scanAllSupportedModules(useCached = false, retry = 1) {\n    // await this.dbService.deleteCacheData();\n    // let loadSupportedModules;\n    // if (this.dbService.dbState) {\n    //   this.dbService.fetchCacheData().subscribe((caches) => {\n    //     if (caches) loadSupportedModules = caches;\n    //   });\n    // }\n    if (!this.isSetVciLocale) {\n      this.isSetVciLocale = await this.setVciLocale();\n    }\n    let oemModules = await this.obdService\n      .nwscan_getSupportSystem()\n      .catch(this.logger.debug.bind(null, 'nwscan_getSupportSystem failed'));\n    if (oemModules && _.isArray(oemModules['data'])) {\n      this._vciResponseData.allSupportedModules = oemModules['data'].filter(\n        (m) => m.groupName\n      );\n    } else if (retry > 0) {\n      await this.sleep(SLEEP_TIMEOUT * 5);\n      this.logger.debug(`Retry run nwscan_getSupportSystem`);\n      return this.scanAllSupportedModules(useCached, retry - 1);\n    } else {\n      this._vciResponseData.allSupportedModules = [];\n    }\n    return this._vciResponseData.allSupportedModules;\n  }\n\n  /** YMME */\n  async ymme_init(): Promise<{ vehinfo?; field: string; options: string[] }> {\n    let resp = await this.obdService.ymme_init();\n    return resp as any;\n  }\n\n  async ymme_get(\n    selection_id\n  ): Promise<{ vehinfo?; field: string; options: string[] }> {\n    let resp = await this.obdService.ymme_get(selection_id);\n    return resp as any;\n  }\n\n  async ymme_confirm(): Promise<boolean> {\n    let resp = await this.obdService.ymme_confirm();\n    return resp;\n  }\n\n  async ymme_back(): Promise<{ vehinfo?; field: string; options: string[] }> {\n    let resp = await this.obdService.ymme_back();\n    return resp as any;\n  }\n\n  /** Start VCI Data Log */\n  private _isVciLog = false;\n  async enableVciLog(isEnabled?: boolean) {\n    if (!this.isConnected) {\n      await this.initializeBT();\n    }\n    this._isVciLog = isEnabled;\n    this.stoCheckConnection = -1;\n    let rs = isEnabled\n      ? await this.obdService.StartLog()\n      : await this.obdService.StopLog();\n    setTimeout(() => {\n      this.stoCheckConnection = 0;\n    }, TIMEOUT_INIT_CONNECTION / 2);\n    return rs;\n  }\n\n  async readVciLog() {\n    let logMessages = '';\n    this.logger.debug('Start readVciLog...');\n    this.stoCheckConnection = -1;\n    try {\n      if (this._isVciLog) {\n        await this.obdService.StopLog();\n        this._isVciLog = false;\n        await this.sleep(SLEEP_TIMEOUT, false);\n      }\n      const logPayload = await this.obdService.GetLog();\n      if (logPayload) {\n        logMessages = Dataparser.getStringOfObj(logPayload);\n        // for (let x of logPayload) {\n        //   if (x.payload) {\n        //     logMessages += Dataparser.bytesToString(x.payload);\n        //   }\n        // }\n      }\n    } catch (err) {\n      this.logger.debug('readVciLog err', err);\n    }\n    setTimeout(() => {\n      this.stoCheckConnection = 0;\n    }, TIMEOUT_INIT_CONNECTION / 2);\n    return logMessages;\n  }\n  /** End VCI Data Log */\n\n  private handleResponse(response: { tag; data }) {\n    try {\n      let { tag, data } = response;\n      if ((this.supportLogTags || []).includes(tag)) {\n        // this.logger.debug(`[${new Date().toISOString()}] ${tag} ${data}`);\n        if (!AppConfig.IS_ENABLED_LOGGER) {\n          tag = `[${new Date().toISOString()}] ${tag}`;\n        }\n        this.logger.debug(`${tag} ${data}`);\n      }\n      // else {\n      //   throw new Error(`Tag is not suppported: ${tag}`);\n      // }\n    } catch (e) {\n      this.logger.error('Cannot handle this repsonse', response, e);\n    }\n  }\n}\n"]}