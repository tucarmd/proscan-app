{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;AAQA,UAAMA,cAAc,GAAG,CAAvB;AACA,UAAMC,mBAAmB,GAAG,CAA5B;AACA,UAAMC,oBAAoB,GAAG,CAA7B,EACA;;UACMC;AACJC,gCAAYC,SAAZD,EAAuBE,MAAvBF,EAA+B;AAAA;;AAC7B,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKC,MAAL,GAAcA,MAAd;AACA,eAAKC,KAAL,GAAaP,cAAb;AACD;;;;iBACKQ,aAAI,CAACC,SAAD,EAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,yBAAI,CAACH,KAAL,GAAaN,mBAAb;;AADoB,wBAEfS,KAAI,CAACC,OAFU;AAAA;AAAA;AAAA;;AAGZN,6BAHY,GAGAK,KAAI,CAACL,SAHL;AAAA;AAIlB,2BAAqBO,oEAAgBF,KAAI,CAACG,QAArBD,EAA+BH,SAA/BG,EAA0CP,SAA1CO,EAAqD,CAAC,UAAD,EAAa,oBAAb,CAArDA,EAAyFF,KAAI,CAACJ,MAA9FM,CAArB;;AAJkB;AAIlBF,yBAAI,CAACC,OAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrB;AACD;AACF;AACA;;;;iBACEG,iBAAQ,GAAG;AACTC,qEAAO,KAAKR,KAAL,KAAeL,oBAAtBa,EAA4C,6BAA5CA;AACA,gBAAMJ,OAAO,GAAG,KAAKA,OAArB;;AACA,gBAAIA,OAAJ,EAAa;AACX,kBAAI,KAAKE,QAAT,EAAmB;AACjB,qBAAKA,QAAL,CAAcG,iBAAd,CAAgCL,OAAO,CAACM,aAAxC,EAAuDN,OAAvD;AADF,qBAGK;AACHA,uBAAO,CAACO,MAARP;AACD;AACF;;AACD,iBAAKQ,GAAL,GAAWC,SAAX;AACA,iBAAKb,KAAL,GAAaL,oBAAb;AACD;;;;AAEH,UAAMmB,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,EAAP,EAAWjB,MAAX,EAAsB;AACpC,YAAI,CAACgB,IAAL,EAAW;AACT,iBAAO,KAAP;AACD;;AACD,YAAIA,IAAI,CAACjB,SAALiB,KAAmBC,EAAvB,EAA2B;AACzB,iBAAO,KAAP;AACD;;AACD,eAAOC,yDAAsBF,IAAI,CAAChB,MAA3BkB,EAAmClB,MAAnCkB,CAAP;AAPF;;AASA,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOpB,MAAP,EAAkB;AACtC,YAAI,CAACoB,IAAL,EAAW;AACT,iBAAO,IAAP;AACD;;AACD,YAAIA,IAAI,YAAYvB,cAApB,EAAoC;AAClC,iBAAOuB,IAAP;AACD;;AACD,eAAO,IAAIvB,cAAJ,CAAmBuB,IAAnB,EAAyBpB,MAAzB,CAAP;AAPF;;AASA,UAAMqB,cAAc,GAAIC,SAAlBD,cAAkBC,MAAD,EAAW;AAChC,eAAOA,KAAK,CACTC,GADID,CACCF,cAAD,EAAU;AACf,cAAIA,IAAI,YAAYvB,cAApB,EAAoC;AAClC,mBAAOuB,IAAP;AACD;;AACD,cAAI,eAAeA,IAAnB,EAAyB;AACvB,mBAAOD,aAAa,CAACC,IAAI,CAACrB,SAAN,EAAiBqB,IAAI,CAACI,cAALJ,KAAwB,IAAxBA,GAA+BN,SAA/BM,GAA2CA,IAAI,CAACI,cAAjE,CAApB;AACD;;AACD,iBAAOL,aAAa,CAACC,IAAD,EAAON,SAAP,CAApB;AARK,WAUJW,MAVIH,CAUII,WAAD;AAAA,iBAAOA,CAAC,KAAK,IAAb;AAAA,SAVHJ,CAAP;AADF;;AAcA,UAAMK,MAAM,GAAG,4GAAf;;AAEA,UAAMC,GAAG;AACP9B,qBAAY+B,OAAZ/B,EAAqB;AAAA;;AACnBgC,iEAAiB,IAAjBA,EAAuBD,OAAvBC;AACA,eAAKC,cAAL,GAAsBC,uDAAY,IAAZA,EAAkB,gBAAlBA,EAAoC,CAApCA,CAAtB;AACA,eAAKC,gBAAL,GAAwBD,uDAAY,IAAZA,EAAkB,kBAAlBA,EAAsC,CAAtCA,CAAxB;AACA,eAAKE,eAAL,GAAuBF,uDAAY,IAAZA,EAAkB,iBAAlBA,EAAqC,CAArCA,CAAvB;AACA,eAAKG,UAAL,GAAkB,EAAlB;AACA,eAAKC,gBAAL,GAAwB,IAAxB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKC,KAAL,GAAa,EAAb;AACA;AACJ;AACA;;AACI,eAAKC,QAAL,GAAgB,IAAhB;AACD;;AAhBM;AAAA;AAAA,iBAiBPC,4BAAmB,GAAG;AACpB,gBAAI,KAAKC,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAaC,MAAb,CAAoB,KAAKC,YAAL,KAAsB,IAA1C;AACD;AACF;AArBM;AAAA;AAAA,iBAsBPC,oBAAW,GAAG;AACZ,gBAAI,KAAKC,IAAL,KAAcjC,SAAlB,EAA6B;AAC3B,kBAAI,CAAC,KAAKuB,SAAV,EAAqB;AACnB,qBAAKW,OAAL,CAAa,KAAKD,IAAlB,EAAwB,KAAKE,UAA7B;AACD;AACF;AACF;AA5BM;AAAA;AAAA,iBA6BPC,0BAAiB,GAAG;AAClB,iBAAKb,SAAL,GAAiBc,QAAQ,CAACC,aAATD,CAAuB,YAAvBA,MAAyC,IAAzCA,IAAiD,KAAKE,EAAL,CAAQC,OAAR,CAAgB,aAAhB,MAAmC,IAArG;;AACA,gBAAI,KAAKT,YAAL,KAAsB/B,SAA1B,EAAqC;AACnC,kBAAMyC,IAAI,GAAGC,8DAAW,IAAXA,CAAb;AACA,mBAAKX,YAAL,GAAoBY,oEAAkB,kBAAlBA,EAAsCF,IAAI,KAAK,KAA/CE,CAApB;AACD;;AACD,iBAAK1B,cAAL,CAAoB2B,IAApB;AACD;AApCM;AAAA;AAAA,iBAqCDC,yBAAgB,GAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBC,0BAAI,CAACd,WAAL;;AADuB;AAER,2BAAOe;AAAA;AAAA;AAAA;AAAA,2BAAP;;AAFQ;AAEvBD,0BAAI,CAACjB,OAFkB,kBAEmCmB,sBAFnC,CAE0DF,MAAI,CAACP,EAF/D,EAEmEO,MAAI,CAACG,QAAL,CAAcC,IAAd,CAAmBJ,MAAnB,CAFnE,EAE6FA,MAAI,CAACK,OAAL,CAAaD,IAAb,CAAkBJ,MAAlB,CAF7F,EAEsHA,MAAI,CAACM,MAAL,CAAYF,IAAZ,CAAiBJ,MAAjB,CAFtH,EAE8IA,MAAI,CAACO,KAAL,CAAWH,IAAX,CAAgBJ,MAAhB,CAF9I;;AAGvBA,0BAAI,CAAClB,mBAAL;;AAHuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAIxB;AAzCM;AAAA;AAAA,iBA0CP0B,0BAAiB,GAAG;AAClB,iBAAK7B,SAAL,GAAiB,KAAjB;AACD;AA5CM;AAAA;AAAA,iBA6CP8B,6BAAoB,GAAG;AAAA,uDACF,KAAK7B,KADH;AAAA;;AAAA;AACrB,kEAA+B;AAAA,oBAApBxB,IAAoB;AAC7BsD,uEAAUtD,IAAI,CAACX,OAAfiE,EAAwBC,iDAAxBD;;AACAtD,oBAAI,CAACR,QAALQ;AAHmB,gBAKrB;;AALqB;AAAA;AAAA;AAAA;AAAA;;AAMrB,gBAAI,KAAK2B,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAa6B,OAAb;AACA,mBAAK7B,OAAL,GAAe7B,SAAf;AACD;;AACD,iBAAKqB,UAAL,CAAgBsC,MAAhB,GAAyB,CAAzB;AACA,iBAAKjC,KAAL,CAAWiC,MAAX,GAAoB,CAApB;AACA,iBAAKlC,SAAL,GAAiB,IAAjB;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApES;AAAA;AAAA,iBAqEPmC,aAAI,CAAC3E,SAAD,EAAYyB,cAAZ,EAA4BmD,IAA5B,EAAkCC,IAAlC,EAAwC;AAC1C,mBAAO,KAAKC,MAAL,CAAY,CAAC,CAAb,EAAgB9E,SAAhB,EAA2ByB,cAA3B,EAA2CmD,IAA3C,EAAiDC,IAAjD,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjFS;AAAA;AAAA,iBAkFPC,eAAM,CAACC,WAAD,EAAc/E,SAAd,EAAyByB,cAAzB,EAAyCmD,IAAzC,EAA+CC,IAA/C,EAAqD;AACzD,mBAAO,KAAKG,WAAL,CAAiBD,WAAjB,EAA8B,CAAC;AAAE/E,uBAAF,EAAEA,SAAF;AAAayB;AAAb,aAAD,CAA9B,EAA+DmD,IAA/D,EAAqEC,IAArE,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9FS;AAAA;AAAA,iBA+FPG,oBAAW,CAACD,WAAD,EAAcE,gBAAd,EAAgCL,IAAhC,EAAsCC,IAAtC,EAA4C;AACrD,mBAAO,KAAKK,SAAL,CAAe;AACpBC,yBAAW,EAAEJ,WADO;AAEpBK,yBAAW,EAAEH,gBAFO;AAGpBL;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AA5GS;AAAA;AAAA,iBA6GPQ,YAAG,CAACT,IAAD,EAAOC,IAAP,EAAa;AACd,mBAAO,KAAKS,WAAL,CAAiB,CAAC,CAAlB,EAAqB,CAArB,EAAwBV,IAAxB,EAA8BC,IAA9B,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AAtHS;AAAA;AAAA,iBAuHPU,cAAK,CAACC,eAAD,EAAkBZ,IAAlB,EAAwBC,IAAxB,EAA8B;AACjC,gBAAMY,EAAE,GAAG;AACTC,yBAAW,EAAE,CAAC,CADL;AAETC,yBAAW,EAAE,CAAC,CAFL;AAGTf;AAHS,aAAX;;AAKA,gBAAI,OAAOY,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,CAACxF,SAA3D,EAAsE;AACpEyF,gBAAE,CAACG,UAAHH,GAAgBD,eAAhBC;AACAA,gBAAE,CAACC,WAAHD,GAAiB,CAAjBA;AAFF,mBAIK,IAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AAC5CC,gBAAE,CAACC,WAAHD,GAAiBD,eAAe,GAAG,CAAnCC;AACD;;AACD,mBAAO,KAAKP,SAAL,CAAeO,EAAf,EAAmBZ,IAAnB,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;AA3IS;AAAA;AAAA,iBA4IPgB,kBAAS,CAACjB,IAAD,EAAOC,IAAP,EAAa;AACpB,mBAAO,KAAKS,WAAL,CAAiB,CAAjB,EAAoB,CAAC,CAArB,EAAwBV,IAAxB,EAA8BC,IAA9B,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAtJS;AAAA;AAAA,iBAuJPS,oBAAW,CAACQ,UAAD,EAA0C;AAAA,gBAA7BH,WAA6B,uEAAf,CAAe;AAAA,gBAAZf,IAAY;AAAA,gBAANC,IAAM;AACnD,mBAAO,KAAKK,SAAL,CAAe;AACpBQ,yBAAW,EAAEI,UADO;AAEpBH,yBAFoB,EAEpBA,WAFoB;AAGpBf;AAHoB,aAAf,EAIJC,IAJI,CAAP;AAKD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AArKS;AAAA;AAAA,iBAsKP5B,gBAAO,CAACjD,SAAD,EAAYyB,cAAZ,EAA4BmD,IAA5B,EAAkCC,IAAlC,EAAwC;AAC7C,mBAAO,KAAKkB,QAAL,CAAc,CAAC;AAAE/F,uBAAF,EAAEA,SAAF;AAAayB;AAAb,aAAD,CAAd,EAA+CmD,IAA/C,EAAqDC,IAArD,CAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlLS;AAAA;AAAA,iBAmLPkB,iBAAQ,CAACtD,KAAD,EAAQmC,IAAR,EAAcC,IAAd,EAAoB;AAC1BD,gBAAI,KAAK,IAATA,IAAiBA,IAAI,KAAK,KAAK,CAA/BA,GAAmCA,IAAnCA,GAA2CA,IAAI,GAAG,EAAlDA,CAD0B,CAE1B;;AACA,gBAAIA,IAAI,CAAClC,QAALkC,KAAkB,IAAtB,EAA4B;AAC1BA,kBAAI,CAAClC,QAALkC,GAAgB,KAAhBA;AACD;;AACD,mBAAO,KAAKM,SAAL,CAAe;AACpBC,yBAAW,EAAE,CADO;AAEpBC,yBAAW,EAAE3C,KAFO;AAGpBiD,yBAAW,EAAE,CAHO;AAIpBC,yBAAW,EAAE,CAAC,CAJM;AAKpBf;AALoB,aAAf,EAMJC,IANI,CAAP;AAOD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3MS;AAAA;AAAA,iBA4MPmB,mBAAU,CAAC9E,EAAD,EAAKjB,MAAL,EAAagG,SAAb,EAAwBC,SAAxB,EAAmC;AAC3C,gBAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;;AACA,gBAAIpF,OAAO,CAACmF,MAAD,EAASjF,EAAT,EAAajB,MAAb,CAAX,EAAiC;AAC/B,qBAAOoG,OAAO,CAACC,OAARD,CAAgB;AACrBE,uBAAO,EAAE,KADY;AAErBjG,uBAAO,EAAE6F,MAAM,CAAC7F;AAFK,eAAhB+F,CAAP;AAID;;AACD,gBAAIC,OAAJ;AACA,gBAAME,OAAO,GAAG,IAAIH,OAAJ,CAAaI,WAAD;AAAA,qBAAQH,OAAO,GAAGG,CAAlB;AAAA,aAAZ,CAAhB;AACA,gBAAIC,MAAJ;AACA,gBAAMC,UAAU,GAAG;AACjBC,uBAAS,EAAE,KADM;AAEjBC,yBAAW,EAAGC,SAAdD,WAAcC,WAAD,EAAgB;AAC3B,oBAAIC,IAAJ;AACA,oBAAMC,CAAC,GAAG,IAAIX,OAAJ,CAAaI,WAAD;AAAA,yBAAQM,IAAI,GAAGN,CAAf;AAAA,iBAAZ,CAAV;AACAH,uBAAO,CAAC;AACNC,yBAAO,EAAE,IADH;AAENjG,yBAAO,EAAEwG,UAFH;AAGNG,6BAAW;AAAA,sNAAE;AAAA;AAAA;AAAA;AACXF,gCAAI;AADO;AAEX,mCAAML,MAAN;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAF;;AAAA,oCAAXO,WAAW;AAAA;AAAA;AAAA;AAHL,iBAAD,CAAPX;AAQA,uBAAOU,CAAP;AACD;AAdgB,aAAnB;;AAgBA,gBAAIf,SAAS,KAAK,MAAlB,EAA0B;AACxBS,oBAAM,GAAG,KAAKzD,OAAL,CAAa/B,EAAb,EAAiBjB,MAAjB,EAAyB0G,UAAzB,CAATD;AADF,mBAGK;AACH;AACA,kBAAMQ,cAAc,GAAG,KAAKzE,KAAL,CAAW0E,IAAX,CAAiBxF,WAAD;AAAA,uBAAOX,OAAO,CAACW,CAAD,EAAIT,EAAJ,EAAQjB,MAAR,CAAd;AAAA,eAAhB,CAAvB;;AACA,kBAAIiH,cAAJ,EAAoB;AAClBR,sBAAM,GAAG,KAAKnB,KAAL,CAAW2B,cAAX,EAA2BE,MAAM,CAACC,MAAPD,CAAcA,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkBT,UAAlBS,CAAdA,EAA6C;AAAEnB,2BAAS,EAAE,MAAb;AAAqBqB,kCAAgB,EAAEpB;AAAvC,iBAA7CkB,CAA3B,CAATV;AADF,qBAGK,IAAIT,SAAS,KAAK,SAAlB,EAA6B;AAChCS,sBAAM,GAAG,KAAK/B,IAAL,CAAUzD,EAAV,EAAcjB,MAAd,EAAsBmH,MAAM,CAACC,MAAPD,CAAcA,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkBT,UAAlBS,CAAdA,EAA6C;AAAEE,kCAAgB,EAAEpB;AAApB,iBAA7CkB,CAAtB,CAATV;AADG,qBAGA,IAAIT,SAAS,KAAK,MAAlB,EAA0B;AAC7BS,sBAAM,GAAG,KAAKzD,OAAL,CAAa/B,EAAb,EAAiBjB,MAAjB,EAAyBmH,MAAM,CAACC,MAAPD,CAAcA,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkBT,UAAlBS,CAAdA,EAA6C;AAAEnB,2BAAS,EAAE,MAAb;AAAqBvD,0BAAQ,EAAE,IAA/B;AAAqC4E,kCAAgB,EAAEpB;AAAvD,iBAA7CkB,CAAzB,CAATV;AACD;AACF;;AACD,mBAAOF,OAAP;AACD;AACD;AACF;AACA;AACA;AACA;;AA7PS;AAAA;AAAA,iBA8PDe,mBAAU,GAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACXpB,0BADW,GACFqB,MAAI,CAACpB,aAAL,EADE;;AAAA,yBAEbD,MAFa;AAAA;AAAA;AAAA;;AAAA,sDAGR;AACLjF,wBAAE,EAAEiF,MAAM,CAAC7F,OAAP6F,CAAesB,OADd;AAELxH,4BAAM,EAAEkG,MAAM,CAAClG,MAFV;AAGLK,6BAAO,EAAE6F,MAAM,CAAC7F;AAHX,qBAHQ;;AAAA;AAAA,sDASVS,SATU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUlB;AACD;AACF;AACA;;AA3QS;AAAA;AAAA,iBA4QD2G,kBAAS,GAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sDACTC,MAAI,CAACvB,aAAL,EADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjB;AACD;AACF;AACA;AACA;AACA;;AAnRS;AAAA;AAAA,iBAoRDwB,mBAAU,CAACC,KAAD,EAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sDACfC,MAAI,CAACrF,KAAL,CAAWoF,KAAX,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvB;AACD;AACF;AACA;AACA;AACA;;AA3RS;AAAA;AAAA,iBA4RDE,kBAAS,CAAC9G,IAAD,EAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sDACb+G,MAAI,CAACC,aAAL,CAAmBhH,IAAnB,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErB;AACD;AACF;AACA;AACA;AACA;;AAnSS;AAAA;AAAA,iBAoSDiH,oBAAW,CAACjH,IAAD,EAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sDACfkH,MAAI,CAACC,eAAL,CAAqBnH,IAArB,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvB;AAtSM;AAAA;AAAA,iBAuSPoH,kBAAS,GAAG;AACV,mBAAO,KAAK5F,KAAL,CAAWiC,MAAlB;AACD;AAzSM;AAAA;AAAA,iBA0SP0B,sBAAa,GAAG;AACd,mBAAO,KAAK3D,KAAL,CAAW,KAAKA,KAAL,CAAWiC,MAAX,GAAoB,CAA/B,CAAP;AACD;AA5SM;AAAA;AAAA,iBA6SPuD,sBAAa,GAA8B;AAAA,gBAA7BhH,IAA6B,uEAAtB,KAAKmF,aAAL,EAAsB;AACzC,mBAAO,CAAC,EAAEnF,IAAI,IAAI,KAAKmH,eAAL,CAAqBnH,IAArB,CAAV,CAAR;AACD;AA/SM;AAAA;AAAA,iBAgTPmH,wBAAe,GAA8B;AAAA,gBAA7BnH,IAA6B,uEAAtB,KAAKmF,aAAL,EAAsB;;AAC3C,gBAAI,CAACnF,IAAL,EAAW;AACT,qBAAOF,SAAP;AACD;;AACD,gBAAM0B,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAMoF,KAAK,GAAGpF,KAAK,CAAC6F,OAAN7F,CAAcxB,IAAdwB,CAAd;AACA,mBAAOoF,KAAK,GAAG,CAARA,GAAYpF,KAAK,CAACoF,KAAK,GAAG,CAAT,CAAjBA,GAA+B9G,SAAtC;AACD;AACD;AACF;AACA;AACA;AACA;;AA5TS;AAAA;AAAA,iBA6TDmE,kBAAS,CAACO,EAAD,EAAKZ,IAAL,EAAW;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,0BAEpB0D,MAAI,CAAChG,eAAL,KAAyB,CAACiG,EAAE,GAAG/C,EAAE,CAACb,IAAT,MAAmB,IAAnB,IAA2B4D,EAAE,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,EAAE,CAACC,UAAhF,CAFoB;AAAA;AAAA;AAAA;;AAAA,sDAGf,KAHe;;AAAA;AAKlBjC,2BALkB,GAKR,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAUoC,MAAV,EAAqB;AAC/CjD,wBAAE,CAACa,OAAHb,GAAaa,OAAbb;AACAA,wBAAE,CAACiD,MAAHjD,GAAYiD,MAAZjD;AAFc,sBALQ;AASxBA,sBAAE,CAACZ,IAAHY,GAAUZ,IAAVY;AACA;AACJ;AACA;AACA;AACA;AACA;;AAf4B,0BAgBpBA,EAAE,CAACb,IAAHa,IAAWA,EAAE,CAACb,IAAHa,CAAQmB,SAARnB,KAAsB,KAAjCA,IAA0C8C,MAAI,CAACjG,SAhB3B;AAAA;AAAA;AAAA;;AAiBhBqG,0BAjBgB,GAiBPvF,QAAQ,CAACC,aAATD,CAAuB,YAAvBA,CAjBO;;AAAA,yBAkBlBuF,MAlBkB;AAAA;AAAA;AAAA;;AAAA;AAmBD,2BAASA,MAAM,CAACC,aAAPD,EAAT;;AAnBC;AAmBdC,iCAnBc;;AAAA,0BAoBhBA,aAAa,KAAK,KApBF;AAAA;AAAA;AAAA;;AAAA,sDAqBX,KArBW;;AAAA;AAAA,0BAuBhB,OAAOA,aAAP,KAAyB,QAvBT;AAAA;AAAA;AAAA;;AAwBlBD,0BAAM,CAAChE,IAAPgE,CAAYC,aAAZD,EAA2BlD,EAAE,CAACb,IAAHa,CAAQQ,SAARR,IAAqB,MAAhDkD;AAxBkB,sDAyBX,KAzBW;;AAAA;AA6BxB;AACA,wBAAI,CAAC,CAACE,EAAE,GAAGpD,EAAE,CAACL,WAAT,MAA0B,IAA1B,IAAkCyD,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACnE,MAA/D,MAA2E,CAA/E,EAAkF;AAChFe,wBAAE,CAACL,WAAHK,GAAiB1E,SAAjB0E;AA/BsB,sBAiCxB;;;AACA8C,0BAAI,CAACnG,UAAL,CAAgBuC,IAAhB,CAAqBc,EAArB,EAlCwB,CAmCxB;AACA;;;AACA8C,0BAAI,CAACO,QAAL;;AArCwB,sDAsCjBtC,OAtCiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCzB;AApWM;AAAA;AAAA,iBAqWPuC,gBAAO,CAACC,MAAD,EAASvD,EAAT,EAAa;AAClB,gBAAI,KAAKjD,SAAT,EAAoB;AAClB,mBAAKyG,SAAL,CAAe,8BAAf,EAA+CxD,EAA/C;AACA;AACD;;AACD,gBAAIA,EAAE,CAACZ,IAAP,EAAa;AACXY,gBAAE,CAACZ,IAAHY,CAAQuD,MAAM,CAACE,YAAfzD,EAA6BuD,MAAM,CAACG,kBAApC1D,EAAwDuD,MAAM,CAACI,YAA/D3D,EAA6EuD,MAAM,CAACK,WAApF5D,EAAiGuD,MAAM,CAAC/C,SAAxGR;AACD;;AACDA,cAAE,CAACa,OAAHb,CAAWuD,MAAM,CAACE,YAAlBzD;;AACA,gBAAIA,EAAE,CAACb,IAAHa,CAAQmB,SAARnB,KAAsB,KAAtBA,IAA+B,KAAKnD,SAAxC,EAAmD;AACjD,kBAAMqG,MAAM,GAAGvF,QAAQ,CAACC,aAATD,CAAuB,YAAvBA,CAAf;;AACA,kBAAIuF,MAAJ,EAAY;AACV,oBAAM1C,SAAS,GAAG+C,MAAM,CAAC/C,SAAP+C,KAAqB,MAArBA,GAA8B,MAA9BA,GAAuC,SAAzD;AACAL,sBAAM,CAACW,UAAPX,CAAkB1C,SAAlB0C;AACD;AACF;AACF;AArXM;AAAA;AAAA,iBAsXPY,eAAM,CAACC,YAAD,EAAe/D,EAAf,EAAmB;AACvB,gBAAI,KAAKjD,SAAT,EAAoB;AAClB,mBAAKyG,SAAL,CAAe,8BAAf,EAA+CxD,EAA/C;AACA;AACD;;AACD,iBAAKrD,UAAL,CAAgBsC,MAAhB,GAAyB,CAAzB;AACA,iBAAKuE,SAAL,CAAeO,YAAf,EAA6B/D,EAA7B;AACD;AA7XM;AAAA;AAAA,iBA8XPwD,kBAAS,CAACO,YAAD,EAAe/D,EAAf,EAAmB;AAC1B,gBAAIA,EAAE,CAACZ,IAAP,EAAa;AACXY,gBAAE,CAACZ,IAAHY,CAAQ,KAARA,EAAe,KAAfA,EAAsB+D,YAAtB/D;AACD;;AACD,gBAAIA,EAAE,CAACiD,MAAHjD,IAAa,CAAC,KAAKjD,SAAvB,EAAkC;AAChCiD,gBAAE,CAACiD,MAAHjD,CAAU+D,YAAV/D;AADF,mBAGK;AACHA,gBAAE,CAACa,OAAHb,CAAW,KAAXA;AACD;AACF;AACD;AACF;AACA;AACA;AACA;;AA7YS;AAAA;AAAA,iBA8YPqD,iBAAQ,GAAG;AACT;AACA;AACA,gBAAI,KAAKvG,eAAT,EAA0B;AACxB,qBAAO,KAAP;AAJO,cAMT;;;AACA,gBAAMkD,EAAE,GAAG,KAAKrD,UAAL,CAAgBqH,KAAhB,EAAX;;AACA,gBAAI,CAAChE,EAAL,EAAS;AACP,qBAAO,KAAP;AACD;;AACD,iBAAKiE,aAAL,CAAmBjE,EAAnB;AACA,mBAAO,IAAP;AACD;AACD;;AA5ZO;AAAA;AAAA,iBA6ZDiE,sBAAa,CAACjE,EAAD,EAAK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEpB;AACAkE,0BAAI,CAACzH,gBAAL,CAAsByB,IAAtB;;AACAgG,0BAAI,CAACpH,eAAL,GAAuB,IAAvB;;AACAoH,0BAAI,CAACC,SAAL,CAAenE,EAAf;;AACM4D,+BANc,GAMAM,MAAI,CAACvD,aAAL,EANA;AAOdgD,gCAPc,GAOCO,MAAI,CAACE,eAAL,CAAqBpE,EAArB,EAAyB4D,WAAzB,CAPD;;AAAA,0BAQhB,CAACA,WAAD,IAAgB,CAACD,YARD;AAAA;AAAA;AAAA;;AAAA,0BASZ,IAAIU,KAAJ,CAAU,qCAAV,CATY;;AAAA;AAAA,0BAWhBV,YAAY,IAAIA,YAAY,CAAClJ,KAAbkJ,KAAuBzJ,cAXvB;AAAA;AAAA;AAAA;;AAAA;AAYlB,2BAAMyJ,YAAY,CAACjJ,IAAbiJ,CAAkBO,MAAI,CAACrG,EAAvB8F,CAAN;;AAZkB;AAcpBO,0BAAI,CAACI,YAAL,CAAkBX,YAAlB,EAAgCC,WAAhC,EAA6C5D,EAA7C,EAdoB,CAepB;;;AACM0D,sCAhBc,GAgBO,CAAC1D,EAAE,CAACuE,0BAAHvE,IAAiCA,EAAE,CAACwE,yBAArC,KAAmEb,YAAY,KAAKC,WAhB3F;;AAiBpB,wBAAIF,kBAAkB,IAAI1D,EAAE,CAACb,IAAzBuE,IAAiCE,WAArC,EAAkD;AAC1Ca,qCAD0C,GACxBzE,EAAE,CAACb,IAAHa,CAAQQ,SAARR,KAAsB,MADE;AAEhD;AACR;AACA;AACA;;AACQ,0BAAIyE,eAAJ,EAAqB;AACnBzE,0BAAE,CAACb,IAAHa,CAAQ6B,gBAAR7B,GAA2BA,EAAE,CAACb,IAAHa,CAAQ6B,gBAAR7B,KAA6B2D,YAAY,KAAK,IAAjBA,IAAyBA,YAAY,KAAK,KAAK,CAA/CA,GAAmD,KAAK,CAAxDA,GAA4DA,YAAY,CAAC9B,gBAAtG7B,CAA3BA;AACD;;AACD4D,iCAAW,CAAC/B,gBAAZ+B,GAA+B5D,EAAE,CAACb,IAAHa,CAAQ6B,gBAAvC+B;AACD;;AA3BmB,yBA6BhBF,kBA7BgB;AAAA;AAAA;AAAA;;AAAA;AA8BZ,2BAASQ,MAAI,CAACQ,UAAL,CAAgBf,YAAhB,EAA8BC,WAA9B,EAA2C5D,EAA3C,CAAT;;AA9BY;AA8BlBuD,0BA9BkB;AAAA;AAAA;;AAAA;AAiClB;AACA;AACA;AACA;AACAA,0BAAM,GAAG;AACPE,kCAAY,EAAE,IADP;AAEPC,wCAAkB,EAAE;AAFb,qBAATH;;AArCkB;AA0CpBW,0BAAI,CAACZ,OAAL,CAAaC,MAAb,EAAqBvD,EAArB;;AACAkE,0BAAI,CAACxH,eAAL,CAAqBwB,IAArB;;AA3CoB;AAAA;;AAAA;AAAA;AAAA;;AA8CpBgG,0BAAI,CAACJ,MAAL,gBAA0B9D,EAA1B;;AA9CoB;AAgDtBkE,0BAAI,CAACpH,eAAL,GAAuB,KAAvB;;AACAoH,0BAAI,CAACb,QAAL;;AAjDsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDvB;AA/cM;AAAA;AAAA,iBAgdPc,kBAAS,CAACnE,EAAD,EAAK;AACZ,gBAAI+C,EAAJ,EAAQK,EAAR;;AACA,gBAAIuB,EAAJ;;AACA,gBAAMC,WAAW,GAAG,KAAK5H,KAAL,CAAWiC,MAA/B;AACA,aAAC8D,EAAE,GAAG/C,EAAE,CAACb,IAAT,MAAmB,IAAnB,IAA2B4D,EAAE,KAAK,KAAK,CAAvC,GAA2CA,EAA3C,GAAiD/C,EAAE,CAACb,IAAHa,GAAU,EAA3D;AACA,aAACoD,EAAE,GAAG,CAACuB,EAAE,GAAG3E,EAAE,CAACb,IAAT,EAAepE,QAArB,MAAmC,IAAnC,IAA2CqI,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAiEuB,EAAE,CAAC5J,QAAH4J,GAAc,KAAK5J,QAApF;;AACA,gBAAIiF,EAAE,CAACG,UAAHH,KAAkB1E,SAAtB,EAAiC;AAC/BL,uEAAO+E,EAAE,CAACC,WAAHD,KAAmB1E,SAA1BL,EAAqC,8BAArCA;AACAA,uEAAO+E,EAAE,CAACE,WAAHF,KAAmB1E,SAA1BL,EAAqC,8BAArCA;AACA,kBAAMmH,KAAK,GAAG,KAAKpF,KAAL,CAAW6F,OAAX,CAAmB7C,EAAE,CAACG,UAAtB,CAAd;;AACA,kBAAIiC,KAAK,GAAG,CAAZ,EAAe;AACb,sBAAM,IAAIiC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACDrE,gBAAE,CAACC,WAAHD,IAAkBoC,KAAlBpC;AACD;;AACD,gBAAIA,EAAE,CAACC,WAAHD,KAAmB1E,SAAvB,EAAkC;AAChC,kBAAI0E,EAAE,CAACC,WAAHD,GAAiB,CAArB,EAAwB;AACtBA,kBAAE,CAACC,WAAHD,GAAiB4E,WAAW,GAAG,CAA/B5E;AACD;;AACD,kBAAIA,EAAE,CAACE,WAAHF,GAAiB,CAArB,EAAwB;AACtBA,kBAAE,CAACE,WAAHF,GAAiB4E,WAAW,GAAG5E,EAAE,CAACC,WAAlCD;AACD;;AACDA,gBAAE,CAACwE,yBAAHxE,GAA+BA,EAAE,CAACE,WAAHF,GAAiB,CAAjBA,IAAsBA,EAAE,CAACC,WAAHD,GAAiBA,EAAE,CAACE,WAApBF,KAAoC4E,WAAzF5E;AACD;;AACD,gBAAIA,EAAE,CAACL,WAAP,EAAoB;AAClB;AACA;AACA,kBAAIK,EAAE,CAACN,WAAHM,GAAiB,CAAjBA,IAAsBA,EAAE,CAACN,WAAHM,GAAiB4E,WAA3C,EAAwD;AACtD5E,kBAAE,CAACN,WAAHM,GAAiB4E,WAAjB5E;AACD;;AACDA,gBAAE,CAACuE,0BAAHvE,GAAgCA,EAAE,CAACN,WAAHM,KAAmB4E,WAAnD5E;AACD;;AACD,gBAAML,WAAW,GAAGK,EAAE,CAACL,WAAvB;;AACA,gBAAI,CAACA,WAAL,EAAkB;AAChB;AACD;;AACD1E,qEAAO0E,WAAW,CAACV,MAAZU,GAAqB,CAA5B1E,EAA+B,wBAA/BA;AACA,gBAAM4J,eAAe,GAAGhJ,cAAc,CAAC8D,WAAD,CAAtC;;AACA,gBAAIkF,eAAe,CAAC5F,MAAhB4F,KAA2B,CAA/B,EAAkC;AAChC,oBAAM,IAAIR,KAAJ,CAAU,yBAAV,CAAN;AAvCU,cAyCZ;;;AAzCY,wDA0COQ,eA1CP;AAAA;;AAAA;AA0CZ,qEAAoC;AAAA,oBAAzBrJ,IAAyB;AAClCA,oBAAI,CAACT,QAALS,GAAgBwE,EAAE,CAACb,IAAHa,CAAQjF,QAAxBS;AACA,oBAAMH,GAAG,GAAGG,IAAI,CAACH,GAAjB;;AACA,oBAAIA,GAAG,IAAIA,GAAG,KAAK,IAAnB,EAAyB;AACvB,wBAAM,IAAIgJ,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,oBAAI7I,IAAI,CAACf,KAALe,KAAepB,oBAAnB,EAAyC;AACvC,wBAAM,IAAIiK,KAAJ,CAAU,qCAAV,CAAN;AACD;AACF;AAnDW;AAAA;AAAA;AAAA;AAAA;;AAoDZrE,cAAE,CAACL,WAAHK,GAAiB6E,eAAjB7E;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AA7gBS;AAAA;AAAA,iBA8gBPoE,wBAAe,CAACpE,EAAD,EAAK4D,WAAL,EAAkB;AAC/B;AACA,gBAAMjE,WAAW,GAAGK,EAAE,CAACL,WAAvB;;AACA,gBAAIA,WAAW,KAAKrE,SAApB,EAA+B;AAC7B,qBAAOqE,WAAW,CAACA,WAAW,CAACV,MAAZU,GAAqB,CAAtB,CAAlB;AAJ6B,cAM/B;;;AACA,gBAAMM,WAAW,GAAGD,EAAE,CAACC,WAAvB;;AACA,gBAAIA,WAAW,KAAK3E,SAApB,EAA+B;AAC7B,kBAAM0B,KAAK,GAAG,KAAKA,KAAnB;AACA,kBAAM8H,SAAS,GAAG7E,WAAW,GAAGD,EAAE,CAACE,WAAnC;;AACA,mBAAK,IAAI6E,CAAC,GAAG/H,KAAK,CAACiC,MAANjC,GAAe,CAA5B,EAA+B+H,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,oBAAMvJ,IAAI,GAAGwB,KAAK,CAAC+H,CAAD,CAAlB;;AACA,oBAAI,CAACA,CAAC,GAAG9E,WAAJ8E,IAAmBA,CAAC,IAAID,SAAzB,KAAuCtJ,IAAI,KAAKoI,WAApD,EAAiE;AAC/D,yBAAOpI,IAAP;AACD;AACF;AACF;;AACD,mBAAOF,SAAP;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AAxiBS;AAAA;AAAA,iBAyiBPgJ,qBAAY,CAACX,YAAD,EAAeC,WAAf,EAA4B5D,EAA5B,EAAgC;AAC1C,gBAAI+C,EAAJ,EAAQK,EAAR,EAAYuB,EAAZ;;AACA1J,qEAAO2I,WAAW,IAAID,YAAtB1I,EAAoC,4CAApCA;AACAA,qEAAO+E,EAAE,CAACa,OAAV5F,EAAmB,uBAAnBA;AACAA,qEAAO+E,EAAE,CAACiD,MAAVhI,EAAkB,sBAAlBA,EAJ0C,CAK1C;;AACA,gBAAMkE,IAAI,GAAGa,EAAE,CAACb,IAAhB;AACA,gBAAQQ,WAAR,GAAkDK,EAAlD,CAAQL,WAAR;AAAA,gBAAqBM,WAArB,GAAkDD,EAAlD,CAAqBC,WAArB;AAAA,gBAAkCC,WAAlC,GAAkDF,EAAlD,CAAkCE,WAAlC;AACA;;AACA,gBAAI8E,YAAJ,CAT0C,CAU1C;;AACA,gBAAI/E,WAAW,KAAK3E,SAAhB2E,IAA6BC,WAAW,KAAK5E,SAAjD,EAA4D;AAC1DL,uEAAOgF,WAAW,IAAI,CAAtBhF,EAAyB,iCAAzBA;AACAA,uEAAOiF,WAAW,IAAI,CAAtBjF,EAAyB,iCAAzBA;AACA+J,0BAAY,GAAG,EAAfA;;AACA,mBAAK,IAAID,CAAC,GAAG9E,WAAb,EAA0B8E,CAAC,GAAG9E,WAAW,GAAGC,WAA5C,EAAyD6E,CAAC,EAA1D,EAA8D;AAC5D,oBAAMvJ,IAAI,GAAG,KAAKwB,KAAL,CAAW+H,CAAX,CAAb;;AACA,oBAAIvJ,IAAI,KAAKF,SAATE,IAAsBA,IAAI,KAAKmI,YAA/BnI,IAA+CA,IAAI,KAAKoI,WAA5D,EAAyE;AACvEoB,8BAAY,CAAC9F,IAAb8F,CAAkBxJ,IAAlBwJ;AACD;AARuD,gBAU1D;;;AACA,eAACjC,EAAE,GAAG5D,IAAI,CAACqB,SAAX,MAA0B,IAA1B,IAAkCuC,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAwD5D,IAAI,CAACqB,SAALrB,GAAiB,MAAzE;AACD;;AACD,gBAAM8F,aAAa,GAAG,KAAKjI,KAAL,CAAWiC,MAAX,IAAqB,CAACmE,EAAE,GAAGzD,WAAW,KAAK,IAAhBA,IAAwBA,WAAW,KAAK,KAAK,CAA7CA,GAAiD,KAAK,CAAtDA,GAA0DA,WAAW,CAACV,MAA5E,MAAwF,IAAxF,IAAgGmE,EAAE,KAAK,KAAK,CAA5G,GAAgHA,EAAhH,GAAqH,CAA1I,KAAgJlD,WAAW,KAAK,IAAhBA,IAAwBA,WAAW,KAAK,KAAK,CAA7CA,GAAiDA,WAAjDA,GAA+D,CAA/M,CAAtB;AACAjF,qEAAOgK,aAAa,IAAI,CAAxBhK,EAA2B,mCAA3BA;;AACA,gBAAIgK,aAAa,KAAK,CAAtB,EAAyB;AACvBC,qBAAO,CAACC,IAARD,yGAAqH,IAArHA,EAA2H,KAAKrH,EAAhIqH;AACA,oBAAM,IAAIb,KAAJ,CAAU,+CAAV,CAAN;AA5BwC,cA8B1C;AACA;;;AACA,gBAAI1E,WAAJ,EAAiB;AACf;AACA,kBAAIL,WAAW,GAAGU,EAAE,CAACN,WAArB;;AAFe,0DAGIC,WAHJ;AAAA;;AAAA;AAGf,uEAAgC;AAAA,sBAArBnE,KAAqB;AAC9B,uBAAK4J,YAAL,CAAkB5J,KAAlB,EAAwB8D,WAAxB;AACAA,6BAAW;AACZ;AANc;AAAA;AAAA;AAAA;AAAA;;AAOf,kBAAIU,EAAE,CAACuE,0BAAP,EAAmC;AACjC;AACA,iBAACI,EAAE,GAAGxF,IAAI,CAACqB,SAAX,MAA0B,IAA1B,IAAkCmE,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAwDxF,IAAI,CAACqB,SAALrB,GAAiB,SAAzE;AACD;AA1CuC,cA4C1C;AACA;AACA;AACA;AACA;;;AACA,gBAAI6F,YAAY,IAAIA,YAAY,CAAC/F,MAAb+F,GAAsB,CAA1C,EAA6C;AAAA,0DACxBA,YADwB;AAAA;;AAAA;AAC3C,uEAAiC;AAAA,sBAAtBxJ,MAAsB;AAC/BsD,yEAAUtD,MAAI,CAACX,OAAfiE,EAAwBuG,iDAAxBvG;AACAA,yEAAUtD,MAAI,CAACX,OAAfiE,EAAwBwG,iDAAxBxG;AACAA,yEAAUtD,MAAI,CAACX,OAAfiE,EAAwBC,iDAAxBD;AAJyC,kBAM3C;;AAN2C;AAAA;AAAA;AAAA;AAAA;;AAAA,0DAOxBkG,YAPwB;AAAA;;AAAA;AAO3C,uEAAiC;AAAA,sBAAtBxJ,MAAsB;AAC/B,uBAAK+J,WAAL,CAAiB/J,MAAjB;AACD;AAT0C;AAAA;AAAA;AAAA;AAAA;AAU5C;AACF;AArmBM;AAAA;AAAA,iBAsmBDkJ,mBAAU,CAACf,YAAD,EAAeC,WAAf,EAA4B5D,EAA5B,EAAgC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAC9C;AACA;AACMb,wBAHwC,GAGjCa,EAAE,CAACb,IAH8B;AAIxCqG,oCAJwC,GAIrBrG,IAAI,CAACsG,iBAALtG,GAA0BuG,aAAD;AAAA,6BAAUC,OAAI,CAACC,KAAL,GAAaF,GAAvB;AAAA,qBAAzBvG,GAAuD7D,SAJlC;AAKxCyC,wBALwC,GAKjCC,8DAAW2H,OAAX3H,CALiC;AAMxCqD,8BANwC,GAM3BsC,YAAY,CAAC9I,OANc;AAOxCgL,6BAPwC,GAO5BjC,WAAW,IAAIA,WAAW,CAAC/I,OAPC;AAQxCiL,iCARwC,GAQxBnE,MAAM,CAACC,MAAPD,CAAcA,MAAM,CAACC,MAAPD,CAAc;AAAE5D,0BAAF,EAAEA,IAAF;AAAQgI,gCAAU,EAAEJ,OAAI,CAACnD,aAAL,CAAmBmB,YAAnB,CAApB;AAAsDqC,4BAAM,EAAEL,OAAI,CAAC9H,EAAnE;AAAuE2H,sCAAvE,EAAuEA,gBAAvE;AAAyFvI,8BAAQ,EAAE0I,OAAI,CAAC1I,QAAL,IAAiBgB,oEAAkB,UAAlBA,EAA8B,IAA9BA,CAApH;AAAyJoD,gCAAzJ,EAAyJA,UAAzJ;AAChDwE;AADgD,qBAAdlE,EACrBxC,IADqBwC,CAAdA,EACA;AAAEE,sCAAgB,EAAE1C,IAAI,CAAC0C,gBAAL1C,IAAyBwG,OAAI,CAAClF,SAA9BtB,IAA2ClB,6DAAW,cAAXA;AAA/D,qBADA0D,CARwB;AAAA;AAUxC,2BAAyB+C,uDAAWoB,aAAXpB,CAAzB;;AAVwC;AAAA;AAUtCjB,gCAVsC,UAUtCA,YAVsC;AAAA,uDAWvCkC,OAAI,CAACM,gBAAL,CAAsBxC,YAAtB,EAAoCE,YAApC,EAAkDC,WAAlD,EAA+DzE,IAA/D,CAXuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY/C;AAlnBM;AAAA;AAAA,iBAmnBP8G,yBAAgB,CAACxC,YAAD,EAAeE,YAAf,EAA6BC,WAA7B,EAA0CzE,IAA1C,EAAgD;AAC9D;AACJ;AACA;AACA;AACI,gBAAM+G,UAAU,GAAGzC,YAAY,GAAGE,YAAH,GAAkBC,WAAjD;;AACA,gBAAIsC,UAAJ,EAAgB;AACd,mBAAKC,oBAAL,CAA0BD,UAA1B;AACD;;AACD,mBAAO;AACLzC,0BADK,EACLA,YADK;AAELC,gCAAkB,EAAE,IAFf;AAGLC,0BAHK,EAGLA,YAHK;AAILC,yBAJK,EAILA,WAJK;AAKLpD,uBAAS,EAAErB,IAAI,CAACqB;AALX,aAAP;AAOD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AA3oBS;AAAA;AAAA,iBA4oBP4E,qBAAY,CAAC5J,IAAD,EAAO4G,KAAP,EAAc;AACxB,gBAAMpF,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAMoJ,aAAa,GAAGpJ,KAAK,CAAC6F,OAAN7F,CAAcxB,IAAdwB,CAAtB;;AACA,gBAAIoJ,aAAa,GAAG,CAAC,CAArB,EAAwB;AACtBnL,uEAAOO,IAAI,CAACH,GAALG,KAAa,IAApBP,EAA0B,6BAA1BA,EADsB,CAEtB;;AACA+B,mBAAK,CAACqJ,MAANrJ,CAAaoJ,aAAbpJ,EAA4B,CAA5BA,EAHsB,CAItB;;AACAA,mBAAK,CAACqJ,MAANrJ,CAAaoF,KAAbpF,EAAoB,CAApBA,EAAuBxB,IAAvBwB;AALF,mBAOK;AACH/B,uEAAO,CAACO,IAAI,CAACH,GAAbJ,EAAkB,aAAlBA,EADG,CAEH;AACA;;AACAO,kBAAI,CAACH,GAALG,GAAW,IAAXA;AACAwB,mBAAK,CAACqJ,MAANrJ,CAAaoF,KAAbpF,EAAoB,CAApBA,EAAuBxB,IAAvBwB;AACD;AACF;AACD;AACF;AACA;AACA;AACA;;AAlqBS;AAAA;AAAA,iBAmqBPmD,mBAAU,CAAC3E,IAAD,EAAO;AACfP,qEAAOO,IAAI,CAACf,KAALe,KAAerB,mBAAfqB,IAAsCA,IAAI,CAACf,KAALe,KAAepB,oBAA5Da,EAAkF,0CAAlFA;AACA,gBAAM+B,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAMoF,KAAK,GAAGpF,KAAK,CAAC6F,OAAN7F,CAAcxB,IAAdwB,CAAd;AACA/B,qEAAOmH,KAAK,GAAG,CAAC,CAAhBnH,EAAmB,gCAAnBA;;AACA,gBAAImH,KAAK,IAAI,CAAb,EAAgB;AACdpF,mBAAK,CAACqJ,MAANrJ,CAAaoF,KAAbpF,EAAoB,CAApBA;AACD;AACF;AA3qBM;AAAA;AAAA,iBA4qBPuI,oBAAW,CAAC/J,IAAD,EAAO;AAChBA,gBAAI,CAACR,QAALQ;;AACA,iBAAK2E,UAAL,CAAgB3E,IAAhB;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AAtrBS;AAAA;AAAA,iBAurBP2K,6BAAoB,CAACD,UAAD,EAAa;AAC/B;AACA;AACA;AACA,gBAAI,KAAKnJ,SAAT,EAAoB;AAClB;AACD;;AACD,gBAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,gBAAMsJ,eAAe,GAAGtJ,KAAK,CAAC6F,OAAN7F,CAAckJ,UAAdlJ,CAAxB;;AACA,iBAAK,IAAI+H,CAAC,GAAG/H,KAAK,CAACiC,MAANjC,GAAe,CAA5B,EAA+B+H,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,kBAAMvJ,IAAI,GAAGwB,KAAK,CAAC+H,CAAD,CAAlB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,kBAAMlK,OAAO,GAAGW,IAAI,CAACX,OAArB;;AACA,kBAAIA,OAAJ,EAAa;AACX,oBAAIkK,CAAC,GAAGuB,eAAR,EAAyB;AACvB;AACA;AACAxH,yEAAUjE,OAAViE,EAAmBC,iDAAnBD;AACA,uBAAKyG,WAAL,CAAiB/J,IAAjB;AAJF,uBAMK,IAAIuJ,CAAC,GAAGuB,eAAR,EAAyB;AAC5B;AACA;AACAC,yEAAc1L,OAAd0L,EAAuB,IAAvBA;AACD;AACF;AACF;AACF;AAztBM;AAAA;AAAA,iBA0tBPhI,iBAAQ,GAAG;AACT,mBAAQ,CAAC,CAAC,KAAKlB,YAAP,IACN,CAAC,KAAKP,eADA,IAEN,KAAKH,UAAL,CAAgBsC,MAAhB,KAA2B,CAFrB,IAGN,KAAKrC,gBAHC,IAIN,KAAK4F,aAAL,EAJF;AAKD;AAhuBM;AAAA;AAAA,iBAiuBP/D,gBAAO,GAAG;AACR,iBAAKmB,GAAL,CAAS;AAAEY,uBAAS,EAAE,MAAb;AAAqBiF,+BAAiB,EAAE;AAAxC,aAAT;AACD;AAnuBM;AAAA;AAAA,iBAouBP/G,eAAM,CAAC8H,SAAD,EAAY;AAChB,gBAAI,KAAKZ,KAAT,EAAgB;AACd,mBAAKA,KAAL,CAAWa,YAAX,CAAwBD,SAAxB;AACD;AACF;AAxuBM;AAAA;AAAA,iBAyuBP7H,cAAK,CAAC+H,cAAD,EAAiBF,SAAjB,EAA4BG,GAA5B,EAAiC;AAAA;;AACpC,gBAAI,KAAKf,KAAT,EAAgB;AACd,mBAAKhJ,gBAAL,GAAwB,KAAxB;AACA,mBAAKgJ,KAAL,CAAWgB,QAAX,CAAoB,YAAM;AACxB,wBAAKhK,gBAAL,GAAwB,IAAxB;AADF,iBAEG;AAAEiK,+BAAe,EAAE;AAAnB,eAFH,EAFc,CAKd;;AACA,kBAAIC,YAAY,GAAGJ,cAAc,GAAG,CAAC,KAAJ,GAAY,KAA7C;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,kBAAI,CAACA,cAAL,EAAqB;AACnB,qBAAKd,KAAL,CAAWmB,MAAX,CAAkB,gCAAlB;AACAD,4BAAY,IAAIE,8DAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxBA,EAAgC,CAAC,CAAD,EAAI,CAAJ,CAAhCA,EAAwC,CAAC,IAAD,EAAO,IAAP,CAAxCA,EAAsD,CAAC,CAAD,EAAI,CAAJ,CAAtDA,EAA8DR,SAA9DQ,EAAyE,CAAzEA,CAAhBF;AAFF,qBAIK;AACHA,4BAAY,IAAIE,8DAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxBA,EAAgC,CAAC,IAAD,EAAO,IAAP,CAAhCA,EAA8C,CAAC,CAAD,EAAI,CAAJ,CAA9CA,EAAsD,CAAC,CAAD,EAAI,CAAJ,CAAtDA,EAA8DR,SAA9DQ,EAAyE,CAAzEA,CAAhBF;AACD;;AACD,mBAAKlB,KAAL,CAAWqB,WAAX,CAAuBP,cAAc,GAAG,CAAH,GAAO,CAA5C,EAA+CI,YAA/C,EAA6DH,GAA7D;AACD;AACF;AAlwBM;AAAA;AAAA,iBAmwBPO,eAAM,GAAG;AACP,mBAAOC,uDAAE,MAAFA,EAAU,IAAVA,CAAP;AACD;AArwBM;AAAA;AAAA,eAswBD,eAAG;AAAE,mBAAOC,uDAAW,IAAXA,CAAP;AAA0B;AAtwB9B;AAAA;AAAA,eAuwBY,eAAG;AAAE,mBAAO;AAC7B,8BAAgB,CAAC,qBAAD,CADa;AAE7B,sBAAQ,CAAC,aAAD;AAFqB,aAAP;AAGpB;AA1wBG;AAAA,SAAT;;AA4wBAhL,SAAG,CAACiL,KAAJjL,GAAYD,MAAZC;;AAEA,UAAMkL,OAAO,GAAG,SAAVA,OAAU,CAACzJ,EAAD,EAAK0J,eAAL,EAAsBhN,SAAtB,EAAiCyB,cAAjC,EAAiDwL,eAAjD,EAAqE;AACnF,YAAMnM,GAAG,GAAGwC,EAAE,CAACC,OAAHD,CAAW,SAAXA,CAAZ;;AACA,YAAIxC,GAAJ,EAAS;AACP,cAAIkM,eAAe,KAAK,SAAxB,EAAmC;AACjC,gBAAIhN,SAAS,KAAKe,SAAlB,EAA6B;AAC3B,qBAAOD,GAAG,CAAC6D,IAAJ7D,CAASd,SAATc,EAAoBW,cAApBX,EAAoC;AAAE2H,0BAAU,EAAE,IAAd;AAAoBnB,gCAAgB,EAAE2F;AAAtC,eAApCnM,CAAP;AACD;AAHH,iBAKK,IAAIkM,eAAe,KAAK,MAAxB,EAAgC;AACnC,gBAAIhN,SAAS,KAAKe,SAAlB,EAA6B;AAC3B,qBAAOD,GAAG,CAACmC,OAAJnC,CAAYd,SAAZc,EAAuBW,cAAvBX,EAAuC;AAAE2H,0BAAU,EAAE,IAAd;AAAoBnB,gCAAgB,EAAE2F;AAAtC,eAAvCnM,CAAP;AACD;AAHE,iBAKA,IAAIkM,eAAe,KAAK,MAAxB,EAAgC;AACnC,mBAAOlM,GAAG,CAACuE,GAAJvE,CAAQ;AAAE2H,wBAAU,EAAE,IAAd;AAAoBnB,8BAAgB,EAAE2F;AAAtC,aAARnM,CAAP;AACD;AACF;;AACD,eAAOuF,OAAO,CAACC,OAARD,CAAgB,KAAhBA,CAAP;AAjBF;;AAoBA,UAAM6G,OAAO;AACXnN,yBAAY+B,OAAZ/B,EAAqB;AAAA;;AAAA;;AACnBgC,iEAAiB,IAAjBA,EAAuBD,OAAvBC;AACA;AACJ;AACA;;AACI,eAAKiL,eAAL,GAAuB,SAAvB;;AACA,eAAKG,OAAL,GAAe,YAAM;AACnB,mBAAOJ,OAAO,CAAC,QAAKzJ,EAAN,EAAU,QAAK0J,eAAf,EAAgC,QAAKhN,SAArC,EAAgD,QAAKyB,cAArD,EAAqE,QAAKwL,eAA1E,CAAd;AADF;AAGD;;AAVU;AAAA;AAAA,iBAWXN,eAAM,GAAG;AACP,mBAAOC,uDAAEQ,iDAAFR,EAAQ;AAAEO,qBAAO,EAAE,KAAKA;AAAhB,aAARP,CAAP;AACD;AAbU;AAAA;AAAA,eAcL,eAAG;AAAE,mBAAOC,uDAAW,IAAXA,CAAP;AAA0B;AAd1B;AAAA,SAAb;;;;","names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","_this","element","attachComponent","delegate","_destroy","assert","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","shallowEqualStringMap","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","registerInstance","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getIonMode","config","emit","componentDidLoad","_this2","__webpack_require__","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","connectedCallback","disconnectedCallback","lifecycle","LIFECYCLE_WILL_UNLOAD","destroy","length","push","opts","done","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","pop","removeIndex","popTo","indexOrViewCtrl","ti","removeStart","removeCount","removeView","popToRoot","startIndex","setPages","setRouteId","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","Object","assign","animationBuilder","getRouteId","_this3","tagName","getActive","_this4","getByIndex","index","_this5","canGoBack","_this6","canGoBackSync","getPrevious","_this7","getPreviousSync","getLength","indexOf","_this8","_a","skipIfBusy","reject","router","canTransition","_b","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","_this9","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","_c","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalNumViews","console","warn","insertViewAt","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyView","progressCallback","progressAnimation","ani","_this10","sbAni","leavingEl","animationOpts","showGoBack","baseEl","transitionFinish","activeView","unmountInactiveViews","existingIndex","splice","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","getTimeGivenProgression","progressEnd","render","h","getElement","style","navLink","routerDirection","routerAnimation","NavLink","onClick","Host"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-8e692445.js';\nimport { b as getIonMode, c as config } from './ionic-global-c74e4951.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-e78d1307.js';\nimport { n as assert, s as shallowEqualStringMap } from './helpers-3b390e48.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-27c7e5c4.js';\nimport { a as attachComponent } from './framework-delegate-c3305a28.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\n// TODO(FW-2832): types\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  return shallowEqualStringMap(view.params, params);\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages\n    .map((page) => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  })\n    .filter((v) => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-e35bd7d6.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  connectedCallback() {\n    this.destroyed = false;\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    // Release swipe back gesture and transition.\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.transInstr.length = 0;\n    this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.insert(-1, component, componentProps, opts, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts,\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.removeIndex(-1, 1, opts, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const ti = {\n      removeStart: -1,\n      removeCount: -1,\n      opts,\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      ti.removeView = indexOrViewCtrl;\n      ti.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      ti.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(ti, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.removeIndex(1, -1, opts, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts,\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    opts !== null && opts !== void 0 ? opts : (opts = {});\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts,\n    }, done);\n  }\n  /**\n   * Called by the router to update the view.\n   *\n   * @param id The component tag.\n   * @param params The component params.\n   * @param direction A direction hint.\n   * @param animation an AnimationBuilder.\n   *\n   * @return the status.\n   * @internal\n   */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element,\n      });\n    }\n    let resolve;\n    const promise = new Promise((r) => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: (enteringEl) => {\n        let mark;\n        const p = new Promise((r) => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          },\n        });\n        return p;\n      },\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      // Look for a view matching the target in the view stack.\n      const viewController = this.views.find((v) => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /**\n   * Called by <ion-router> to retrieve the current component.\n   *\n   * @internal\n   */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    if (active) {\n      return {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element,\n      };\n    }\n    return undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  async getActive() {\n    return this.getActiveSync();\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  async getByIndex(index) {\n    return this.views[index];\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  async canGoBack(view) {\n    return this.canGoBackSync(view);\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  async getPrevious(view) {\n    return this.getPreviousSync(view);\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  /**\n   * Adds a navigation stack change to the queue and schedules it to run.\n   *\n   * @returns Whether the transition succeeds.\n   */\n  async queueTrns(ti, done) {\n    var _a, _b;\n    if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\n      return false;\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return false;\n        }\n        if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return false;\n        }\n      }\n    }\n    // Normalize empty\n    if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  /**\n   * Consumes the next transition in the queue.\n   *\n   * @returns whether the transition is executed.\n   */\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now, executes the next instructions.\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  /** Executes all the transition instruction from the queue. */\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      let result;\n      if (requiresTransition) {\n        result = await this.transition(enteringView, leavingView, ti);\n      }\n      else {\n        // transition is not required, so we are already done!\n        // they're inserting/removing the views somewhere in the middle or\n        // beginning, so visually nothing needs to animate/transition\n        // resolve immediately because there's no animation that's happening\n        result = {\n          hasCompleted: true,\n          requiresTransition: false,\n        };\n      }\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    var _a, _b;\n    var _c;\n    const viewsLength = this.views.length;\n    (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\n    (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  /**\n   * Returns the view that will be entered considering the transition instructions.\n   *\n   * @param ti The instructions.\n   * @param leavingView The view being left or undefined if none.\n   *\n   * @returns The view that will be entered, undefined if none.\n   */\n  getEnteringView(ti, leavingView) {\n    // The last inserted view will be entered when view are inserted.\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      return insertViews[insertViews.length - 1];\n    }\n    // When views are deleted, we will enter the last view that is not removed and not the view being left.\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  /**\n   * Adds and Removes the views from the navigation stack.\n   *\n   * @param enteringView The view being entered.\n   * @param leavingView The view being left.\n   * @param ti The instructions.\n   */\n  postViewInit(enteringView, leavingView, ti) {\n    var _a, _b, _c;\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    // Compute the views to remove.\n    const opts = ti.opts;\n    const { insertViews, removeStart, removeCount } = ti;\n    /** Records the view to destroy */\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = removeStart; i < removeStart + removeCount; i++) {\n        const view = this.views[i];\n        if (view !== undefined && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\n    }\n    const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\n    assert(finalNumViews >= 0, 'final balance can not be negative');\n    if (finalNumViews === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // Insert the new views in the stack.\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation ? (ani) => (this.sbAni = ani) : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    /**\n     * If the transition did not complete, the leavingView will still be the active\n     * view on the stack. Otherwise unmount all the views after the enteringView.\n     */\n    const activeView = hasCompleted ? enteringView : leavingView;\n    if (activeView) {\n      this.unmountInactiveViews(activeView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction,\n    };\n  }\n  /**\n   * Inserts a view at the specified index.\n   *\n   * When the view already is in the stack it will be moved to the new position.\n   *\n   * @param view The view to insert.\n   * @param index The index where to insert the view.\n   */\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      assert(view.nav === this, 'view is not part of the nav');\n      // The view already in the stack, removes it.\n      views.splice(existingIndex, 1);\n      // and add it back at the requested index.\n      views.splice(index, 0, view);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      views.splice(index, 0, view);\n    }\n  }\n  /**\n   * Removes a view from the stack.\n   *\n   * @param view The view to remove.\n   */\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * Unmounts all inactive views after the specified active view.\n   *\n   * DOM WRITE\n   *\n   * @param activeView The view that is actively visible in the stack. Used to calculate which views to unmount.\n   */\n  unmountInactiveViews(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.pop({ direction: 'back', progressAnimation: true });\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = shouldComplete ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return h(\"slot\", null);\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return h(Host, { onClick: this.onClick });\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"]}