{"version":3,"mappings":"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","names":["hostRef","checkboxIds","ev","checked","value","color","disabled","el","indeterminate","inputId","name","label","labelId","labelText","d","part","path","_index_8e692445_js__WEBPACK_IMPORTED_MODULE_0__","onClick","role","mode","viewBox","htmlFor","type","id","onFocus","onBlur","ref","Checkbox","ios","md","hostContext","selector","closest","createColorClasses","cssClassMap","length","Object","assign","getClassList","classes","undefined","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","direction","animation","test","router","document","querySelector","preventDefault","push"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js","webpack:///node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-8e692445.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { d as getAriaLabel, e as renderHiddenInput } from './helpers-3b390e48.js';\nimport { c as createColorClasses, h as hostContext } from './theme-7670341c.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value,\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const { color, checked, disabled, el, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n    if (mode === 'md') {\n      path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n    }\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        interactive: true,\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]}